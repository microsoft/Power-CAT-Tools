PaneListScreen As screen:
    Fill: =ColorValue(AppTheme.palette.neutralLighterAlt)
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnHidden: |
        =Concurrent(
            If(
                cPane_0.Visible,
                Select(PrivCancelButtonCanvas),
                false
            ),
            Reset(ddFilter_3),
            Reset(txtSearch_2),
            Set(
                dropDownStatusForEditRoles,
                Blank()
            ),
           // Refresh('Risk Assessments'),
            Set(
                currentAssessmentGUID,
                Blank()
            ),
            Set(
                currentRoleId,
                Blank()
            ),
            Clear(currentRolePrivileges_temp),
            Clear(currentRolePrivilegesToBeDisplayed),
            UpdateContext(
                {
                    skipToUpdatedPage: false,
                    isRiskAssessmentProfileChanged: false,
                    isArchivedAssessmentSelected: false,
                    isRoleUpdatedSuccessfully: false,
                    currentSelectedSecurityRole: Blank(),
                    RoleId: Blank(),
                    RoleName: Blank(),
                    AssessmentId: Blank()
                }
            );
            
        );
    OnVisible: |
        =/* Load data for this page while spinner is loading */
        If(
            init <> true,
            UpdateContext(
                {
                    cardTitle: "Assessment details",
                    showSpinnerForEditRolesLabel: DVAssessmentPageLoc.loading
                }
            );
            
        );
        /*Set(
            currentRoleId,
            RoleId
        );*/
        Set(
            varPageNumber,
            1
        );
        Concurrent(
            UpdateContext(
                {
                    showMessageBarForPaneScreen: true,
                    showPane: false,
                    showInProgressMessageBar: false,
                    showBaseLineSettingsMessageBar: false,
                    showWarningMessageBar: true,
                    skipToUpdatedPage: false,
                    isArchivedAssessmentSelected: false,
                    makeDetailsListEditableForRoleUpdation: true,
                    showMessageBarForRoleUpdation: false,
                    isRoleUpdatedSuccessfully: false,
                    isRiskAssessmentProfileChanged: false,
                    triggerRetrieveRolePrivileges: !triggerRetrieveRolePrivileges,
                    triggerUpdateRolePrivileges: false,
                    selectedRoleRiskAssessmentProfileId: LookUp(
                        AllRiskAssessmentsFromDataverse,
                        'Security Role'.Role = RoleId && 'Is Archived' = 'Is Archived (Risk Assessments)'.No
                    ).'Risk Assessment Setting'.'Risk Assessment Setting',
                    currentSelectedAssesment: LookUp(
                        AllRiskAssessmentsFromDataverse,
                        'Risk Assessment' = AssessmentId
                    ),
                    currentSelectedSecurityRole: LookUp(
                        'Security Roles',
                        Role = RoleId
                    ),
                    hidePanelBackButton: true
                }
            ),
            Reset(txtSearch_2)
        );
        ClearCollect(
            col_privilegesLevel,
            securityPrivilegesLevel
        );
        ClearCollect(
            currentRolePrivileges_temp,
            SelectedAssessmentRolePrivileges
        );
        ClearCollect(
            currentRolePrivilegesToBeDisplayed,
            currentRolePrivileges_temp
        );
        If(
            !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes",
            false,
            Notify(
                DVAssessmentPageLoc.privilegesUpdateWarningNotificationWhenAutoScanIsOff,
                NotificationType.Warning,
                5000
            )
        );
        UpdateContext(
            {
                init: true,
                showSpinnerForEditRolesLabel: Blank()
            }
        );

    cAppFrame_4 As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: =ColorValue(AppTheme.palette.neutralLighterAlt)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingRight: =Self.PaddingLeft
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =1

        cTopNav_5 As groupContainer.horizontalAutoLayoutContainer:
            Fill: =ColorValue(AppTheme.palette.neutralLighter)
            FillPortions: =FlexOff
            Height: =60
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =24
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =20
            PaddingRight: =20
            ZIndex: =1

            "AutoWidthLabel1_7 As 'Auto Width Label (1.1.39)'":
                DisplayMode: =DisplayMode.Edit
                FontSize: =18
                FontSizeUnits: ='PowerCAT.AutoWidthLabel.FontSizeUnits'.Px
                FontWeight: ="600"
                Height: =24
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Text: =_featureName
                Tooltip: ="AutoWidthLabel_Desc"
                Width: =Self.AutoWidth
                X: =0
                Y: =0
                ZIndex: =1

            "TabList1_5 As 'Tab list'.pcfdataset":
                AccessibleLabel: ="Panelistscreentablist"
                DefaultSelectedItems: |-
                    =LookUp(
                        Nav,
                        ThisRecord.Screen = ListScreen
                    )
                DisplayMode: =DisplayMode.Edit
                FillPortions: =FlexOn
                Height: =55
                Items: =Nav
                LayoutMinHeight: =55
                LayoutMinWidth: =280
                OnChange: =Navigate(Self.Selected.Screen);
                Width: =280
                X: =0
                Y: =0
                ZIndex: =2

                DisplayName1_5 As PowerApps_CoreControls_TabListTemplate_dataField.textualColumn:
                    FieldDisplayName: ="DisplayName"
                    FieldName: ="DisplayName"
                    FieldType: ="s"
                    Order: =1
                    ZIndex: =1

            Container11_8 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =
                BorderStyle: =BorderStyle.None
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =8
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =3

                ButtonCanvas1 As Button:
                    Appearance: ='ButtonCanvas.Appearance'.Subtle
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    Icon: ="Print"
                    Layout: ='ButtonCanvas.Layout'.IconOnly
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =//Navigate(PrintScreen,ScreenTransition.None, {PrivilegesListToBeDisplayed:PrivilegesListToBeDisplayed,RoleName:RoleName,AssessmentHistory:First(riskAssessmentHistory)}) //@deniseEdit - This button to navigate to new print page
                    Text: ="Print"
                    Visible: =false
                    Width: =42
                    X: =409
                    Y: =0
                    ZIndex: =1

                "LearnIcon_2 As 'Fluent Icon (1.1.39)'":
                    AccessibilityLabel: =DVAssessmentPageLoc.learnButtonText
                    DisplayMode: =DisplayMode.Edit
                    FontColor: |-
                        ="#424242"
                    Height: =Parent.Height
                    HoverFillColor: =AppTheme.palette.neutralLight
                    HoverFontColor: |-
                        ="#424242"
                    HoverIconColor: |-
                        ="#424242"
                    IconColor: |-
                        ="#424242"
                    IconName: ="BookAnswers"
                    IconSize: =20
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: |-
                        =Launch(
                            "https://aka.ms/dvacc/riskassess",
                            {},
                            LaunchTarget.New
                        )
                    Tooltip: =DVAssessmentPageLoc.learnButtonText
                    Width: =32
                    X: =0
                    Y: =0
                    ZIndex: =2

                "QuestionIcon_2 As 'Fluent Icon (1.1.39)'":
                    AccessibilityLabel: =DVAssessmentPageLoc.helpButtonText
                    DisplayMode: =DisplayMode.Edit
                    FontColor: |-
                        ="#424242"
                    Height: =Parent.Height
                    HoverFillColor: =AppTheme.palette.neutralLight
                    HoverFontColor: |-
                        ="#424242"
                    HoverIconColor: |-
                        ="#424242"
                    IconColor: |-
                        ="#424242"
                    IconName: ="StatusCircleQuestionMark"
                    IconSize: =28
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: |-
                        =Launch(
                            "https://aka.ms/dvacc/riskassess/help",
                            {},
                            LaunchTarget.New
                        )
                    Tooltip: =DVAssessmentPageLoc.helpButtonText
                    Width: =32
                    X: =0
                    Y: =0
                    ZIndex: =3

                "BugIcon_2 As 'Fluent Icon (1.1.39)'":
                    AccessibilityLabel: ="Report a bug"
                    DisplayMode: =DisplayMode.Edit
                    FontColor: |-
                        ="#424242"
                    Height: =Parent.Height
                    HoverFillColor: =AppTheme.palette.neutralLight
                    HoverFontColor: |-
                        ="#424242"
                    HoverIconColor: |-
                        ="#424242"
                    IconColor: |-
                        ="#424242"
                    IconName: ="Bug"
                    IconSize: =20
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: |-
                        =Launch(
                            "https://aka.ms/dvacc/riskassess/bug",
                            {},
                            LaunchTarget.New
                        )
                    Tooltip: ="Report a bug"
                    Width: =32
                    X: =0
                    Y: =0
                    ZIndex: =4

        FluentMessageBar_Baselinesettingschange As FluentMessageBar.pcfdataset:
            Body: =baseLinseSettingsMessageBarBody
            DisplayMode: =DisplayMode.Edit
            Height: =Self.AutoHeight
            Intent: ='PowerCAT.FluentMessageBar.Intent'.success
            Items: |-
                =Table(
                    {
                        ItemKey: "baselineSettingsMessageBarButtonName",
                        ItemDisplayName: baseLinseSettingsMessageBarButtonName,
                        //ItemIconName: "Mail",
                        ItemAppearance: "",
                        ItemIconStyle: "Regular",
                        ItemTooltip: "Send mail",
                        ItemVisible: true,
                        ItemDisabled: false
                    }
                )
            LayoutMinHeight: =Self.AutoHeight
            LayoutMinWidth: =300
            OnDismiss: |-
                =UpdateContext({showBaseLineSettingsMessageBar:false});
            OnSelect: |-
                =Switch(
                    Self.Selected.ItemKey,/* Action for Key 'baselineSettingsMessageBarButtonName' */
                    "baselineSettingsMessageBarButtonName",
                   If(
                    baseLinseSettingsMessageBarButtonName = "Re-scan",
                    UpdateContext(
                        {
                            init: false,
                            showSpinnerForEditRolesColor: RGBA(
                                255,
                                255,
                                255,
                                0.7
                            ),
                            showSpinnerForEditRolesLabel: "Queuing scan...."
                        }
                    );
                    Patch(
                        'Risk Assessments',
                        LookUp(
                            'Risk Assessments',
                            'Risk Assessment' = First(latestAssessmentForaRole).'Risk Assessment'
                        ),
                        {'Is Archived': 'Is Archived (Risk Assessments)'.Yes}
                    );
                    Set(
                        newAssessment,
                        Patch(
                            'Risk Assessments',
                            Defaults('Risk Assessments'),
                            {
                                'Is Archived': 'Is Archived (Risk Assessments)'.No,
                                'Security Role': currentSelectedSecurityRole,
                                'Risk Assessment Setting': LookUp(
                                    'Risk Assessment Settings',
                                    'Risk Assessment Setting' = selectedRoleRiskAssessmentProfileId
                                ),
                                'Status Reason': 'Status Reason (Risk Assessments)'.'In Progress'
                            }
                        )
                    );
                    Clear(SelectedAssessmentRolePrivileges);
                    Set(
                        currentAssessmentGUID,
                        newAssessment.'Risk Assessment'
                    );
                    Set(
                        currentAssessmentSettingGUID,
                        newAssessment.'Risk Assessment Setting'.'Risk Assessment Setting'
                    );
                    Refresh('Risk Assessments');
                    UpdateContext(
                        {
                            AssessmentId: newAssessment.'Risk Assessment',
                            currentSelectedAssesment: LookUp(
                                'Risk Assessments',
                                'Risk Assessment' = newAssessment.'Risk Assessment'
                            ),
                            init: true,
                            showMessageBarForRoleUpdation: true,
                            makeDetailsListEditableForRoleUpdation: false,
                            showSpinnerForEditRolesColor: Blank(),
                            showSpinnerForEditRolesLabel: Blank()
                        }
                    );
                    Notify(
                        "Scan has started successfully. Please wait a few minutes for the scan to complete. Refresh the page to view the updated status once it's ready.",
                        NotificationType.Information,
                        5000
                    );
                    ,
                    UpdateContext(
                        {
                            latestRiskRecord: LookUp(
                                'Risk Assessments',
                                'Security Role'.Role = GUID(RoleId) && 'Is Archived' = 'Is Archived (Risk Assessments)'.No
                            )
                        }
                    );
                    If(
                        isArchivedAssessmentSelected,
                        Reset(cmbRiskAssessmentHistory);
                        Set(
                            varPageNumber,
                            1
                        );
                        Set(
                            currentAssessmentGUID,
                            cmbRiskAssessmentHistory.Selected.AssessmentId
                        );
                        Set(
                            AssessmentId,
                            cmbRiskAssessmentHistory.Selected.AssessmentId
                        );
                        Select(btnRefresh_PrivilegesListScreen);
                        UpdateContext(
                            {
                                isArchivedAssessmentSelected: false,
                                makeDetailsListEditableForRoleUpdation: true,
                                showMessageBarForRoleUpdation: false
                            }
                        );
                        ,
                        If(
                            latestRiskRecord.'Status Reason' = 'Status Reason (Risk Assessments)'.'In Progress' || !(CountRows(SelectedAssessmentRolePrivileges) = CountRows(currentRolePrivileges_temp)),
                            UpdateContext({showInProgressMessageBar: true});
                            Refresh('Risk Assessments');
                            ,
                            Set(
                                currentAssessmentGUID,
                                latestRiskRecord.'Risk Assessment'
                            );
                            Set(
                                AssessmentId,
                                latestRiskRecord.'Risk Assessment'
                            );
                            Select(btnRefresh_PrivilegesListScreen);
                            Reset(cmbRiskAssessmentHistory);
                            UpdateContext(
                                {
                                    showInProgressMessageBar: false,
                                    isRoleUpdatedSuccessfully: false,
                                    makeDetailsListEditableForRoleUpdation: true,
                                    showMessageBarForRoleUpdation: false
                                }
                            );
                        )
                    );
                    
                ),
                    /* Default action */
                    false
                )
            Title: ="Successfully updated the baseline"
            Visible: =showBaseLineSettingsMessageBar
            Width: =300
            X: =0
            Y: =0
            ZIndex: =2

        FluentMessageBarInProgressNotification As FluentMessageBar.pcfdataset:
            Body: ="Scanning of the role is still in inprogress State. Please try after some time"
            DisplayMode: =DisplayMode.Edit
            Height: =Self.AutoHeight
            Items: |-
                =Table(
                    {
                        ItemKey: "mail",
                        ItemDisplayName: "Contact",
                        ItemIconName: "Mail",
                        ItemAppearance: "",
                        ItemIconStyle: "Regular",
                        ItemTooltip: "Send mail",
                        ItemVisible: false,
                        ItemDisabled: false
                    },
                    {
                        ItemKey: "chat",
                        ItemDisplayName: "Chat",
                        ItemIconName: "Chat",
                        ItemAppearance: "",
                        ItemIconStyle: "Regular",
                        ItemTooltip: "Chat",
                        ItemVisible: false
                    }
                )
            LayoutMinHeight: =Self.AutoHeight
            LayoutMinWidth: =300
            OnDismiss: |-
                =UpdateContext({showInProgressMessageBar:false});
            OnSelect: =Switch(Self.Selected.ItemKey,/* Action for Key 'mail' */"mail",Notify("Contact clicked"),/* Action for 'chat' */"chat",Notify("Chat clicked"),/* Default action */  Notify("Unrecognized button clicked"))
            Visible: =showInProgressMessageBar
            Width: =300
            X: =0
            Y: =0
            ZIndex: =3

        FluentMessageBar_ViewLatestVersion As FluentMessageBar.pcfdataset:
            Body: ="This risk assessment displays an older version. You can make modifications to the security role using the latest version for updated controls and settings."
            DisplayMode: =DisplayMode.Edit
            Height: =Self.AutoHeight
            Intent: ='PowerCAT.FluentMessageBar.Intent'.warning
            Items: |-
                =Table(
                    {
                        ItemKey: "viewlatestversion",
                        ItemDisplayName: "View latest version",
                        //ItemIconName: "Mail",
                        ItemAppearance: "",
                        ItemIconStyle: "Regular",
                        ItemTooltip: "Send mail",
                        ItemVisible: true,
                        ItemDisabled: false
                    }
                )
            LayoutMinHeight: =Self.AutoHeight
            LayoutMinWidth: =300
            OnDismiss: |-
                =UpdateContext({showMessageBarForPaneScreen:false});
            OnSelect: |-
                =Switch(
                    Self.Selected.ItemKey,/* Action for Key 'viewlatestversion' */
                    "viewlatestversion",
                    UpdateContext(
                        {
                            latestRiskRecord: LookUp(
                                'Risk Assessments',
                                'Security Role'.Role = GUID(RoleId) && 'Is Archived' = 'Is Archived (Risk Assessments)'.No
                            ),
                            showBaseLineSettingsMessageBar: false
                        }
                    );
                    If(
                        isArchivedAssessmentSelected,
                        Reset(cmbRiskAssessmentHistory);
                        Set(
                            varPageNumber,
                            1
                        );
                        Set(
                            currentAssessmentGUID,
                            cmbRiskAssessmentHistory.Selected.AssessmentId
                        );
                        Set(
                            AssessmentId,
                            cmbRiskAssessmentHistory.Selected.AssessmentId
                        );
                        Select(btnRefresh_PrivilegesListScreen);
                        UpdateContext(
                            {
                                isArchivedAssessmentSelected: false,
                                makeDetailsListEditableForRoleUpdation: true,
                                showMessageBarForRoleUpdation: false
                            }
                        );
                        ,
                        If(
                            latestRiskRecord.'Status Reason' = 'Status Reason (Risk Assessments)'.'In Progress' || !(CountRows(SelectedAssessmentRolePrivileges) = CountRows(currentRolePrivileges_temp)),
                            UpdateContext({showInProgressMessageBar: true});
                            Refresh('Risk Assessments');
                            ,
                            Set(
                                currentAssessmentGUID,
                                latestRiskRecord.'Risk Assessment'
                            );
                            Set(
                                AssessmentId,
                                latestRiskRecord.'Risk Assessment'
                            );
                            Select(btnRefresh_PrivilegesListScreen);
                            Reset(cmbRiskAssessmentHistory);
                            UpdateContext(
                                {
                                    selectedRoleRiskAssessmentProfileId: latestRiskRecord.'Risk Assessment Setting'.'Risk Assessment Setting',
                                    showInProgressMessageBar: false,
                                    isRoleUpdatedSuccessfully: false,
                                    makeDetailsListEditableForRoleUpdation: true,
                                    showMessageBarForRoleUpdation: false
                                }
                            );
                        )
                    );
                    ,/* Default action */
                    false
                )
            Visible: =(showMessageBarForPaneScreen&&!cmbRiskAssessmentHistory.Selected.IsLatest)||showMessageBarForRoleUpdation
            Width: =300
            X: =0
            Y: =0
            ZIndex: =5

        cMainContent_5 As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            ZIndex: =6

            cScreenContainer_2 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignStretch
                Fill: =ColorValue(AppTheme.palette.neutralLighterAlt)
                FillPortions: =FlexOn
                Height: =Max(div_3.Y, App.ActiveScreen.Height - Self.Y)
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =0   
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingRight: =Self.PaddingLeft
                Visible: =hidePanelBackButton
                Width: =Parent.Width - Self.X * 2
                ZIndex: =1

                cPageHeaderMain_2 As groupContainer.verticalAutoLayoutContainer:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    Fill: =ColorValue(AppTheme.palette.neutralLighterAlt)
                    FillPortions: =0
                    Height: =div_12.Y + 1
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =Min(16, Margins)
                    PaddingRight: =Self.PaddingLeft
                    PaddingTop: =//16
                    Width: =1181
                    X: =92
                    Y: =40
                    ZIndex: =2

                    cPageHeaderTop_5 As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =FlexOff
                        Height: =75
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =1042
                        X: =68
                        Y: =52
                        ZIndex: =1

                        cPageHeaderTitle_7 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =FlexOn
                            Height: =cHeaderText_10.Height
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutGap: =16
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =431
                            X: =36
                            Y: =40
                            ZIndex: =1

                            ButtonCanvas4_10 As Button:
                                AccessibleLabel: ="Back"
                                Appearance: ='ButtonCanvas.Appearance'.Subtle
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Icon: ="ArrowLeft"
                                Layout: ='ButtonCanvas.Layout'.IconOnly
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |
                                    =Back();
                                    UpdateContext(
                                        {
                                            currentSelectedSecurityRole: Blank(),
                                            showPane: false
                                        }
                                    );
                                Text: =
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =1

                            cHeaderText_10 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                FillPortions: =0
                                Height: =rDivider_PageHeader_10.Y
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =4
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width - Self.X
                                X: =1-1
                                Y: =1-1 
                                ZIndex: =2

                                h2Title_10 As Text:
                                    Align: ='TextCanvas.Align'.Start
                                    AlignInContainer: =AlignInContainer.Start
                                    AutoHeight: =true
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =36
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Size: =20
                                    Text: =RoleName
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =Parent.Width - Self.X * 2
                                    X: =394.49
                                    Y: =0
                                    ZIndex: =1

                                Label3_12 As label:
                                    AlignInContainer: =AlignInContainer.Start
                                    AutoHeight: =true
                                    BorderColor: =RGBA(0, 18, 107, 1)
                                    Color: |-
                                        =ColorValue("#424242")
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    Font: =Font.'Segoe UI'
                                    LineHeight: =1.4
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =Switch(App.ActiveScreen.Size,ScreenSize.Small,11,ScreenSize.Medium,12,14)*0.75
                                    Text: ="Subtext"
                                    VerticalAlign: =VerticalAlign.Top
                                    Visible: =//!IsBlank(Self.Text)
                                    Width: =Min(600, Parent.Width)
                                    X: =394.49
                                    ZIndex: =2

                                rDivider_PageHeader_10 As rectangle:
                                    BorderColor: =App.Theme.Colors.Darker40
                                    Fill: =RGBA(0,0,0,0)
                                    Height: =1
                                    Width: =Parent.Width - Self.X * 2
                                    X: =72
                                    Y: =52
                                    ZIndex: =3

                        btnScanRole As Button:
                            AccessibleLabel: =DVAssessmentPageLoc.scanRoleButtonText
                            Align: =Align.Center
                            AlignInContainer: =AlignInContainer.Center
                            Appearance: ='ButtonCanvas.Appearance'.Subtle
                            BasePaletteColor: =
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Icon: ="Send"
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        init: false,
                                        showSpinnerForEditRolesColor: RGBA(
                                            255,
                                            255,
                                            255,
                                            0.7
                                        ),
                                        showSpinnerForEditRolesLabel: DVAssessmentPageLoc.pleaseWaitLoadingText
                                    }
                                );
                                Patch(
                                    'Risk Assessments',
                                    LookUp(
                                        AllRiskAssessmentsFromDataverse,
                                        'Risk Assessment' = AssessmentId
                                    ),
                                    {'Is Archived': 'Is Archived (Risk Assessments)'.Yes
                                           /* 'Exception Flagged': 'Exception Flagged (Risk Assessments)'.No,
                                            'Exception Reason': " ",
                                            'Exception Approved By': Blank(),
                                            'Exception Approved On': Blank(),
                                            'Exception Flagged By': Blank(),
                                            'Exception Flagged On': Blank()*/
                                }
                                );
                                Set(
                                    newAssessment,
                                    Patch(
                                        'Risk Assessments',
                                        Defaults('Risk Assessments'),
                                        {
                                            'Is Archived': 'Is Archived (Risk Assessments)'.No,
                                            'Security Role': currentSelectedSecurityRole,
                                            'Risk Assessment Setting': LookUp(
                                                'Risk Assessment Settings',
                                                'Risk Assessment Setting' = selectedRoleRiskAssessmentProfileId
                                            ),
                                            'Status Reason': 'Status Reason (Risk Assessments)'.'In Progress'
                                        }
                                    )
                                );
                                Refresh('Risk Assessments');
                                UpdateContext(
                                    {
                                        AssessmentId: newAssessment.'Risk Assessment',
                                        currentSelectedAssesment: LookUp(
                                            AllRiskAssessmentsFromDataverse,
                                            'Risk Assessment' = newAssessment.'Risk Assessment'
                                        ),
                                        init: true,
                                        showSpinnerForEditRolesColor: Blank(),
                                        showSpinnerForEditRolesLabel: Blank()/*,
                                        IsExcptionApproved: false,
                                        isExceptionUpdatedOnDataverse: false*/
                                    }
                                );
                                Notify(
                                    DVAssessmentPageLoc.scanRoleNotificationText,
                                    NotificationType.Information,
                                    5000
                                );
                            Text: =DVAssessmentPageLoc.scanRoleButtonText
                            Visible: =false
                            Width: =120
                            X: =0
                            Y: =0
                            ZIndex: =2

                        tlbRight_12 As Toolbar.pcfdataset:
                            AccessibleLabel: ="Toolbar"
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =0.2
                            Height: =44
                            Items: |-
                                =Table(
                                    {
                                        ItemKey: "refresh",
                                        ItemDisplayName: "Refresh",
                                        ItemIconName: "ArrowClockwise",
                                        ItemAppearance: "Subtle",
                                        ItemIconStyle: "Regular"
                                    },
                                    {
                                        ItemKey: "scanrole",
                                        ItemDisplayName: DVAssessmentPageLoc.scanRoleButtonText,
                                        ItemIconName: "Send",
                                        ItemDisabled: !isLoggedInUserSysAdmin,
                                        ItemAppearance: "Subtle",
                                        ItemIconStyle: "Regular",
                                        ItemTooltip: "Scan role"
                                    }
                                )
                            LayoutMinHeight: =55
                            LayoutMinWidth: =280
                            OnSelect: |-
                                =Switch(
                                    Self.Selected.ItemKey,
                                    /* Action for scanallroles */
                                    "scanrole",
                                    UpdateContext(
                                        {
                                            init: false,
                                            showSpinnerForEditRolesColor: RGBA(
                                                255,
                                                255,
                                                255,
                                                0.7
                                            ),
                                            showSpinnerForEditRolesLabel: "Queuing scan...."
                                        }
                                    );
                                    Patch(
                                        'Risk Assessments',
                                        LookUp(
                                            'Risk Assessments',
                                            'Risk Assessment' = First(latestAssessmentForaRole).'Risk Assessment'
                                        ),
                                        {'Is Archived': 'Is Archived (Risk Assessments)'.Yes}
                                    );
                                    Set(
                                        newAssessment,
                                        Patch(
                                            'Risk Assessments',
                                            Defaults('Risk Assessments'),
                                            {
                                                'Is Archived': 'Is Archived (Risk Assessments)'.No,
                                                'Security Role': currentSelectedSecurityRole,
                                                'Risk Assessment Setting': LookUp(
                                                    'Risk Assessment Settings',
                                                    'Risk Assessment Setting' = selectedRoleRiskAssessmentProfileId
                                                ),
                                                'Status Reason': 'Status Reason (Risk Assessments)'.'In Progress'
                                            }
                                        )
                                    );
                                    Clear(SelectedAssessmentRolePrivileges);
                                    Set(
                                        currentAssessmentGUID,
                                        newAssessment.'Risk Assessment'
                                    );
                                    Set(
                                        currentAssessmentSettingGUID,
                                        newAssessment.'Risk Assessment Setting'.'Risk Assessment Setting'
                                    );
                                    Refresh('Risk Assessments');
                                    UpdateContext(
                                        {
                                            AssessmentId: newAssessment.'Risk Assessment',
                                            currentSelectedAssesment: LookUp(
                                                'Risk Assessments',
                                                'Risk Assessment' = newAssessment.'Risk Assessment'
                                            ),
                                            init: true,
                                            showMessageBarForRoleUpdation: true,
                                            makeDetailsListEditableForRoleUpdation: false,
                                            showSpinnerForEditRolesColor: Blank(),
                                            showSpinnerForEditRolesLabel: Blank()
                                        }
                                    );
                                    Notify(
                                        "Scan has started successfully. Please wait a few minutes for the scan to complete. Refresh the page to view the updated status once it's ready.",
                                        NotificationType.Information,
                                        5000
                                    );
                                    ,
                                    "refresh",
                                    Concurrent(
                                        Refresh('Risk Assessment Settings'),
                                        Refresh('Security Roles'),
                                        Refresh('Risk Assessments'),
                                        Refresh('Environment Variable Definitions'),
                                        Refresh('Environment Variable Values'),
                                        UpdateContext(
                                            {
                                                showPrvEditContainer: false,
                                                ctxTableEvent: "ClearSelection" & Text(Rand()),
                                                currentSelectedPrivilege: Blank()
                                            }
                                        );
                                    );
                                    UpdateContext(
                                        {
                                            init: false,
                                            showSpinnerForEditRolesColor: RGBA(
                                                255,
                                                255,
                                                255,
                                                0.7
                                            ),
                                            showSpinnerForEditRolesLabel: DVAssessmentPageLoc.pleaseWaitLoadingText
                                        }
                                    );
                                    UpdateContext(
                                        {
                                            currentSelectedAssesment: LookUp(
                                                'Risk Assessments',
                                                'Risk Assessment' = cmbRiskAssessmentHistory.Selected.AssessmentId
                                            ),
                                            showLoader: true,
                                            showPane: false
                                        }
                                    );
                                    Set(
                                        currentAssessmentGUID,
                                        currentSelectedAssesment.'Risk Assessment'
                                    );
                                    Set(
                                        AssessmentId,
                                        currentSelectedAssesment.'Risk Assessment'
                                    );
                                    ClearCollect(
                                        currentRolePrivileges_temp,
                                        SelectedAssessmentRolePrivileges
                                    );
                                    ClearCollect(
                                        currentRolePrivilegesToBeDisplayed,
                                        currentRolePrivileges_temp
                                    );
                                    If(
                                        !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes",
                                        false,
                                        Notify(
                                            DVAssessmentPageLoc.privilegesUpdateWarningNotificationWhenAutoScanIsOff,
                                            NotificationType.Warning,
                                            5000
                                        )
                                    );
                                    UpdateContext(
                                        {
                                            showLoader: false,
                                            init: true,
                                            showSpinnerForEditRolesColor: Blank(),
                                            showSpinnerForEditRolesLabel: Blank()
                                        }
                                    );
                                    ,
                                    /* Default action */
                                    false
                                )
                            Padding: ='Toolbar.Padding'.Large
                            Width: =180//212
                            X: =1020
                            Y: =0
                            ZIndex: =3

                    div_12 As rectangle:
                        AlignInContainer: =AlignStart
                        BorderColor: =App.Theme.Colors.Darker40
                        Fill: =ColorValue(AppTheme.palette.neutralLight)
                        Height: =1
                        Width: =Parent.Width - Self.X * 2
                        X: =84
                        Y: =256
                        ZIndex: =2

                div_3 As rectangle:
                    BorderColor: =App.Theme.Colors.Darker40
                    Fill: =RGBA(0,0,0,0)
                    Height: =2
                    Width: =Parent.Width - Self.X * 2
                    X: =84
                    Y: =256
                    ZIndex: =3

                Container5 As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =FlexOff
                    Height: =cBuffer_8.Y //Max(cCard_14.Height, cSubgrid_1.Height) + 24
                    LayoutGap: =16
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    LayoutWrap: =true
                    PaddingBottom: =16
                    PaddingLeft: =Min(16, Margins)
                    PaddingRight: =Self.PaddingLeft
                    PaddingTop: =16
                    ZIndex: =4

                    cCard_14 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.Light
                        Fill: =RGBA(255, 255, 255, 1)
                        FillPortions: =FlexOff
                        Height: =rCardDivider_6.Y //Parent.Height - Self.X * 2
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =8
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =16
                        PaddingLeft: =16
                        PaddingRight: =16
                        PaddingTop: =16
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Width: =If(App.ActiveScreen.Size <= ScreenSize.Medium, Parent.Width - Self.X * 2, 320)
                        X: =92
                        Y: =-18
                        ZIndex: =1

                        cCardTitle_1 As groupContainer.horizontalAutoLayoutContainer:
                            FillPortions: =0
                            Height: =32
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            X: =1-1
                            Y: =1-1
                            ZIndex: =1

                            TextCanvas1_7 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FillPortions: =FlexOn
                                Height: =24
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =16
                                Text: =If(IsBlankOrError(cardTitle),"Assessment details",cardTitle)
                                VerticalAlign: =VerticalAlign.Middle
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =96
                                Wrap: =false
                                X: =0
                                Y: =0
                                ZIndex: =1

                            "InfoButtonCanvas1_7 As 'Information button'":
                                AccessibleLabel: ="InfoButton"
                                Content: ="Meet compliance by updating the security role privileges to the recommended access levels. You can update privileges individually. If there’s a good reason for having a higher privilege level than recommended, flag the role as an exception."//Need LOC
                                DisplayMode: =DisplayMode.Edit
                                Height: =28
                                LayoutMinHeight: =32
                                LayoutMinWidth: =32
                                Width: =24
                                X: =0
                                Y: =0
                                ZIndex: =2

                        cCardSection_6 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignStretch
                            FillPortions: =FlexOff
                            Height: =rCardDivider_8.Y//220
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =12
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =288
                            Y: =-4
                            ZIndex: =2

                            cmbRiskAssessmentHistory As Combobox.pcfdataset:
                                AccessibleLabel: ="ComboboxRiskAssessmentHistory"
                                Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                                BorderColor: =RGBA(209, 209, 209, 1)
                                BorderStyle: =BorderStyle.Solid
                                BorderThickness: =1
                                DefaultSelectedItems: |-
                                    =FirstN(
                                        riskAssessmentHistory,
                                        1
                                    )
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Normal
                                Height: =32
                                IsSearchable: =false
                                Items: =riskAssessmentHistory
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                OnChange: |
                                    =Set(
                                        varPageNumber,
                                        1
                                    );
                                    UpdateContext({selectedRoleRiskAssessmentProfileId: cmbRiskAssessmentHistory.Selected.AssessmentSettingId});
                                    Set(
                                        currentAssessmentGUID,
                                        cmbRiskAssessmentHistory.Selected.AssessmentId
                                    );
                                    Set(
                                        AssessmentId,
                                        cmbRiskAssessmentHistory.Selected.AssessmentId
                                    );
                                    Select(btnRefresh_PrivilegesListScreen);
                                    Reset(ddFilter_3);
                                    If(
                                        cmbRiskAssessmentHistory.Selected.AssessmentId <> First(latestAssessmentForaRole).'Risk Assessment',
                                        UpdateContext(
                                            {
                                                showMessageBarForPaneScreen: true,
                                                makeDetailsListEditableForRoleUpdation: false,
                                                showMessageBarForRoleUpdation: false,
                                                isArchivedAssessmentSelected: true
                                            }
                                        );
                                        ,
                                        UpdateContext(
                                            {
                                                showBaseLineSettingsMessageBar:false,
                                                showMessageBarForPaneScreen: false,
                                                makeDetailsListEditableForRoleUpdation: true,
                                                showMessageBarForRoleUpdation: false,
                                                isArchivedAssessmentSelected: false
                                            }
                                        );
                                        
                                    );
                                TriggerOutput: ='ComboboxCanvas.TriggerOutput'.Keypress
                                Width: =Parent.Width
                                X: =0
                                Y: =0
                                ZIndex: =1

                                AssessmentDate1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="AssessmentDate"
                                    FieldName: ="AssessmentDate"
                                    FieldType: ="s"
                                    Order: =1
                                    ZIndex: =1

                                AssessmentId1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="AssessmentId"
                                    FieldName: ="AssessmentId"
                                    FieldType: ="g"
                                    Order: =2
                                    ZIndex: =2

                                IsLatest1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="IsLatest"
                                    FieldName: ="IsLatest"
                                    FieldType: ="b"
                                    Order: =3
                                    ZIndex: =3

                            AssessmentSeverityContainer As groupContainer.horizontalAutoLayoutContainer:
                                BorderColor: =
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =80
                                LayoutGap: =8
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =12
                                PaddingTop: =12
                                ZIndex: =2

                                Container7 As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Center
                                    DropShadow: =DropShadow.Light
                                    Fill: |-
                                        =Switch(
                                            txtRoleSeverity.Text,
                                            /* Action for Key 'new' */
                                            "Critical",
                                            RGBA(
                                                216,
                                                58,
                                                0,
                                                1
                                            ),
                                            /* Action for 'edit' */
                                            "High",
                                            RGBA(
                                                255,
                                                147,
                                                73,
                                                1
                                            ),
                                            "Moderate",
                                            RGBA(
                                                255,
                                                186,
                                                1,
                                                1
                                            ),
                                            "Low",
                                            RGBA(
                                                2,
                                                157,
                                                204,
                                                1
                                            ),
                                            "No Risk",
                                            RGBA(
                                                24,
                                                171,
                                                88,
                                                1
                                            ),
                                            RGBA(255,255,255,1)
                                        )
                                    FillPortions: =0
                                    Height: =56
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Width: =4
                                    ZIndex: =1

                                RiskContainer As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Start
                                    BorderColor: =
                                    BorderStyle: =BorderStyle.None
                                    FillPortions: =0
                                    Height: =Parent.Height-12
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    Width: =Parent.Width-Container7.Width-10
                                    ZIndex: =2

                                    txtRoleSeverity As Text:
                                        DisplayMode: =DisplayMode.Edit
                                        FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                        Height: =LookUp(_typeramp,name="Title2").lineHeight
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        PaddingBottom: =0
                                        PaddingLeft: =0
                                        PaddingRight: =0
                                        PaddingTop: =0
                                        Size: =LookUp(_typeramp,name="Title2").fontSize
                                        Text: |-
                                            =If(
                                                CountRows(
                                                    Filter(
                                                        currentRolePrivileges_temp,
                                                        NewSeverity = Text('Assessed Risk Level (Risk Assessments)'.Critical)
                                                    )
                                                ) > 0,
                                                "Critical",
                                                If(
                                                    CountRows(
                                                        Filter(
                                                            currentRolePrivileges_temp,
                                                            NewSeverity = Text('Assessed Risk Level (Risk Assessments)'.High)
                                                        )
                                                    ) > 0,
                                                    "High",
                                                    If(
                                                        CountRows(
                                                            Filter(
                                                                currentRolePrivileges_temp,
                                                                NewSeverity = Text('Assessed Risk Level (Risk Assessments)'.Moderate)
                                                            )
                                                        ) > 0,
                                                        "Moderate",
                                                        If(
                                                            CountRows(
                                                                Filter(
                                                                    currentRolePrivileges_temp,
                                                                    NewSeverity = Text('Assessed Risk Level (Risk Assessments)'.Low)
                                                                )
                                                            ) > 0,
                                                            "Low",
                                                            "No Risk"
                                                        )
                                                    )
                                                )
                                            )
                                        Weight: =LookUp(_typeramp,name="Title2").fontWeight
                                        Width: =250
                                        Wrap: =false
                                        X: =7
                                        Y: =464
                                        ZIndex: =1

                                    txtCaption1_2 As Text:
                                        DisplayMode: =DisplayMode.Edit
                                        FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                        Height: =LookUp(_typeramp,name="Caption1").lineHeight
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        PaddingBottom: =0
                                        PaddingLeft: =0
                                        PaddingRight: =0
                                        PaddingTop: =0
                                        Size: =LookUp(_typeramp,name="Caption1").fontSize
                                        Text: ="At least one privilege is rated as a " & txtRoleSeverity.Text &" risk"
                                        Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                        Width: =250
                                        Wrap: =false
                                        X: =7
                                        Y: =94
                                        ZIndex: =2

                            "StackedBarChart1 As 'Fluent Stacked bar Chart (1.1.39) Preview'.pcfdataset":
                                CustomColors: =true
                                DisplayMode: =DisplayMode.Edit
                                Height: =55
                                Items: =CurrentRoleSeverityStatusBarChart
                                LayoutMinHeight: =180
                                LayoutMinWidth: =350
                                Title: ="Risk breakdown"
                                Width: =Parent.Width
                                X: =0
                                Y: =0
                                ZIndex: =3

                                "ItemValue5_1 As 'cat_PowerCAT.StackedBarChartTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="ItemValue"
                                    FieldName: ="ItemValue"
                                    FieldType: ="n"
                                    Order: =4
                                    ZIndex: =1

                                "ItemTitle2_1 As 'cat_PowerCAT.StackedBarChartTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="ItemTitle"
                                    FieldName: ="ItemTitle"
                                    FieldType: ="s"
                                    Order: =3
                                    ZIndex: =2

                                "ItemKey5_1 As 'cat_PowerCAT.StackedBarChartTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="ItemKey"
                                    FieldName: ="ItemKey"
                                    FieldType: ="s"
                                    Order: =2
                                    ZIndex: =3

                                "ItemColor3_1 As 'cat_PowerCAT.StackedBarChartTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="ItemColor"
                                    FieldName: ="ItemColor"
                                    FieldType: ="s"
                                    Order: =1
                                    ZIndex: =4

                            PrivilegesComplianceInfo As groupContainer.verticalAutoLayoutContainer:
                                BorderColor: =RGBA(255, 255, 255, 1)
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =If(PaneListScreen.Size=1,100,86)//80
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =2
                                LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width
                                ZIndex: =5

                                PrivilegesNonComplianceInfo As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: =0
                                    Height: =Parent.Height
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingLeft: =5
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Width: =Parent.Width-TotalCustomRolesInfoContainer_1.Width
                                    ZIndex: =1

                                    PrivilegesWithRisk As Text:
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        Height: =50
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Size: =32
                                        Text: |-
                                            =CountRows(
                                                Filter(
                                                    currentRolePrivileges_temp,
                                                    NewSeverity <> Text('Assessed Risk Level (Risk Assessments)'.'No Risk')
                                                )
                                            )
                                        Weight: ='TextCanvas.Weight'.Semibold
                                        Width: =96
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    txtPrivilegesWithRisk As Text:
                                        Align: ='TextCanvas.Align'.Start
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        FontColor: =RGBA(66, 66, 66, 1)
                                        Height: =If(PaneListScreen.Size=1,45,30)
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Text: ="Privileges with risk"//DVAssessmentPageLoc.riskAssessmentsNonCompliant// Need LOC
                                        VerticalAlign: =VerticalAlign.Middle
                                        Weight: ='TextCanvas.Weight'.Regular
                                        Width: =Parent.Width-20
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                TotalCustomRolesInfoContainer_1 As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    BorderColor: =RGBA(255, 255, 255, 1)
                                    BorderStyle: =BorderStyle.None
                                    FillPortions: =0
                                    Height: =Parent.Height
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Width: =If(PaneListScreen.Size=1,90,100)
                                    ZIndex: =2

                                    TotalCustomRolesCountText_1 As Text:
                                        Align: ='TextCanvas.Align'.Start
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        Height: =50
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Size: =32
                                        Text: =CountRows(currentRolePrivileges_temp)
                                        Weight: ='TextCanvas.Weight'.Semibold
                                        Width: =Parent.Width
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    TotalRolesText_1 As Text:
                                        Align: ='TextCanvas.Align'.Start
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        FontColor: =RGBA(66, 66, 66, 1)
                                        Height: =If(PaneListScreen.Size=1,45,30)
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Text: =DVAssessmentPageLoc.totalPrivilegesText
                                        VerticalAlign: =VerticalAlign.Middle
                                        Weight: ='TextCanvas.Weight'.Regular
                                        Width: =Parent.Width
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                            RoleDetailsContainer As groupContainer.verticalAutoLayoutContainer:
                                BorderColor: =
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =txtDetails.Height+Container8.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =8
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                ZIndex: =6

                                txtDetails As Text:
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    Text: =DVAssessmentPageLoc.detailsColumn
                                    Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                    Width: =250
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =1

                                Container8 As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Start
                                    BorderColor: =
                                    BorderStyle: =BorderStyle.None
                                    FillPortions: =0
                                    Height: =100
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutGap: =8
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    Width: =Parent.Width
                                    ZIndex: =2

                                    Container10 As groupContainer.horizontalAutoLayoutContainer:
                                        BorderColor: =
                                        FillPortions: =0
                                        Height: =20
                                        LayoutMinHeight: =100
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        RadiusBottomLeft: =4
                                        RadiusBottomRight: =4
                                        RadiusTopLeft: =4
                                        RadiusTopRight: =4
                                        ZIndex: =1

                                        txtCaption1_3 As Text:
                                            DisplayMode: =DisplayMode.Edit
                                            Font: =Font.'Segoe UI'
                                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                            Height: =LookUp(_typeramp,name="Caption1").lineHeight
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =0
                                            PaddingLeft: =0
                                            PaddingRight: =0
                                            PaddingTop: =0
                                            Size: =LookUp(_typeramp,name="Caption1").fontSize
                                            Text: ="Business unit"
                                            Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                            Width: =80
                                            Wrap: =false
                                            X: =7
                                            Y: =94
                                            ZIndex: =1

                                        txtCaption1Strong_2 As Text:
                                            Align: ='TextCanvas.Align'.End
                                            DisplayMode: =DisplayMode.Edit
                                            FillPortions: =1
                                            Font: =Font.'Segoe UI'
                                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                            Height: =LookUp(_typeramp,name="Caption1Strong").lineHeight
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =0
                                            PaddingLeft: =0
                                            PaddingRight: =0
                                            PaddingTop: =0
                                            Size: =LookUp(_typeramp,name="Caption1Strong").fontSize
                                            Text: =currentSelectedSecurityRole.'Business Unit'.Name
                                            Weight: =LookUp(_typeramp,name="Caption1Strong").fontWeight
                                            Width: =250
                                            Wrap: =false
                                            X: =7
                                            Y: =122
                                            ZIndex: =2

                                    Container10_1 As groupContainer.horizontalAutoLayoutContainer:
                                        BorderColor: =
                                        BorderStyle: =BorderStyle.None
                                        FillPortions: =0
                                        Height: =20
                                        LayoutMinHeight: =100
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        ZIndex: =2

                                        txtCaption1_4 As Text:
                                            DisplayMode: =DisplayMode.Edit
                                            Font: =Font.'Segoe UI'
                                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                            Height: =LookUp(_typeramp,name="Caption1").lineHeight
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =0
                                            PaddingLeft: =0
                                            PaddingRight: =0
                                            PaddingTop: =0
                                            Size: =LookUp(_typeramp,name="Caption1").fontSize
                                            Text: ="Modified on"
                                            Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                            Width: =80
                                            Wrap: =false
                                            X: =7
                                            Y: =94
                                            ZIndex: =1

                                        txtCaption1Strong_3 As Text:
                                            Align: ='TextCanvas.Align'.End
                                            DisplayMode: =DisplayMode.Edit
                                            FillPortions: =1
                                            Font: =Font.'Segoe UI'
                                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                            Height: =LookUp(_typeramp,name="Caption1Strong").lineHeight
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =0
                                            PaddingLeft: =0
                                            PaddingRight: =0
                                            PaddingTop: =0
                                            Size: =LookUp(_typeramp,name="Caption1Strong").fontSize
                                            Text: =Text(currentSelectedSecurityRole.'Modified On',"dd mmmm yyyy") & " by " & currentSelectedSecurityRole.'Modified By'.'Full Name'
                                            Weight: =LookUp(_typeramp,name="Caption1Strong").fontWeight
                                            Width: =250
                                            Wrap: =false
                                            X: =7
                                            Y: =122
                                            ZIndex: =2

                                    Container10_2 As groupContainer.horizontalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.Start
                                        BorderColor: =
                                        BorderStyle: =BorderStyle.None
                                        FillPortions: =0
                                        Height: =20
                                        LayoutAlignItems: =LayoutAlignItems.Center
                                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                                        LayoutMinHeight: =100
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        Width: =Parent.Width
                                        ZIndex: =3

                                        txtCaption1_5 As Text:
                                            DisplayMode: =DisplayMode.Edit
                                            Font: =Font.'Segoe UI'
                                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                            Height: =LookUp(_typeramp,name="Caption1").lineHeight
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =0
                                            PaddingLeft: =0
                                            PaddingRight: =0
                                            PaddingTop: =0
                                            Size: =LookUp(_typeramp,name="Caption1").fontSize
                                            Text: ="Created"
                                            Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                            Width: =80
                                            Wrap: =false
                                            X: =7
                                            Y: =94
                                            ZIndex: =1

                                        txtCaption1Strong_4 As Text:
                                            Align: ='TextCanvas.Align'.End
                                            DisplayMode: =DisplayMode.Edit
                                            FillPortions: =1
                                            Font: =Font.'Segoe UI'
                                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                            Height: =LookUp(_typeramp,name="Caption1Strong").lineHeight
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =0
                                            PaddingLeft: =0
                                            PaddingRight: =0
                                            PaddingTop: =0
                                            Size: =LookUp(_typeramp,name="Caption1Strong").fontSize
                                            Text: =Text(currentSelectedSecurityRole.'Created On',"dd mmmm yyyy") & " by " & currentSelectedSecurityRole.'Created By'.'Full Name'
                                            Weight: =LookUp(_typeramp,name="Caption1Strong").fontWeight
                                            Width: =250
                                            Wrap: =false
                                            X: =7
                                            Y: =122
                                            ZIndex: =2

                            Container9 As groupContainer.verticalAutoLayoutContainer:
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =rCardDivider_11.Y
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =8
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                ZIndex: =7

                                Container17 As groupContainer.horizontalAutoLayoutContainer:
                                    BorderStyle: =BorderStyle.None
                                    FillPortions: =0
                                    Height: =28
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =1

                                    txtBaseline As Text:
                                        DisplayMode: =DisplayMode.Edit
                                        FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                        Height: =LookUp(_typeramp,name="Body1").lineHeight
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        PaddingBottom: =0
                                        PaddingLeft: =0
                                        PaddingRight: =0
                                        PaddingTop: =0
                                        Size: =LookUp(_typeramp,name="Body1").fontSize
                                        Text: ="Baseline"
                                        VerticalAlign: =VerticalAlign.Middle
                                        Weight: =LookUp(_typeramp,name="Body1").fontWeight
                                        Width: =60
                                        Wrap: =false
                                        X: =7
                                        Y: =188
                                        ZIndex: =1

                                    txtBody1_2 As Text:
                                        DisplayMode: =DisplayMode.Edit
                                        FontColor: =RGBA(177, 14, 28, 1)
                                        Height: =LookUp(_typeramp,name="Body1").lineHeight
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        PaddingBottom: =0
                                        PaddingLeft: =0
                                        PaddingRight: =0
                                        PaddingTop: =0
                                        Size: =LookUp(_typeramp,name="Body1").fontSize
                                        Text: ="*"
                                        Weight: =LookUp(_typeramp,name="Body1").fontWeight
                                        Width: =10
                                        Wrap: =false
                                        X: =7
                                        Y: =188
                                        ZIndex: =2

                                    "InfoButton_Baseline As 'Information button'":
                                        AccessibleLabel: ="InfoButton"
                                        AlignInContainer: =AlignInContainer.Start
                                        Content: ="Meet compliance by updating the security role privileges to the recommended access levels. You can update privileges individually. If there’s a good reason for having a higher privilege level than recommended, flag the role as an exception."//Need LOC
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =26
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =32
                                        Width: =24
                                        X: =0
                                        Y: =0
                                        ZIndex: =3

                                CmbBaselineSettingsList As Combobox.pcfdataset:
                                    AccessibleLabel: ="ComboboxBaseLineSettings"
                                    AlignInContainer: =AlignInContainer.End
                                    Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                                    BorderColor: =RGBA(209, 209, 209, 1)
                                    BorderStyle: =BorderStyle.Solid
                                    BorderThickness: =1
                                    DefaultSelectedItems: |-
                                        =LookUp(
                                            'Risk Assessment Settings',
                                            'Risk Assessment Setting' = selectedRoleRiskAssessmentProfileId
                                        )
                                    DisplayMode: =If(isLoggedInUserSysAdmin && cmbRiskAssessmentHistory.Selected.AssessmentId = First(riskAssessmentHistory).AssessmentId , DisplayMode.Edit,DisplayMode.Disabled) 
                                    Height: =32
                                    Items: =Filter('Risk Assessment Settings',Status='Status (Risk Assessment Settings)'.Active)
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: |-
                                        =UpdateContext(
                                            {
                                                selectedRoleRiskAssessmentProfileId: LookUp(
                                                    AllRiskAssessmentsSettings,
                                                    'Risk Assessment Setting' = CmbBaselineSettingsList.Selected.'Risk Assessment Setting'
                                                ).'Risk Assessment Setting'
                                            }
                                        );
                                        If(
                                            selectedRoleRiskAssessmentProfileId <> currentSelectedAssesment.'Risk Assessment Setting'.'Risk Assessment Setting',
                                            UpdateContext({isRiskAssessmentProfileChanged: true}),
                                            UpdateContext({isRiskAssessmentProfileChanged: false})
                                        )
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                    "'Risk Assessment Setting1' As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn":
                                        FieldDisplayName: ="Risk Assessment Setting"
                                        FieldName: ="cat_riskassessmentsettingid"
                                        FieldType: ="g"
                                        FieldVariantName: ="textualColumn"
                                        Order: =2
                                        ZIndex: =17

                                    Name1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="Name"
                                        FieldName: ="cat_name"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =1
                                        ZIndex: =18

                                txtCaption1_1 As Text:
                                    Align: ='TextCanvas.Align'.Start
                                    AlignInContainer: =AlignInContainer.Stretch
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    Height: =36//LookUp(_typeramp,name="Caption1").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Caption1").fontSize
                                    Text: ="Updating the profile will render the latest risk assessment as stale."
                                    Visible: =true///isRiskAssessmentProfileChanged
                                    Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                    Width: =250
                                    Wrap: =true
                                    X: =7
                                    Y: =94
                                    ZIndex: =3

                                btnSave As Button:
                                    AccessibleLabel: =DVAssessmentPageLoc.saveButtonText
                                    Appearance: ='ButtonCanvas.Appearance'.Secondary
                                    BorderColor: =RGBA(209, 209, 209, 1)
                                    BorderThickness: =1
                                    DisplayMode: |-
                                        =If(
                                            IsBlank(CmbBaselineSettingsList.Selected.'Risk Assessment Setting'),
                                            DisplayMode.Disabled,
                                            If(
                                                isRiskAssessmentProfileChanged,
                                                DisplayMode.Edit,
                                                DisplayMode.Disabled
                                            )
                                        )
                                    Height: =32
                                    Icon: ="Save"
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    OnSelect: |
                                        =UpdateContext(
                                            {
                                                init: false,
                                                showSpinnerForEditRolesColor: RGBA(
                                                    255,
                                                    255,
                                                    255,
                                                    0.7
                                                ),
                                                showSpinnerForEditRolesLabel: "Saving...."
                                            }
                                        );
                                        If(
                                            !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes",
                                            Patch(
                                                'Risk Assessments',
                                                currentSelectedAssesment,
                                                {
                                                    'Is Archived': 'Is Archived (Risk Assessments)'.Yes,
                                                    Status: 'Status (Risk Assessments)'.Inactive,
                                                    'Status Reason': 'Status Reason (Risk Assessments)'.Stale
                                                }
                                            );
                                            Set(
                                                newAssessment,
                                                Patch(
                                                    'Risk Assessments',
                                                    Defaults('Risk Assessments'),
                                                    {
                                                        'Is Archived': 'Is Archived (Risk Assessments)'.No,
                                                        'Security Role': currentSelectedSecurityRole,
                                                        'Risk Assessment Setting': LookUp(
                                                            'Risk Assessment Settings',
                                                            'Risk Assessment Setting' = selectedRoleRiskAssessmentProfileId
                                                        ),
                                                        'Status Reason': 'Status Reason (Risk Assessments)'.'In Progress'
                                                    }
                                                )
                                            );
                                            Clear(SelectedAssessmentRolePrivileges);
                                            Set(
                                                currentAssessmentGUID,
                                                newAssessment.'Risk Assessment'
                                            );
                                            Set(
                                                currentAssessmentSettingGUID,
                                                newAssessment.'Risk Assessment Setting'.'Risk Assessment Setting'
                                            );
                                            Refresh('Risk Assessments');
                                            UpdateContext(
                                                {
                                                    AssessmentId: newAssessment.'Risk Assessment',
                                                    currentSelectedAssesment: LookUp(
                                                        'Risk Assessments',
                                                        'Risk Assessment' = newAssessment.'Risk Assessment'
                                                    ),
                                                    makeDetailsListEditableForRoleUpdation: false
                                                }
                                            );
                                            UpdateContext(
                                                {
                                                    showBaseLineSettingsMessageBar: true,
                                                    isRiskAssessmentProfileChanged: false,
                                                    baseLinseSettingsMessageBarBody: "Wait for assessment to complete and refresh this page.",
                                                    baseLinseSettingsMessageBarButtonName: "Refresh"
                                                }
                                            );
                                            Notify(
                                                "Scan has started successfully. Please wait a few minutes for the scan to complete. Refresh the page to view the updated status once it's ready.",
                                                NotificationType.Information,
                                                5000
                                            );
                                            ,
                                            Patch(
                                                'Risk Assessments',
                                                currentSelectedAssesment,
                                                {
                                                    Status: 'Status (Risk Assessments)'.Inactive,
                                                    'Status Reason': 'Status Reason (Risk Assessments)'.Stale
                                                }
                                            );
                                            UpdateContext(
                                                {
                                                    isRiskAssessmentProfileChanged: false,
                                                    showBaseLineSettingsMessageBar: true,
                                                    baseLinseSettingsMessageBarBody: "Re-scan to get latest results.",
                                                    baseLinseSettingsMessageBarButtonName: "Re-scan"
                                                }
                                            );
                                            
                                        );
                                        UpdateContext(
                                            {
                                                init: true,
                                                showSpinnerForEditRolesColor: Blank(),
                                                showSpinnerForEditRolesLabel: Blank()
                                            }
                                        );
                                    Text: ="Save"
                                    Width: =96
                                    X: =0
                                    Y: =0
                                    ZIndex: =4

                                rCardDivider_11 As rectangle:
                                    BorderColor: =App.Theme.Colors.Darker40
                                    Fill: =RGBA(0,0,0,0)
                                    Height: =1
                                    Width: =Parent.Width - Self.X*2
                                    X: =72
                                    Y: =52
                                    ZIndex: =5

                            rCardDivider_8 As rectangle:
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =1
                                Width: =Parent.Width - Self.X*2
                                X: =72
                                Y: =52
                                ZIndex: =8

                        rCardDivider_6 As rectangle:
                            BorderColor: =App.Theme.Colors.Darker40
                            Fill: =RGBA(0,0,0,0)
                            Height: =1
                            Width: =Parent.Width - Self.X*2
                            X: =72
                            Y: =52
                            ZIndex: =3

                    cSubgrid_1 As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        DropShadow: =DropShadow.Semilight
                        Fill: =RGBA(255, 255, 255, 1)
                        FillPortions: =FlexOn
                        Height: =Max(div_13.Y, 120)
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =0   
                        LayoutMinHeight: =100
                        LayoutMinWidth: =600
                        LayoutMode: =LayoutMode.Auto
                        PaddingTop: =
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Width: =Parent.Width - Self.X * 2
                        ZIndex: =2

                        cListToolbar_8 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            Fill: =ColorValue(AppTheme.palette.neutralLighter) //RGBA(0, 0, 0, 0)
                            FillPortions: =0
                            Height: =48
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =16
                            PaddingRight: =16
                            Width: =Parent.Width
                            ZIndex: =1

                            btnRefresh_PrivilegesListScreen As Button:
                                AccessibleLabel: =DVAssessmentPageLoc.refresh
                                Align: =Align.Left
                                AlignInContainer: =AlignInContainer.Center
                                Appearance: ='ButtonCanvas.Appearance'.Transparent
                                DisplayMode: =DisplayMode.Edit
                                FillPortions: =1
                                Height: =32
                                Icon: ="ArrowClockwise"
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |
                                    =UpdateContext({showLoader: true});
                                    UpdateContext(
                                        {
                                            currentSelectedAssesment: LookUp(
                                                'Risk Assessments',
                                                'Risk Assessment' = cmbRiskAssessmentHistory.Selected.AssessmentId
                                            ),
                                            showPane: false
                                        }
                                    );
                                    /*Set(
                                        currentAssessmentGUID,
                                        currentSelectedAssesment.'Risk Assessment'
                                    );
                                    Set(
                                        AssessmentId,
                                        currentSelectedAssesment.'Risk Assessment'
                                    );*/
                                    Concurrent(
                                        Refresh('Risk Assessments'),
                                        Refresh('Risk Assessment Settings'),
                                        Refresh('Security Roles'),
                                        Refresh('Environment Variable Definitions'),
                                        Refresh('Environment Variable Values')
                                    );
                                    UpdateContext(
                                        {
                                            showPrvEditContainer: false,
                                            ctxTableEvent: "ClearSelection" & Text(Rand()),
                                            currentSelectedPrivilege: Blank()
                                        }
                                    );
                                    Set(
                                        varPageNumber,
                                        1
                                    );
                                    If(
                                        !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes",
                                        false,
                                        Notify(
                                            DVAssessmentPageLoc.privilegesUpdateWarningNotificationWhenAutoScanIsOff,
                                            NotificationType.Warning,
                                            5000
                                        )
                                    );
                                    UpdateContext(
                                        {
                                            showSpinnerForEditRolesColor: Blank(),
                                            showSpinnerForEditRolesLabel: Blank()
                                        }
                                    );
                                    ClearCollect(
                                        currentRolePrivileges_temp,
                                        SelectedAssessmentRolePrivileges
                                    );
                                    ClearCollect(
                                        currentRolePrivilegesToBeDisplayed,
                                        currentRolePrivileges_temp
                                    );
                                    UpdateContext({showLoader: false});
                                Text: =DVAssessmentPageLoc.refresh
                                VerticalAlign: =
                                Visible: =false
                                Width: =96
                                X: =0
                                Y: =0
                                ZIndex: =1

                            Toolbar1_7 As Toolbar.pcfdataset:
                                AccessibleLabel: ="Toolbar"
                                DisplayMode: =DisplayMode.Edit
                                FillPortions: =FlexOn
                                Height: =44
                                Items: |-
                                    =Table(
                                        {
                                            ItemKey: "refresh",
                                            ItemDisplayName: "Refresh",
                                            ItemIconName: "ArrowClockwise",
                                            ItemAppearance: "Subtle",
                                            ItemIconStyle: "Regular"
                                        }
                                    )
                                LayoutMinHeight: =55
                                LayoutMinWidth: =100
                                OnSelect: |
                                    =UpdateContext(
                                        {
                                            showSpinnerForEditRolesColor: RGBA(
                                                255,
                                                255,
                                                255,
                                                0.7
                                            ),
                                            showSpinnerForEditRolesLabel: DVAssessmentPageLoc.pleaseWaitLoadingText
                                        }
                                    );
                                    Switch(
                                        Self.Selected.ItemKey,
                                        "refresh",
                                        UpdateContext(
                                            {
                                                currentSelectedAssesment: LookUp(
                                                    AllRiskAssessmentsFromDataverse,
                                                    'Risk Assessment' = cmbRiskAssessmentHistory.Selected.AssessmentId
                                                ),
                                                showLoader: true,
                                                showPane:false
                                            }
                                        );
                                        Set(
                                            currentAssessmentGUID,
                                            currentSelectedAssesment.'Risk Assessment'
                                        );
                                        Set(
                                            AssessmentId,
                                            currentSelectedAssesment.'Risk Assessment'
                                        );
                                        Concurrent(
                                            Refresh('Risk Assessment Settings'),
                                            Refresh('Security Roles'),
                                            Refresh('Risk Assessments'),
                                            Refresh('Environment Variable Definitions'),
                                            Refresh('Environment Variable Values'),
                                            UpdateContext(
                                                {
                                                    showPrvEditContainer: false,
                                                    ctxTableEvent: "ClearSelection" & Text(Rand()),
                                                    currentSelectedPrivilege: Blank()
                                                }
                                            );
                                        );
                                        /*Set(
                                            autoScanEnvironmentVariableCurrentValue,
                                            LookUp(
                                                'Environment Variable Values',
                                                'Environment Variable Definition'.'Schema Name' = "msdyn_DVAcceleratorAutoScan"
                                            )
                                        );*/
                                    ClearCollect(
                                            currentRolePrivileges_temp,
                                            SelectedAssessmentRolePrivileges
                                        );
                                        ClearCollect(
                                            currentRolePrivilegesToBeDisplayed,
                                            currentRolePrivileges_temp
                                        );
                                        // UpdateContext(
                                    //   {
                                    /*IsExcptionApproved: If(
                                                currentSelectedAssesment.'Exception Flagged' = 'Exception Flagged (Risk Assessments)'.Yes && currentSelectedAssesment.'Status Reason' = 'Status Reason (Risk Assessments)'.Compliant,
                                                true,
                                                false
                                            ),
                                            isExceptionUpdatedOnDataverse: If(
                                                currentSelectedAssesment.'Status Reason' = 'Status Reason (Risk Assessments)'.Exception,
                                                true,
                                                false
                                            ), */
                                    /*  isFlagExceptionChanged: false,
                                                isExceptionReasonChanged: false,
                                                isRiskAssessmentProfileChanged: false,
                                                revBy: currentSelectedAssesment.'Exception Approved By'.'Full Name',
                                                revByInitial: Left(
                                                    currentSelectedAssesment.'Exception Approved By'.'Full Name',
                                                    1
                                                ) & Mid(
                                                    currentSelectedAssesment.'Exception Approved By'.'Full Name',
                                                    Find(
                                                        " ",
                                                        currentSelectedAssesment.'Exception Approved By'.'Full Name'
                                                    ) + 1,
                                                    1
                                                ),
                                                lblExceptionFlaggedBy: currentSelectedAssesment.'Exception Flagged By'.'Full Name',
                                                lblExceptionFlaggedByIntials: Left(
                                                    currentSelectedAssesment.'Exception Flagged By'.'Full Name',
                                                    1
                                                ) & Mid(
                                                    currentSelectedAssesment.'Exception Flagged By'.'Full Name',
                                                    Find(
                                                        " ",
                                                        currentSelectedAssesment.'Exception Flagged By'.'Full Name'
                                                    ) + 1,
                                                    1
                                                )*/
                                    // }
                                    // );
                                    If(
                                            !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes",
                                            false,
                                            Notify(
                                                DVAssessmentPageLoc.privilegesUpdateWarningNotificationWhenAutoScanIsOff,
                                                NotificationType.Warning,
                                                5000
                                            )
                                        );
                                        UpdateContext({showLoader: false});
                                        ,
                                    
                                        /* Default action */
                                        Notify("Unrecognized button clicked")
                                    );
                                    UpdateContext(
                                        {
                                            showSpinnerForEditRolesColor: Blank(),
                                            showSpinnerForEditRolesLabel: Blank()
                                        }
                                    );
                                Visible: =false
                                Width: =301
                                X: =25
                                Y: =0
                                ZIndex: =2

                                ItemKey6 As PowerApps_CoreControls_ToolbarTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="ItemKey"
                                    FieldName: ="ItemKey"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =16

                            Container9_11 As groupContainer.horizontalAutoLayoutContainer:
                                FillPortions: =FlexOn+1
                                Height: =40
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =8
                                LayoutJustifyContent: =LayoutJustifyContent.End
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =2
                                PaddingRight: =2
                                ZIndex: =3

                                TextCanvas5_9 As Text:
                                    Align: ='TextCanvas.Align'.End
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingRight: =8
                                    Text: |-
                                        =With({c: TotalPrivilegesOfaSelectedRole},$"{ c } {If(c = 1, "item", "items")}")
                                    VerticalAlign: =VerticalAlign.Middle
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =96
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                Icon1_9 As icon.Search:
                                    AccessibleLabel: ="Search"
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    Color: =RGBA(0, 120, 212, 1)
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(220, 220, 220, 1)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    Height: =32
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Icon: =If(showSearch, Icon.Cancel, Icon.Search)
                                    OnSelect: |-
                                        =UpdateContext({showSearch: !showSearch})
                                    PaddingBottom: =8
                                    PaddingLeft: =8
                                    PaddingRight: =8
                                    PaddingTop: =8
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    TabIndex: =0
                                    Visible: =App.ActiveScreen.Size <= ScreenSize.Small
                                    Width: =32
                                    ZIndex: =2

                                ddFilter_3 As Dropdown.pcfdataset:
                                    AccessibleLabel: ="SeverityDropdown"
                                    DefaultSelectedItems: =If(IsBlankOrError(dropDownStatusForEditRoles.ItemKey),First(AssessmentSeverity),dropDownStatusForEditRoles)
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Items: =AssessmentSeverity
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: |-
                                        =Set(
                                            dropDownStatusForEditRoles,
                                            Self.Selected
                                        );
                                        If(
                                            Self.Selected.ItemValue = DVAssessmentPageLoc.allStatusValue,
                                            ClearCollect(
                                                currentRolePrivilegesToBeDisplayed,
                                                currentRolePrivileges_temp
                                            ),
                                            ClearCollect(
                                                currentRolePrivilegesToBeDisplayed,
                                                Filter(
                                                   currentRolePrivileges_temp,// currentRolePrivileges,
                                                    NewSeverity = dropDownStatusForEditRoles.ItemValue
                                                )
                                            );
                                            
                                        )
                                    Width: =94
                                    X: =294
                                    Y: =0
                                    ZIndex: =3

                                    ItemValue4 As PowerApps_CoreControls_DropdownCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="ItemValue"
                                        FieldName: ="ItemValue"
                                        FieldType: ="s"
                                        Order: =1
                                        ZIndex: =1

                                    ItemKey4 As PowerApps_CoreControls_DropdownCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="ItemKey"
                                        FieldName: ="ItemKey"
                                        FieldType: ="n"
                                        Order: =2
                                        ZIndex: =2

                                cSearchTeams_3 As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    BorderColor: =ColorValue(AppTheme.palette.neutralQuaternary)
                                    BorderStyle: =BorderStyle.None
                                    DropShadow: =DropShadow.Light
                                    FillPortions: =0
                                    Height: =32
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Visible: =App.ActiveScreen.Size > ScreenSize.Small || showSearch
                                    Width: =200
                                    ZIndex: =4

                                    "txtSearch_2 As 'Text input'":
                                        AccessibleLabel: ="SearchPrivileges"
                                        Appearance: ='TextInputCanvas.Appearance'.FilledLighter
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        Placeholder: ="Search"
                                        TriggerOutput: ='TextInputCanvas.TriggerOutput'.Keypress
                                        Width: =320
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                        Spinner1_8 As Spinner:
                            AccessibleLabel: ="Spinner"
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            SpinnerSize: ='Spinner.SpinnerSize'.Small
                            Visible: =showLoader
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =2

                        "PrivilegesList As 'Fluent Details List (1.1.39)'.pcfdataset":
                            columns_Items: |-
                                =Table(
                                    {
                                        ColName: "NewSeverity",
                                        ColDisplayName: DVAssessmentPageLoc.severityColumn,
                                        ColWidth: Max((Self.Width / 10),80),
                                        ColIsBold: true,
                                        ColRowHeader: true,
                                        ColCellType: "indicatortag",
                                        ColTagColorColumn: "NewSeverityTagColor",
                                        ColTagBorderColorColumn: "TagBorderColor",
                                        ColSortable: true
                                    },
                                    {
                                        ColName: "RolePrivilegeName",
                                        ColDisplayName: DVAssessmentPageLoc.privilegeColumnName,
                                        ColWidth: Self.Width*0.3,//Self.Width*0.38,
                                        ColMultiLine: true,
                                        ColSortable: true
                                    },
                                    {
                                        ColName: "table",
                                        ColDisplayName: DVAssessmentPageLoc.table,
                                        ColWidth: 120,
                                        ColSortable: true
                                    },
                                    {
                                        ColName: "level",
                                        ColDisplayName: DVAssessmentPageLoc.currentLevelColumnName,
                                        ColWidth: Max(Self.Width * 0.17,120),//Max(Self.Width * 0.18,120),
                                        ColSortable: true
                                    },
                                    {
                                        ColName: "RecommendedLevel",
                                        ColDisplayName: DVAssessmentPageLoc.recommendedLevelColumnName,
                                        ColWidth: Max(Self.Width * 0.17,130),
                                        ColSortable: true
                                    }
                                )
                            Compact: =false
                            CurrentSortColumn: =assessedRiskDetailsSortCol
                            CurrentSortDirection: =assessedRiskDetailsSortOrder
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =FlexOff
                            Height: |-
                                =Max(
                                    80 + (CountRows(PrivilegesListToBeDisplayed) * 48),
                                    200
                                )//(CountRows(PrivilegesListToBeDisplayed) * 55)+ 100//Max(60 + (CountRows(RolePrvilegesWithRowNumber) * 48), 200)
                            InputEvent: =ctxTableEvent
                            Items: =PrivilegesListToBeDisplayed
                            LargeDatasetPaging: =true
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: |
                                =
                                // Logic for changing the page
                                If(
                                    Self.EventName = "OnRowSelectionChange" && CountRows(PrivilegesList.SelectedItems) > 0,
                                    UpdateContext({showPane: true});
                                    UpdateContext(
                                        {
                                            showPrvEditContainer: true,
                                            currentSelectedPrivilege: Self.Selected,
                                            currentSelectedLevel: Self.Selected.level
                                        }
                                    );
                                   
                                    Clear(col_privilegesLevel);
                                    ClearCollect(
                                        col_privilegesLevel,
                                        securityPrivilegesLevel
                                    );
                                    UpdateContext(
                                        {
                                            currentPrivRec: LookUp(
                                                Privileges,
                                                Name = Self.Selected.privilegeName
                                            )
                                        }
                                    );
                                    If(
                                        currentPrivRec.CanBeBasic = 'CanBeBasic (Privileges)'.No,
                                        Remove(
                                            col_privilegesLevel,
                                            LookUp(
                                                col_privilegesLevel,
                                                ItemValue = DVAssessmentPageLoc.userColumnName
                                            )
                                        )
                                    );
                                    If(
                                        currentPrivRec.CanBeDeep = 'CanBeDeep (Privileges)'.No,
                                        Remove(
                                            col_privilegesLevel,
                                            LookUp(
                                                col_privilegesLevel,
                                                ItemValue = DVAssessmentPageLoc.parentChildBuColumnName
                                            )
                                        )
                                    );
                                    If(
                                        currentPrivRec.CanBeGlobal = 'CanBeGlobal (Privileges)'.No,
                                        Remove(
                                            col_privilegesLevel,
                                            LookUp(
                                                col_privilegesLevel,
                                                ItemValue = DVAssessmentPageLoc.organizationColumnName
                                            )
                                        )
                                    );
                                    If(
                                        currentPrivRec.CanBeLocal = 'CanBeLocal (Privileges)'.No,
                                        Remove(
                                            col_privilegesLevel,
                                            LookUp(
                                                col_privilegesLevel,
                                                ItemValue = DVAssessmentPageLoc.businessUnitColumnName
                                            )
                                        )
                                    );
                                    If(
                                        PaneListScreen.Size = 1 || PaneListScreen.Orientation = Layout.Vertical || (PaneListScreen.Size = 2 && PaneListScreen.Orientation = Layout.Horizontal),
                                        UpdateContext({hidePanelBackButton: false}),
                                        UpdateContext({hidePanelBackButton: true})
                                    );
                                    ,
                                    UpdateContext({showPrvEditContainer: false});
                                    
                                );
                                If(
                                    Self.EventName = "Sort",
                                    UpdateContext(
                                        {
                                            assessedRiskDetailsSortCol: Self.SortEventColumn,
                                            assessedRiskDetailsSortOrder: Self.SortEventDirection
                                        }
                                    )
                                );
                                If(
                                    Self.EventName = "Sort",
                                    Set(
                                        assessedRiskDetailsSortCol,
                                        Self.SortEventColumn
                                    );
                                    Set(
                                        assessedRiskDetailsSortOrder,
                                        Self.SortEventDirection
                                    );
                                    
                                );
                            OnSelect: =
                            PageSize: =CountRows(SelectedAssessmentRolePrivileges)
                            RaiseOnRowSelectionChangeEvent: =true
                            RecordKey: ="privilegeId"
                            RecordSelected: ="RecordSelected"
                            SelectionType: |-
                                =If(
                                    !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes" && LookUp(
                                        'Risk Assessments',
                                        'Risk Assessment' = cmbRiskAssessmentHistory.Selected.AssessmentId
                                    ).'Is Archived' = 'Is Archived (Risk Assessments)'.No && currentSelectedAssesment.'Status Reason' <> 'Status Reason (Risk Assessments)'.Stale && makeDetailsListEditableForRoleUpdation && isLoggedInUserSysAdmin,//&& ApprovedExceptionContainer.Visible =false,
                                    'PowerCAT.FluentDetailsList.SelectionType'.Single,
                                    'PowerCAT.FluentDetailsList.SelectionType'.None
                                )
                            Theme: =AppThemeJson
                            Visible: =!showLoader 
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =3

                            "privilegeId1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="privilegeId"
                                FieldName: ="privilegeId"
                                FieldType: ="g"
                                Order: =13
                                ZIndex: =1

                            "RolePrivilegeName1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="RolePrivilegeName"
                                FieldName: ="RolePrivilegeName"
                                FieldType: ="s"
                                Order: =12
                                ZIndex: =2

                            "table1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="table"
                                FieldName: ="table"
                                FieldType: ="s"
                                Order: =10
                                ZIndex: =3

                            "securityPrivilegeName1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="securityPrivilegeName"
                                FieldName: ="securityPrivilegeName"
                                FieldType: ="s"
                                Order: =9
                                ZIndex: =4

                            "RowNumber1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="RowNumber"
                                FieldName: ="RowNumber"
                                FieldType: ="n"
                                Order: =8
                                ZIndex: =5

                            "risk1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="risk"
                                FieldName: ="risk"
                                FieldType: ="s"
                                Order: =7
                                ZIndex: =6

                            "privilegeName1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="privilegeName"
                                FieldName: ="privilegeName"
                                FieldType: ="s"
                                Order: =5
                                ZIndex: =7

                            "level1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="level"
                                FieldName: ="level"
                                FieldType: ="s"
                                Order: =4
                                ZIndex: =8

                            "NewSeverityTagColor1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="NewSeverityTagColor"
                                FieldName: ="NewSeverityTagColor"
                                FieldType: ="s"
                                Order: =3
                                ZIndex: =9

                            "NewSeverity1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="NewSeverity"
                                FieldName: ="NewSeverity"
                                FieldType: ="s"
                                Order: =2
                                ZIndex: =10

                            "Rolename1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="Rolename"
                                FieldName: ="Rolename"
                                FieldType: ="s"
                                Order: =1
                                ZIndex: =11

                            "RecordSelected1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="RecordSelected"
                                FieldName: ="RecordSelected"
                                FieldType: ="b"
                                Order: =13
                                ZIndex: =12

                            "RecommendedLevel1_1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="RecommendedLevel"
                                FieldName: ="RecommendedLevel"
                                FieldType: ="s"
                                Order: =13
                                ZIndex: =13

                            "TagColor2 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                FieldDisplayName: ="TagColor"
                                FieldName: ="TagColor"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =14
                                ZIndex: =19

                        cEmptyState_4 As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Center
                            FillPortions: =0
                            Height: =314
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Visible: =IsEmpty(RolePrvilegesWithRowNumber)
                            Width: =333
                            X: =469
                            Y: =93
                            ZIndex: =4

                            Image3_6 As image:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Image: ='Empty states'
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                ZIndex: =1

                            txtSubtitle1_EmptyState_5 As Text:
                                Align: ='TextCanvas.Align'.Center
                                AlignInContainer: =AlignInContainer.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                Height: =36
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =20
                                Text: ="No privileges"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =250
                                Wrap: =false
                                X: =40
                                Y: =193
                                ZIndex: =2

                            lblBody1_EmptyState_5 As Label:
                                AcceptsFocus: =false
                                AlignInContainer: =AlignInContainer.Center
                                Alignment: =Align.Center
                                AutoHeight: =true
                                Color: =ColorValue(AppTheme.palette.neutralPrimaryAlt)
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Normal
                                Height: =12
                                Italic: =false
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                OnChange: =false
                                Strikethrough: =false
                                Text: ="Try adjusting the filters or refining with simpler keywords for a broader search."
                                Underline: =false
                                VerticalAlignment: =VerticalAlign.Middle
                                Width: =320
                                X: =320
                                Y: =197
                                ZIndex: =3

                            Container9_5 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Start
                                FillPortions: =0
                                Height: =44
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =8
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Visible: =false
                                Width: =Parent.Width
                                ZIndex: =4

                                btnEmptyActionPrimary_4 As Button:
                                    AccessibleLabel: ="Action"
                                    Appearance: ='ButtonCanvas.Appearance'.Secondary
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    OnSelect: |-
                                        =//UpdateContext({ searchText: "" }); 
                                    Text: ="Action"
                                    Width: =132
                                    X: =542
                                    Y: =0
                                    ZIndex: =1

                        PaginationContainer As groupContainer.horizontalAutoLayoutContainer:
                            BorderStyle: =BorderStyle.None
                            Fill: =RGBA(255, 255, 255, 1)
                            FillPortions: =FlexOff
                            Height: =44
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutGap: =4
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =20
                            PaddingLeft: =16
                            PaddingRight: =16
                            PaddingTop: =20
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Visible: =!!(TotalPrivilegesOfaSelectedRole)
                            ZIndex: =5

                            "prevEndIcon As 'Fluent Icon (1.1.39)'":
                                BorderRadius: =4
                                DisplayMode: |-
                                    =If(
                                        varPageNumber=1,
                                        DisplayMode.Disabled,
                                        DisplayMode.Edit
                                    )
                                Height: =32
                                IconName: ="ChevronLeftEnd6"
                                IconSize: =11
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: |-
                                    =Set(varPageNumber,1);UpdateContext({ctxGridEvent:"LoadNextPageSetFocusOnRow" & Text(Rand())});
                                Theme: =AppThemeNeutralJson
                                Tooltip: ="Go to the first page"//PluginMonitorLoc.firstPageTxt
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =1

                            "prevIcon As 'Fluent Icon (1.1.39)'":
                                BorderRadius: =4
                                DisplayMode: |-
                                    =If(
                                        varPageNumber=1,
                                        DisplayMode.Disabled,
                                        DisplayMode.Edit
                                    )
                                Height: =32
                                IconName: ="ChevronLeftmed"
                                IconSize: =11
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: |-
                                    =Set(varPageNumber,varPageNumber-1);UpdateContext({ctxGridEvent:"LoadNextPageSetFocusOnRow" & Text(Rand())});
                                Theme: =AppThemeNeutralJson
                                Tooltip: ="Previous page"
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =2

                            page_1 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =ColorValue(AppTheme.palette.neutralSecondary)
                                Height: =32
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Text: |-
                                    ="Page " & varPageNumber & " of " & If(
                                        Mod(
                                           TotalPrivilegesOfaSelectedRole,
                                            100
                                        ) = 0,
                                        RoundUp(
                                            IfError( TotalPrivilegesOfaSelectedRole/ PageNumber.Selected.Value,""),
                                            0
                                        ) & "", //"+ Pages",
                                        RoundUp(
                                             IfError( TotalPrivilegesOfaSelectedRole / PageNumber.Selected.Value,""),
                                            0
                                        )// & " Pages"
                                    )
                                VerticalAlign: =VerticalAlign.Middle
                                Width: =120
                                X: =0
                                Y: =0
                                ZIndex: =3

                            "nextIcon As 'Fluent Icon (1.1.39)'":
                                BorderRadius: =4
                                DisplayMode: |-
                                    =If(
                                        PageNumber.Selected.Value * varPageNumber < Value(TotalPrivilegesOfaSelectedRole),
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                Height: =32
                                IconName: ="ChevronRightmed"
                                IconSize: =11
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: |
                                    =Set(
                                        varPageNumber,
                                        varPageNumber + 1
                                    );
                                    UpdateContext({ctxGridEvent: "LoadNextPageSetFocusOnRow" & Text(Rand())});
                                Theme: =AppThemeNeutralJson
                                Tooltip: ="Next page"//PluginMonitorLoc.nextPageTxt
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =4

                            "nextEndIcon As 'Fluent Icon (1.1.39)'":
                                BorderRadius: =4
                                DisplayMode: |-
                                    =If(
                                        PageNumber.Selected.Value*varPageNumber<Value( TotalPrivilegesOfaSelectedRole),
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                Height: =32
                                IconName: ="ChevronrightEnd6"
                                IconSize: =11
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: |
                                    =Set(
                                        varPageNumber,
                                        RoundUp(
                                            Value(TotalPrivilegesOfaSelectedRole) / PageNumber.Selected.Value,
                                            0
                                        )
                                    );
                                    UpdateContext({ctxGridEvent: "LoadNextPageSetFocusOnRow" & Text(Rand())});
                                Theme: =AppThemeNeutralJson
                                Tooltip: ="Go to last page"//PluginMonitorLoc.lastPageTxt
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =5

                            Container2 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderStyle: =BorderStyle.None
                                Height: =44
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =8
                                LayoutJustifyContent: =LayoutJustifyContent.End
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                ZIndex: =6

                                HiddenLbl As Label:
                                    AcceptsFocus: =false
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Italic: =false
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Strikethrough: =false
                                    Text: =TotalPrivilegesOfaSelectedRole//& " | " & TotalCount
                                    Underline: =false
                                    Visible: =false
                                    Width: =320
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                page As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(AppTheme.palette.neutralSecondary)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: ="Page size"//PluginMonitorLoc.pageSize
                                    VerticalAlign: =VerticalAlign.Middle
                                    Width: =60
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                PageNumber As Dropdown.pcfdataset:
                                    AccessibleLabel: ="Pagenumber"
                                    DefaultSelectedItems: =["15"]
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Items: =["5","10","15","20","25","30"]
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =Set(varPageNumber,1);
                                    Width: =70
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                                    Value1 As PowerApps_CoreControls_DropdownCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="Value"
                                        FieldName: ="Value"
                                        FieldType: ="s"
                                        Order: =1
                                        ZIndex: =1

                        div_13 As rectangle:
                            AlignInContainer: =AlignStart
                            BorderColor: =App.Theme.Colors.Darker40
                            Fill: =RGBA(0,0,0,0)
                            Height: =2
                            Width: =Parent.Width - Self.X * 2
                            X: =84
                            Y: =256
                            ZIndex: =6

                    cBuffer_8 As groupContainer.verticalAutoLayoutContainer:
                        FillPortions: =0
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =10
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width
                        ZIndex: =3

            cPane_0 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.Light
                Fill: =ColorValue(AppTheme.palette.white)
                FillPortions: =If(btnBack.Visible,FlexOn,FlexOff)
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =16
                PaddingLeft: =16
                PaddingRight: =16
                PaddingTop: =16
                Visible: =showPane <> false && CountRows(PrivilegesList.SelectedItems)>0
                Width: =450//490//320
                ZIndex: =2

                Container6 As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    BorderColor: =
                    BorderStyle: =BorderStyle.None
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width-20
                    ZIndex: =1

                    SelectedPrivTitleContainer As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =0
                        Height: =32//If(PaneListScreen.Size=1,100,80)//32
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutGap: =8
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width
                        X: =1-1
                        Y: =1-1
                        ZIndex: =1

                        Container4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =If(PaneListScreen.Size=1,80,32)
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =If(PaneListScreen.Size=1,150,(Parent.Width/2)+20)
                            ZIndex: =1

                            btnBack As Button:
                                AccessibleLabel: =DVAssessmentPageLoc.back
                                Appearance: ='ButtonCanvas.Appearance'.Subtle
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Icon: ="ArrowLeft"
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |
                                    =UpdateContext(
                                        {
                                            hidePanelBackButton: true,
                                            showPane: false,
                                            ctxTableEvent: "ClearSelection" & Text(Rand())
                                        }
                                    );
                                Text: =
                                Visible: =!hidePanelBackButton
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =1

                            txtSelectedPrivilegeName As Text:
                                DisplayMode: =DisplayMode.Edit
                                FillPortions: =FlexOff
                                Font: =Font.'Segoe UI'
                                Height: =28
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                PaddingTop: =2
                                Size: =16
                                Text: =currentSelectedPrivilege.RolePrivilegeName
                                VerticalAlign: =VerticalAlign.Middle
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =If(PaneListScreen.Size=1,150,(Parent.Width))
                                Wrap: =false
                                X: =0
                                Y: =0
                                ZIndex: =2

                        Container7_1 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(255, 255, 255, 1)
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =If(PaneListScreen.Size=1,80,32)
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutJustifyContent: =LayoutJustifyContent.End
                            LayoutMinHeight: =100
                            LayoutMinWidth: =200
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Width: =Parent.Width-Container4.Width-10
                            ZIndex: =2

                            CurrentPrivilegeContainer As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(255, 255, 255, 1)
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =30//If(EditPrivilegeScreen.Size=1,30,40)
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =100
                                ZIndex: =1

                                SelectedPrvRowNumber As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(82, 82, 82, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: |-
                                        =//nextRowNumberLabel
                                        currentSelectedPrivilege.RowNumber
                                    VerticalAlign: =VerticalAlign.Middle
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =40
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                OfText As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(82, 82, 82, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =Lower(DVAssessmentPageLoc.ofText)
                                    VerticalAlign: =VerticalAlign.Middle
                                    Width: =20
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                TotalPriviliegesCountText As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(82, 82, 82, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =TotalPrivilegesOfaSelectedRole//CountRows(currentRolePrivileges)
                                    VerticalAlign: =VerticalAlign.Middle
                                    Width: =40
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            PaneButtonsContainer As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(255, 255, 255, 1)
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =30
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =3
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =90
                                ZIndex: =2

                                btnPreviousPrivilege As Button:
                                    AccessibleLabel: ="Previous privilege"
                                    Appearance: ='ButtonCanvas.Appearance'.Subtle
                                    DisplayMode: =If(currentSelectedPrivilege.RowNumber=1,DisplayMode.Disabled,DisplayMode.Edit)
                                    Height: =32
                                    Icon: ="ArrowUp"
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    OnSelect: |
                                        =If(
                                            Mod(
                                                currentSelectedPrivilege.RowNumber,
                                                PageNumber.Selected.Value
                                            ) = 1,
                                            Set(
                                                varPageNumber,
                                                varPageNumber - 1
                                            );
                                            UpdateContext({ctxGridEvent: "LoadNextPageSetFocusOnRow" & Text(Rand())}),
                                            false
                                        );
                                        /*UpdateContext(
                                            {
                                                currentPrevRec: LookUp(
                                                    Privileges,
                                                    Name = LookUp(
                                                        RolePrvilegesWithRowNumber,
                                                        RowNumber = SelectedPrvRowNumber.Text - 1
                                                    ).privilegeName
                                                )
                                            }
                                        ); */
                                        UpdateContext(
                                            {
                                                selectedRows: Filter(
                                                    currentRolePrivileges_temp,
                                                    RecordSelected = true
                                                )
                                            }
                                        );
                                        If(
                                            CountRows(selectedRows) > 0,
                                            ForAll(
                                                selectedRows,
                                                Patch(
                                                    currentRolePrivileges_temp,
                                                    ThisRecord,
                                                    {RecordSelected: false}
                                                );
                                            );
                                            ,
                                            false
                                        );
                                        Patch(
                                            currentRolePrivileges_temp,
                                            LookUp(
                                                currentRolePrivileges_temp,
                                                RolePrivilegeName = LookUp(
                                                    RolePrvilegesWithRowNumber,
                                                    RowNumber = SelectedPrvRowNumber.Text - 1
                                                ).RolePrivilegeName
                                            ),
                                            {RecordSelected: true}
                                        );
                                        ClearCollect(
                                            currentRolePrivilegesToBeDisplayed,
                                            currentRolePrivileges_temp
                                        );
                                        UpdateContext(
                                            {
                                                currentSelectedLevel: currentSelectedPrivilege.level,
                                                ctxTableEvent: "SetSelection" & Text(Rand())
                                            }
                                        );
                                    Text: =
                                    Width: =32
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                btnNextPrivilege As Button:
                                    AccessibleLabel: ="Next privilege"
                                    Appearance: ='ButtonCanvas.Appearance'.Subtle
                                    DisplayMode: |-
                                        =If(
                                            currentSelectedPrivilege.RowNumber = TotalPrivilegesOfaSelectedRole,
                                            DisplayMode.Disabled,
                                            DisplayMode.Edit
                                        )
                                    Height: =32
                                    Icon: ="ArrowDown"
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    OnSelect: |
                                        =
                                        If(
                                            Mod(
                                                currentSelectedPrivilege.RowNumber,
                                                PageNumber.Selected.Value
                                            ) = 0,
                                            Set(
                                                varPageNumber,
                                                varPageNumber + 1
                                            );
                                            UpdateContext({ctxGridEvent: "LoadNextPageSetFocusOnRow" & Text(Rand())}),
                                            false
                                        );
                                        /*UpdateContext(
                                            {
                                                currentNextRec: LookUp(
                                                    Privileges,
                                                    Name = LookUp(
                                                        RolePrvilegesWithRowNumber,// currentRolePrivileges,
                                                        RowNumber = SelectedPrvRowNumber.Text + 1
                                                    ).privilegeName
                                                )
                                            }
                                        ); */
                                        UpdateContext(
                                            {
                                                selectedRows: Filter(
                                                    currentRolePrivileges_temp,
                                                    RecordSelected = true
                                                )
                                            }
                                        );
                                        If(
                                            CountRows(selectedRows) > 0,
                                            ForAll(
                                                selectedRows,
                                                Patch(
                                                    currentRolePrivileges_temp,
                                                    ThisRecord,
                                                    {RecordSelected: false}
                                                );
                                            );
                                            ,
                                            false
                                        );
                                        Patch(
                                            currentRolePrivileges_temp,
                                            LookUp(
                                                currentRolePrivileges_temp,
                                                RolePrivilegeName = LookUp(
                                                    RolePrvilegesWithRowNumber,
                                                    RowNumber = SelectedPrvRowNumber.Text + 1
                                                ).RolePrivilegeName
                                            ),
                                            {RecordSelected: true}
                                        );
                                        ClearCollect(
                                            currentRolePrivilegesToBeDisplayed,
                                            currentRolePrivileges_temp
                                        );
                                        UpdateContext(
                                            {
                                                currentSelectedLevel: currentSelectedPrivilege.level,
                                                ctxTableEvent: "SetSelection" & Text(Rand())
                                            }
                                        );
                                    Text: =
                                    Width: =32
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                btnClosePane As Button:
                                    AccessibleLabel: ="Close"
                                    Appearance: ='ButtonCanvas.Appearance'.Subtle
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Icon: ="Dismiss"
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    OnSelect: |
                                        =UpdateContext(
                                            {
                                                selectedRows: Filter(
                                                    currentRolePrivileges_temp,
                                                    RecordSelected = true
                                                )
                                            }
                                        );
                                        If(
                                            CountRows(selectedRows) > 0,
                                            ForAll(
                                                selectedRows,
                                                Patch(
                                                    currentRolePrivileges_temp,
                                                    ThisRecord,
                                                    {RecordSelected: false}
                                                );
                                            );
                                            ClearCollect(currentRolePrivilegesToBeDisplayed,currentRolePrivileges_temp);
                                            ,
                                            false
                                        );
                                        
                                        UpdateContext(
                                            {
                                                showPrvEditContainer: false,
                                               ctxTableEvent: "ClearSelection" & Text(Rand()),
                                               currentSelectedPrivilege:Blank(),
                                               makeDetailsListEditableForRoleUpdation:true,showPane:false
                                            }
                                        );
                                        If(
                                            !hidePanelBackButton,
                                            UpdateContext({hidePanelBackButton: true}),
                                            true
                                        );
                                    Text: =
                                    Width: =32
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                    Container3 As groupContainer.verticalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        LayoutOverflowY: =LayoutOverflow.Scroll
                        PaddingLeft: =6
                        PaddingRight: =6
                        PaddingTop: =12
                        ZIndex: =2

                        SelectedPrivInfoContainer As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(209, 209, 209, 1)
                            BorderThickness: =1
                            Fill: =RGBA(0, 0, 0, 0.01)
                            FillPortions: =0
                            Height: =div_23.Y//If(!hidePanelBackButton,200,160)//160
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =12
                            LayoutMinHeight: =200
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =5
                            PaddingTop: =10
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Visible: |-
                                =//If(prvSeverityLabel="No Risk",false,true)
                                If(
                                    currentSelectedPrivilege.NewSeverity = Text('Assessed Risk Level (Risk Assessments)'.'No Risk'),//"No Risk",
                                    false,
                                    true
                                )
                            Width: =Parent.Width-20
                            ZIndex: =1

                            PrivInfoContainer As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Start
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =div_24.Y
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =8
                                LayoutMinHeight: =100
                                LayoutMinWidth: =450
                                LayoutMode: =LayoutMode.Auto
                                LayoutWrap: =true
                                PaddingLeft: =12
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =Parent.Width-20
                                ZIndex: =1

                                Image4 As image:
                                    AlignInContainer: =AlignInContainer.Center
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    Height: =32
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Image: =If(currentSelectedPrivilege.NewSeverity="Critical",CriticalSeverityWarning,HighSeverityWarning)
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    Width: =32
                                    ZIndex: =1

                                LightBulbInfoIcon As icon.Lightbulb:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(220, 220, 220, 1)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    Height: =24
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Icon: =Icon.Lightbulb
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    Visible: =false
                                    Width: =24
                                    ZIndex: =2

                                Container27 As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Start
                                    BorderColor: =
                                    BorderStyle: =BorderStyle.None
                                    Height: =rCardDivider_12.Y
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutJustifyContent: =LayoutJustifyContent.Center
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =4

                                    PrivInfoLabel As Text:
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        FontColor: =RGBA(36, 36, 36, 1)
                                        Height: =24
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Text: =currentSelectedPrivilege.NewSeverity & " risk"//DVAssessmentPageLoc.reduceRiskLevelHeaderText
                                        VerticalAlign: =VerticalAlign.Middle
                                        Weight: ='TextCanvas.Weight'.Bold
                                        Width: =150
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    txtCaption1_6 As Text:
                                        Align: ="Start"
                                        AutoHeight: =false
                                        BorderStyle: =""
                                        ContentLanguage: =""
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =""
                                        FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                        FontItalic: =false
                                        FontStrikethrough: =false
                                        FontUnderline: =false
                                        Height: =LookUp(_typeramp,name="Caption1").lineHeight
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        PaddingBottom: =0
                                        PaddingLeft: =0
                                        PaddingRight: =0
                                        PaddingTop: =0
                                        Size: =LookUp(_typeramp,name="Caption1").fontSize
                                        TabIndex: =0
                                        Text: =If(currentSelectedPrivilege.PrivilegeComplianceStatus="Not allowed","Remove privilege","Reduce privileges")
                                        Tooltip: =""
                                        VerticalAlign: =""
                                        Visible: =true
                                        Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                        Width: =250
                                        Wrap: =false
                                        X: =7
                                        Y: =94
                                        ZIndex: =2

                                    rCardDivider_12 As rectangle:
                                        AccessibleLabel: ="buffer"
                                        BorderColor: =App.Theme.Colors.Darker40
                                        Fill: =RGBA(0,0,0,0)
                                        Height: =1
                                        Width: =Parent.Width - Self.X*2
                                        X: =72
                                        Y: =52
                                        ZIndex: =3

                                div_24 As rectangle:
                                    AccessibleLabel: ="buffer"
                                    BorderColor: =App.Theme.Colors.Darker40
                                    Fill: =RGBA(0,0,0,0)
                                    Height: =2
                                    Width: =Parent.Width - Self.X * 2
                                    X: =84
                                    Y: =256
                                    ZIndex: =6

                            PrivDescContainer As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                FillPortions: =0
                                Height: =PrivDescTextCanvas.Height+10//If(!hidePanelBackButton,140,100)//100
                                LayoutAlignItems: =LayoutAlignItems.Stretch
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =80
                                LayoutMinWidth: =190
                                LayoutMode: =LayoutMode.Auto
                                LayoutWrap: =true
                                PaddingLeft: =20
                                PaddingRight: =10
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =Parent.Width-20
                                ZIndex: =2

                                PrivDescTextCanvas As Text:
                                    Align: ="Start"
                                    AlignInContainer: =AlignInContainer.Start
                                    AutoHeight: =true
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =55
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Caption1").fontSize
                                    TabIndex: =0
                                    Text: |-
                                        =If(
                                            currentSelectedPrivilege.PrivilegeComplianceStatus = "Not allowed",
                                            "This privilege has not been approved for use at any level. Remove the privilege from the role and rescan, or contact your admin to coordinate an exception.",
                                            "The highest approved access level is " & Lower(currentSelectedPrivilege.RecommendedLevel) & ". Remove the privilege from the role and rescan, or contact your admin to coordinate an exception."
                                        )//DVAssessmentPageLoc.prvOrgRiskInfo
                                    Tooltip: =""
                                    VerticalAlign: =VerticalAlign.Middle
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                                    Width: =Parent.Width-40
                                    Wrap: =true
                                    X: =7
                                    Y: =94
                                    ZIndex: =1

                                PrivDescTextCanvas_1 As Text:
                                    AlignInContainer: =AlignInContainer.Start
                                    AutoHeight: =true
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =RGBA(0, 0, 0, 1)
                                    Height: =If(PaneListScreen.Size=1,100,60)//560//60
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: |-
                                        =If(
                                            currentSelectedPrivilege.PrivilegeComplianceStatus = "Not allowed",
                                            "This privilege has not been approved for use at any level. Remove the privilege from the role and rescan, or contact your admin to coordinate an exception.",
                                            "The highest approved access level is user. Remove the privilege from the role and rescan, or contact your admin to coordinate an exception."
                                        )//DVAssessmentPageLoc.prvOrgRiskInfo
                                    VerticalAlign: =VerticalAlign.Middle
                                    Visible: =false
                                    Width: =Parent.Width-30
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                PrivWarningContainer As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Start
                                    DropShadow: =DropShadow.Light
                                    Fill: =RGBA(255, 184, 174, 1)
                                    FillPortions: =0
                                    Height: =35
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutJustifyContent: =LayoutJustifyContent.Center
                                    LayoutMinHeight: =25
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Visible: =false
                                    Width: =180
                                    ZIndex: =3

                                    PrivWarningTextCanvas As Text:
                                        Align: ='TextCanvas.Align'.Center
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        FontColor: =RGBA(36, 36, 36, 1)
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Text: =currentSelectedPrivilege.NewSeverity &" "&DVAssessmentPageLoc.severityColumn
                                        VerticalAlign: =VerticalAlign.Middle
                                        Weight: ='TextCanvas.Weight'.Regular
                                        Width: =150
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                            div_23 As rectangle:
                                AccessibleLabel: ="buffer"
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =3

                        PrivilegeLevelChangesContainer As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =PrivilegetypeContainer.Height+RecommendedLevelContainer.Height+PrivilegeChangesSaveButtonsContainer.Height//If(EditPrivilegeScreen.Size=1,360,346)//346
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =5
                            Width: =Parent.Width-20
                            ZIndex: =2

                            PrivilegetypeContainer As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                FillPortions: =0
                                Height: =80
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =50
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                PaddingTop: =5
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =Parent.Width-10
                                ZIndex: =1

                                PrivTypeLabel As Text:
                                    AlignInContainer: =AlignInContainer.Start
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(50, 49, 48, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =DVAssessmentPageLoc.privilegeTypeText
                                    VerticalAlign: =VerticalAlign.Middle
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =100
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                PrivTypeValue As Text:
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(50, 49, 48, 1)
                                    Height: =40
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =currentSelectedPrivilege.securityPrivilegeName
                                    VerticalAlign: =VerticalAlign.Middle
                                    Width: =300
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                            RecommendedLevelContainer As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderColor: =RGBA(255, 255, 255, 1)
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =80
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =80
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                PaddingTop: =5
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =Parent.Width-10
                                ZIndex: =2

                                RecommendedLevelLabel As Text:
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(50, 49, 48, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =DVAssessmentPageLoc.recommendedLevelColumnName
                                    VerticalAlign: =VerticalAlign.Middle
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =200
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                RecommendedLevelValue As Text:
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(50, 49, 48, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =currentSelectedPrivilege.RecommendedLevel
                                    VerticalAlign: =VerticalAlign.Middle
                                    Width: =200
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                            PrivilegeChangesSaveButtonsContainer As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                FillPortions: =0
                                Height: =PrivilegeLevelTitleContainer.Height + CmbPrivilegeLevel.Height + If(Container1_4.Visible, Container1_4.Height,0) + 20
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =5
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =5
                                PaddingTop: =5
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =Parent.Width-10
                                ZIndex: =3

                                PrivilegeLevelTitleContainer As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: =0
                                    Height: =32
                                    LayoutMinHeight: =60
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingTop: =5
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Width: =Parent.Width-10
                                    ZIndex: =1

                                    PrivilegeLevelLabel As Text:
                                        AlignInContainer: =AlignInContainer.Center
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        FontColor: =RGBA(36, 36, 36, 1)
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Text: =DVAssessmentPageLoc.privilegeLevelText
                                        VerticalAlign: =VerticalAlign.Middle
                                        Weight: ='TextCanvas.Weight'.Semibold
                                        Width: =96
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    PrivLevelInfoIcon As icon.Information:
                                        AlignInContainer: =AlignInContainer.End
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        Color: =RGBA(66, 66, 66, 1)
                                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                        DisabledColor: =RGBA(220, 220, 220, 1)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        Height: =25
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Icon: =Icon.Information
                                        PaddingBottom: =3
                                        PaddingRight: =3
                                        PaddingTop: =3
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        Tooltip: =DVAssessmentPageLoc.accessLevelTooltip
                                        Width: =32
                                        ZIndex: =2

                                CmbPrivilegeLevel As Combobox.pcfdataset:
                                    AccessibleLabel: ="ComboboxPrivilegeLevel"
                                    BasePaletteColor: =RGBA(245, 245, 245, 1)
                                    DefaultSelectedItems: =Filter(col_privilegesLevel,ItemValue=currentSelectedLevel)
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(36, 36, 36, 1)
                                    FontSize: =14
                                    FontWeight: =FontWeight.Normal
                                    Height: =32
                                    Items: =col_privilegesLevel
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: |
                                        =UpdateContext(
                                            {
                                                currentSelectedLevel: CmbPrivilegeLevel.Selected.ItemValue,
                                                showWarningMessageBar: true
                                            }
                                        );
                                    Width: =320
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                    ItemValue2_1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="ItemValue"
                                        FieldName: ="ItemValue"
                                        FieldType: ="s"
                                        Order: =1
                                        ZIndex: =1

                                    ItemKey2_1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="ItemKey"
                                        FieldName: ="ItemKey"
                                        FieldType: ="n"
                                        Order: =2
                                        ZIndex: =2

                                Container1_4 As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Start
                                    BorderColor: =RGBA(255, 255, 255, 1)
                                    BorderStyle: =BorderStyle.None
                                    FillPortions: =0
                                    Height: =90//If(EditPrivilegeScreen.Size=1,136,90)//60
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingTop: =5
                                    RadiusBottomLeft: =4
                                    RadiusBottomRight: =4
                                    RadiusTopLeft: =4
                                    RadiusTopRight: =4
                                    Visible: = If(CmbPrivilegeLevel.Selected.ItemValue = PrivilegesList.Selected.level,false,true) && showWarningMessageBar
                                    Width: =Parent.Width-20
                                    ZIndex: =3

                                    Icon1_1 As icon.Warning:
                                        AlignInContainer: =AlignInContainer.Start
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        Color: =RGBA(196, 53, 1, 1)
                                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                        DisabledColor: =RGBA(220, 220, 220, 1)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        DisplayMode: =DisplayMode.View
                                        Fill: =RGBA(255, 2455, 255, 1)
                                        Height: =32
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Icon: =Icon.Warning
                                        PaddingBottom: =3
                                        PaddingLeft: =3
                                        PaddingRight: =3
                                        PaddingTop: =3
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        Visible: =false
                                        Width: =30
                                        ZIndex: =1

                                    TextCanvas1_2 As Text:
                                        Align: ='TextCanvas.Align'.Start
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =Font.'Segoe UI'
                                        FontColor: =RGBA(196, 53, 1, 1)
                                        Height: =60
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        Text: |-
                                            ="Warning: This form will update the actual security role privilege, impacting user access"
                                        VerticalAlign: =VerticalAlign.Top
                                        Visible: =false
                                        Width: =Parent.Width-Icon1_1.Width
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                    FluentMessageBar1 As FluentMessageBar.pcfdataset:
                                        Body: |-
                                            ="Warning: This form will update the actual security role privilege, impacting user access"
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =Self.AutoHeight
                                        Intent: ='PowerCAT.FluentMessageBar.Intent'.warning
                                        Items: =
                                        LayoutMinHeight: =Self.AutoHeight
                                        LayoutMinWidth: =200
                                        OnDismiss: =false
                                        OnSelect: =false
                                        Shape: ='PowerCAT.FluentMessageBar.Shape'.rounded
                                        Width: =Parent.Width
                                        X: =0
                                        Y: =0
                                        ZIndex: =4

                    PrivChangesBtnContainer As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =FlexOff
                        Height: =40
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutGap: =8
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =288
                        Y: =649
                        ZIndex: =3

                        PrivSaveButtonCanvas As Button:
                            AccessibleLabel: ="Save"
                            Appearance: ='ButtonCanvas.Appearance'.Primary
                            DisplayMode: |-
                                =If(
                                    !IsBlank(AutoScanEnvVar) && AutoScanEnvVar.Value = "yes",
                                    If(
                                        CmbPrivilegeLevel.Selected.ItemValue = currentSelectedPrivilege.level,
                                        DisplayMode.Disabled,
                                        If(
                                            makeDetailsListEditableForRoleUpdation,
                                            DisplayMode.Edit,
                                            DisplayMode.Disabled
                                        )
                                    ),
                                    DisplayMode.Disabled
                                )
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        init: false,
                                        showSpinnerForEditRolesColor: RGBA(
                                            255,
                                            255,
                                            255,
                                            0.7
                                        ),
                                        showSpinnerForEditRolesLabel: DVAssessmentPageLoc.savingLoaderText
                                    }
                                );
                                ClearCollect(
                                    selectedDepthLevel,
                                    LookUp(
                                        securityPrivilegesLevel,
                                        ItemValue = currentSelectedLevel
                                    )
                                );
                                If(
                                    LookUp(
                                        securityPrivilegesLevel,
                                        ItemValue = currentSelectedLevel
                                    ).ItemValue = DVAssessmentPageLoc.noAccessPriviliegeLevel,
                                    Remove(
                                        col_roleprivileges,
                                        LookUp(
                                            col_roleprivileges,
                                            ThisRecord.PrivilegeId = currentSelectedPrivilege.privilegeId
                                        )
                                    ),
                                    UpdateContext(
                                        {
                                            depthToBeUpdated: LookUp(
                                                PrivilegesLeDepthLevel,
                                                ItemKey = First(selectedDepthLevel).ItemValue
                                            )
                                        }
                                    );
                                    Patch(
                                        col_roleprivileges,
                                        LookUp(
                                            col_roleprivileges,
                                            PrivilegeId = currentSelectedPrivilege.privilegeId
                                        ),
                                        {Depth: depthToBeUpdated.ItemValue}
                                    );
                                    
                                );
                                Set(
                                    updatedPrivileges,
                                    JSON({Privileges: col_roleprivileges})
                                );
                                UpdateContext({triggerUpdateRolePrivileges: !triggerUpdateRolePrivileges});
                            Text: ="Save"
                            Width: =96
                            X: =0
                            Y: =0
                            ZIndex: =1

                        PrivCancelButtonCanvas As Button:
                            AccessibleLabel: ="Cancel"
                            Appearance: ='ButtonCanvas.Appearance'.Secondary
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        showPane:false,
                                        selectedRows: Filter(
                                            currentRolePrivileges_temp,
                                            RecordSelected = true
                                        )
                                    }
                                );
                                If(
                                    CountRows(selectedRows) > 0,
                                    ForAll(
                                        selectedRows,
                                        Patch(
                                            currentRolePrivileges_temp,
                                            ThisRecord,
                                            {RecordSelected: false}
                                        );
                                    );
                                    ClearCollect(currentRolePrivilegesToBeDisplayed,currentRolePrivileges_temp);
                                    ,
                                    false
                                );
                                
                                UpdateContext(
                                    {
                                        showPrvEditContainer: false,
                                        ctxTableEvent: "ClearSelection" & Text(Rand()),
                                        currentSelectedPrivilege:Blank(),
                                        makeDetailsListEditableForRoleUpdation:true
                                    }
                                );
                                If(
                                    !hidePanelBackButton,
                                    UpdateContext({hidePanelBackButton: true}),
                                    true
                                );
                            Text: ="Cancel"
                            Width: =96
                            X: =0
                            Y: =0
                            ZIndex: =2

                    DVReplaceRolePrivileges As DVAPITester:
                        Data: =updatedPrivileges
                        DisplayMode: =DisplayMode.Edit
                        Height: =1
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        Method: ='PowerCAT.DVAPITester.Method'.Post
                        OnChange: |
                            =/*Set(
                                responseUpdatedPrv,
                                Text(Self.OutputString)
                            );*/
                            If(
                                DVReplaceRolePrivileges.IsSuccessful,
                                Notify(
                                    DVAssessmentPageLoc.roleUpdatedSuccessfullyText,
                                    NotificationType.Success,
                                    5000
                                );
                                UpdateContext(
                                    {
                                        privilegeRiskBaselineRecord: LookUp(
                                            'Privilege Risk Baselines',
                                            'Privilege Name' = currentSelectedPrivilege.privilegeName && 'Risk Assessment Setting'.'Risk Assessment Setting' = cmbRiskAssessmentHistory.Selected.AssessmentSettingId
                                        )
                                    }
                                );
                                If(
                                    IsBlankOrError(privilegeRiskBaselineRecord),
                                    Set(
                                        updatedSeverity,
                                        "Critical"
                                    ),
                                    Set(
                                        updatedSeverity,
                                        With(
                                            {baseLineRecord: privilegeRiskBaselineRecord},
                                            Switch(
                                                currentSelectedLevel,
                                                DVAssessmentPageLoc.userColumnName,
                                                Text(baseLineRecord.User),
                                                DVAssessmentPageLoc.parentChildBuColumnName,
                                                Text(baseLineRecord.'Parent Child Business Unit'),
                                                DVAssessmentPageLoc.businessUnitColumnName,
                                                Text(baseLineRecord.'Business Unit'),
                                                DVAssessmentPageLoc.organizationColumnName,
                                                Text(baseLineRecord.Organization),
                                                DVAssessmentPageLoc.noAccessPriviliegeLevel,
                                                Text('Assessed Risk Level (Risk Assessments)'.'No Risk')//Text(DVAssessmentPageLoc.noRiskValue)
                            /* Default action */,
                                                false
                                            )
                                        )
                                    );
                                    /* Set(
                                        updatedSeverity,
                                        With(
                                            {
                                                baseLineRecord: LookUp(
                                                    LookUp(
                                                        BaseLineSettingsListForRoles,
                                                        AssessmentSettingId = GUID(selectedRoleRiskAssessmentProfileId)
                                                    ).RiskConfiguration,
                                                    Type = currentSelectedPrivilege.securityPrivilegeName
                                                )
                                            },
                                            Switch(
                                                currentSelectedLevel,
                                                DVAssessmentPageLoc.userColumnName,
                                                Text(baseLineRecord.User),
                                                DVAssessmentPageLoc.parentChildBuColumnName,
                                                Text(baseLineRecord.ParentChildBusinessUnit),
                                                DVAssessmentPageLoc.businessUnitColumnName,
                                                Text(baseLineRecord.BusinessUnit),
                                                DVAssessmentPageLoc.organizationColumnName,
                                                Text(baseLineRecord.Organization),
                                                DVAssessmentPageLoc.noAccessPriviliegeLevel,
                                                Text('Assessed Risk Level (Risk Assessments)'.'No Risk')//Text(DVAssessmentPageLoc.noRiskValue)
                                                false
                                            )
                                        )
                                    );*/
                                );
                                UpdateContext(
                                    {
                                        selectedRows: Filter(
                                            currentRolePrivileges_temp,
                                            RecordSelected = true
                                        )
                                    }
                                );
                                If(
                                    CountRows(selectedRows) > 0,
                                    ForAll(
                                        selectedRows,
                                        Patch(
                                            currentRolePrivileges_temp,
                                            ThisRecord,
                                            {RecordSelected: false}
                                        );
                                    );
                                    ,
                                    false
                                );
                                Patch(
                                    currentRolePrivileges_temp,
                                    LookUp(
                                        currentRolePrivileges_temp,
                                        RolePrivilegeName = LookUp(
                                            RolePrvilegesWithRowNumber,
                                            RowNumber = currentSelectedPrivilege.RowNumber
                                        ).RolePrivilegeName
                                    ),
                                    {
                                        level: currentSelectedLevel,
                                        NewSeverity: First(
                                            Filter(
                                                col_PrivilegesSeverityRisk,
                                                Severity = updatedSeverity
                                            )
                                        ).Severity,
                                        /* NewSeverityTagColor: LookUp(
                                            ChartThemeRiskForRoles,
                                            status = Text(
                                                LookUp(
                                                    col_PrivilegesSeverityRisk,
                                                    Severity = updatedSeverity
                                                ).Severity
                                            )
                                        ).color*/
                                        NewSeverityTagColor: Switch(
                                            updatedSeverity,
                                            "Critical",
                                            "#D83A00",
                                            "High",
                                            "#FF9349",
                                            "Moderate",
                                            "#FFBA01",
                                            "Low",
                                            "#029DCC",
                                            "#18AB58"// No risk
                                        ),
                                        RecordSelected: true
                                    }
                                );
                                ClearCollect(
                                    currentRolePrivileges_temp,
                                    SortByColumns(
                                        With(
                                            {
                                                currentItem: Sort(
                                                    currentRolePrivileges_temp,
                                                    assessedRiskDetailsSortCol,
                                                    If(
                                                        assessedRiskDetailsSortOrder = 'PowerCAT.FluentDetailsList.SortEventDirection'.Ascending,
                                                        SortOrder.Ascending,
                                                        SortOrder.Descending
                                                    )
                                                )
                                            },
                                            ForAll(
                                                Sequence(CountRows(currentItem)),
                                                Patch(
                                                    Last(
                                                        FirstN(
                                                            currentItem,
                                                            Value
                                                        )
                                                    ),
                                                    {RowNumber: Value}
                                                )
                                            )
                                        ),
                                        "NewSeverity",
                                        SortOrder.Ascending
                                    )
                                );
                                ClearCollect(
                                    currentRolePrivilegesToBeDisplayed,
                                    currentRolePrivileges_temp
                                );
                                UpdateContext({makeDetailsListEditableForRoleUpdation: false});
                                UpdateContext(
                                    {
                                        skipToUpdatedPage: true,
                                        showMessageBarForRoleUpdation: true,
                                        isRoleUpdatedSuccessfully: true
                                    }
                                );
                                If(
                                 // check if there were any errors when the test score was submitted
                                    !IsEmpty(Errors(currentRolePrivileges_temp)),
                                 // if true, show any error message
                                    Notify(
                                        Concat(
                                            Errors(currentRolePrivileges_temp),
                                            Column & ": " & Message
                                        ),
                                        NotificationType.Error,
                                        11111
                                    ),
                                 // else, false
                                    false;
                                ),
                                Notify(
                                    DVAssessmentPageLoc.errorMessageText,
                                    NotificationType.Error,
                                    11111
                                )
                            );
                            If(
                                skipToUpdatedPage,
                                Set(
                                    varPageNumber,
                                    RoundUp(
                                        LookUp(
                                            RolePrvilegesWithRowNumber,
                                            RecordSelected = true
                                        ).RowNumber / PageNumber.Selected.Value,
                                        0
                                    )
                                );
                                UpdateContext({ctxGridEvent: "LoadNextPageSetFocusOnRow" & Text(Rand())});
                                UpdateContext({skipToUpdatedPage: false});
                                ,
                                UpdateContext({skipToUpdatedPage: false});
                                
                            );
                            UpdateContext(
                                {
                                    currentSelectedLevel: currentSelectedPrivilege.level,
                                    ctxTableEvent: "SetSelection" & Text(Rand())
                                }
                            );
                            If(
                                isRoleUpdatedSuccessfully,
                                Clear(SelectedAssessmentRolePrivileges),
                                true
                            );
                            UpdateContext({init: true});
                        RequestID: =Rand()
                        RequestURL: ="/api/data/v9.2/roles("&RoleId&")/Microsoft.Dynamics.CRM.ReplacePrivilegesRole"
                        Tooltip: =
                        Trigger: =triggerUpdateRolePrivileges
                        Width: =1
                        X: =0
                        Y: =0
                        ZIndex: =4

    cSpinner_6 As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: |-
            =If(IsBlankOrError(showSpinnerForEditRolesColor),ColorValue("#fafafa"),showSpinnerForEditRolesColor)
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Visible: =init <> true
        Width: =Parent.Width
        ZIndex: =2

        Spinner1_7 As Spinner:
            AccessibleLabel: ="Spinner"
            DisplayMode: =DisplayMode.Edit
            Height: =Parent.Height
            Label: =showSpinnerForEditRolesLabel
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            SpinnerSize: ='Spinner.SpinnerSize'.Large
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

    DVRetrieveRolePrivileges As DVAPITester:
        Data: ="{}"
        DisplayMode: =DisplayMode.Edit
        Height: =1
        OnChange: |
            =UpdateContext({responseRetrieveRoles: Text(Self.OutputString)});
            ClearCollect(
                col_roleprivileges_temp,
                Table({Privileges: ParseJSON(responseRetrieveRoles).RolePrivileges})
            );
            ClearCollect(
                col_roleprivileges,
                ForAll(
                    Table(First(col_roleprivileges_temp).Privileges),
                    {
                        Depth: Text(ThisRecord.Value.Depth),
                        PrivilegeId: GUID(ThisRecord.Value.PrivilegeId),
                        BusinessUnitId: GUID(ThisRecord.Value.BusinessUnitId),
                        PrivilegeName: Text(ThisRecord.Value.PrivilegeName),
                        RecordFilterId: Text(ThisRecord.Value.RecordFilterId),
                        RecordFilterUniqueName: Text(ThisRecord.Value.RecordFilterUniqueName)
                    }
                )
            );
        RequestID: =Rand()
        RequestURL: ="/api/data/v9.2/RetrieveRolePrivilegesRole(RoleId="&RoleId&")"
        Tooltip: =
        Trigger: =triggerRetrieveRolePrivileges
        Width: =1
        X: =80
        Y: =80
        ZIndex: =3

