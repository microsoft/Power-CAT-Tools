EditSettingsScreen As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnHidden: |
        =UpdateContext(
            {
                lblName: "",
                isNameValueChanged: false,
                lblSelectedAssessmentSettingId: Blank(),
                showPane: false,
                iscmbBUChanged: false,
                iscmbOrganizationChanged: false,
                iscmbPCBUChanged: false,
                iscmbUserChanged: false,
                selectedBaseLinePrivilegeRecord: Blank(),
                selectedMiscellanousPrivilege: Blank(),
                selectedTablePrivilege: Blank(),
                isRadioGroupReadOnly: false,
                previousSelectedBaseLinePrivilegeRecord: Blank(),
                showSpinnerForConfirmationDialog: false,
                showPaneFullScreen: false
            }
        );
        Concurrent(
            Set(
                currentSelectedAssessmentSetting,
                Blank()
            ),
            Set(
                isNewButtonClicked,
                false
            ),
            Reset(txtNameInput),
            Clear(col_RiskAssessmentsToBeUpdatedToStale)
        );
    OnVisible: |
        =/* Load data for this page while spinner is loading */
        If(
            init <> true,
            UpdateContext(
                {
                    TablePrivilegeText: "Table privilege",
                    CapabilityPrivilegeText: "Capability privilege"
                }
            ),
            true
        );
        UpdateContext(
            {
                lblSelectedAssessmentSettingId: If(
                    isNewButtonClicked,
                    Blank(),
                    currentSelectedAssessmentSetting.'Risk Assessment Setting'
                ),
                showLoader: false,
                isNameUnique: true,
                showSpinnerForConfirmationDialog: false
            }
        );
        Reset(txtBaselinePrivilegesRatings);
        Reset(dpdTables);
        Concurrent(
            Set(
                triggerRetrieveEntityDefinitions,
                !triggerRetrieveEntityDefinitions
            ),
            Set(
                triggerRetrieveMiscellaneousPrivileges,
                !triggerRetrieveMiscellaneousPrivileges
            ),
            Set(
                dropDownStatusForEditSettings,
                {
                    Key: 0,
                    TableName: "All"
                }
            );
            
        );
        If(
            isNewButtonClicked,
            Set(
                currentSelectedAssessmentSetting,
                Blank()
            ),
            false
        );
        ClearCollect(
            col_DistinctTablesToFilter_temp,
            ForAll(
                Sort(
                    Distinct(
                        ActivePrivilegeRiskBaselinesRelatedToAProfile,
                        Table
                    ),
                    Value,
                    SortOrder.Ascending
                ),
                {TableName: ThisRecord.Value}
            )
        );
        ClearCollect(
            col_DistinctTablesToFilter,
            ForAll(
                Sequence(CountRows(col_DistinctTablesToFilter_temp)),
                Patch(
                    Last(
                        FirstN(
                            col_DistinctTablesToFilter_temp,
                            Value
                        )
                    ),
                    {Key: Value}
                )
            )
        );
        Collect(
            col_DistinctTablesToFilter,
            Table(
                {
                    Key: 0,
                    TableName: "All"
                }
            )
        );
        UpdateContext(
            {
                init: true,
                isNameValueChanged: false,
                lblName: If(
                    isNewButtonClicked,
                    "",
                    currentSelectedAssessmentSetting.Name
                ),
                showPane: false,
                showPrivilegeRiskContainer: true,
                showStaleMessageBar: false
            }
        );

    cFrame_1 As groupContainer.verticalAutoLayoutContainer:
        Height: =App.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        Width: =App.Width
        ZIndex: =1

        cTopNav_1 As groupContainer.horizontalAutoLayoutContainer:
            Fill: =ColorValue(AppTheme.palette.neutralLighter)
            FillPortions: =FlexOff
            Height: =60
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =24
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =20
            PaddingRight: =20
            X: =12
            Y: =20
            ZIndex: =1

            "AutoWidthLabel1_5 As 'Auto Width Label (1.1.39)'":
                DisplayMode: =DisplayMode.Edit
                FontSize: =18
                FontSizeUnits: ='PowerCAT.AutoWidthLabel.FontSizeUnits'.Px
                FontWeight: ="600"
                Height: =24
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Text: =_featureName
                Tooltip: ="AutoWidthLabel_Desc"
                Width: =Self.AutoWidth
                X: =0
                Y: =0
                ZIndex: =1

            "TabList1_1 As 'Tab list'.pcfdataset":
                AccessibleLabel: ="EditSettingsScreenTabList"
                DefaultSelectedItems: =LookUp(Nav, ThisRecord.Screen = SettingsLandingScreen)
                DisplayMode: =DisplayMode.Edit
                FillPortions: =FlexOn
                Height: =55
                Items: =Nav
                LayoutMinHeight: =55
                LayoutMinWidth: =280
                OnChange: =Navigate(Self.Selected.Screen);
                Width: =280
                X: =0
                Y: =0
                ZIndex: =2

                DisplayName1_1 As PowerApps_CoreControls_TabListTemplate_dataField.textualColumn:
                    FieldDisplayName: ="DisplayName"
                    FieldName: ="DisplayName"
                    FieldType: ="s"
                    Order: =1
                    ZIndex: =1

            Container11_10 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =
                BorderStyle: =BorderStyle.None
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =8
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =3

                "LearnIcon_4 As 'Fluent Icon (1.1.39)'":
                    AccessibilityLabel: =DVAssessmentPageLoc.learnButtonText
                    DisplayMode: =DisplayMode.Edit
                    FontColor: |-
                        ="#424242"
                    Height: =Parent.Height
                    HoverFillColor: =AppTheme.palette.neutralLight
                    HoverFontColor: |-
                        ="#424242"
                    HoverIconColor: |-
                        ="#424242"
                    IconColor: |-
                        ="#424242"
                    IconName: ="BookAnswers"
                    IconSize: =20
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: |-
                        =Launch(
                            "https://aka.ms/dvacc/riskassess",
                            {},
                            LaunchTarget.New
                        )
                    Tooltip: =DVAssessmentPageLoc.learnButtonText
                    Width: =32
                    X: =0
                    Y: =0
                    ZIndex: =1

                "QuestionIcon_4 As 'Fluent Icon (1.1.39)'":
                    AccessibilityLabel: =DVAssessmentPageLoc.helpButtonText
                    DisplayMode: =DisplayMode.Edit
                    FontColor: |-
                        ="#424242"
                    Height: =Parent.Height
                    HoverFillColor: =AppTheme.palette.neutralLight
                    HoverFontColor: |-
                        ="#424242"
                    HoverIconColor: |-
                        ="#424242"
                    IconColor: |-
                        ="#424242"
                    IconName: ="StatusCircleQuestionMark"
                    IconSize: =28
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: |-
                        =Launch(
                            "https://aka.ms/dvacc/riskassess/help",
                            {},
                            LaunchTarget.New
                        )
                    Tooltip: =DVAssessmentPageLoc.helpButtonText
                    Width: =32
                    X: =0
                    Y: =0
                    ZIndex: =2

                "BugIcon_4 As 'Fluent Icon (1.1.39)'":
                    AccessibilityLabel: ="Report a bug"
                    DisplayMode: =DisplayMode.Edit
                    FontColor: |-
                        ="#424242"
                    Height: =Parent.Height
                    HoverFillColor: =AppTheme.palette.neutralLight
                    HoverFontColor: |-
                        ="#424242"
                    HoverIconColor: |-
                        ="#424242"
                    IconColor: |-
                        ="#424242"
                    IconName: ="Bug"
                    IconSize: =20
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: |-
                        =Launch(
                            "https://aka.ms/dvacc/riskassess/bug",
                            {},
                            LaunchTarget.New
                        )
                    Tooltip: ="Report a bug"
                    Width: =32
                    X: =0
                    Y: =0
                    ZIndex: =3

        FluentMessageBar_StaleAssessments As FluentMessageBar.pcfdataset:
            AlignInContainer: =AlignInContainer.Stretch
            Body: ="Rescan manually to update compliance status on affected risk assessments."
            DisplayMode: =DisplayMode.Edit
            Height: =Self.AutoHeight-10
            Intent: ='PowerCAT.FluentMessageBar.Intent'.success
            Items: |-
                =Table(
                    {
                        ItemKey: "scanallassociatedroles",
                        ItemDisplayName: "Scan all associated roles",
                        //ItemIconName: "Mail",
                        ItemAppearance: "",
                        ItemIconStyle: "Regular",
                        ItemTooltip: "Scan all associated roles",
                        ItemVisible: true,
                        ItemDisabled: false
                    }
                )
            LayoutMinHeight: =Self.AutoHeight
            LayoutMinWidth: =300
            OnDismiss: |-
                = UpdateContext({showStaleMessageBar:false});
            OnSelect: |-
                =Switch(
                    Self.Selected.ItemKey,/* Action for Key 'scanallassociatedroles' */
                    "scanallassociatedroles",
                    Notify("scanallassociatedroles clicked");
                    If(
                        BatchStatus = "Running",
                        Notify(
                            "Scanning of the role is still in inprogress State. Please try after some time",
                            NotificationType.Information,
                            5000
                        );
                        ,
                        UpdateContext(
                            {
                                init: false,
                                spinnerLabelForSettings: "Queuing scan",
                                spinnerColorForSettings: RGBA(
                                    255,
                                    255,
                                    255,
                                    0.7
                                )
                            }
                        );
                        With(
                            {
                                s: "msdyn_DVAcceleratorBatchStatus",
                                v: JSON(
                                    First(
                                        Table(
                                            {
                                                BatchId: GUID(),
                                                BatchStatus: "Running"
                                            }
                                        )
                                    )
                                )
                            },
                            If(
                                IsBlankOrError(BatchStatusEnvVar),
                                Patch(
                                    [@'Environment Variable Values'],
                                    Defaults([@'Environment Variable Values']),
                                    {
                                        'Environment Variable Definition': LookUp(
                                            'Environment Variable Definitions',
                                            'Schema Name' = s
                                        ),
                                        'Schema Name': s,
                                        Value: v
                                    }
                                ),
                                Patch(
                                    [@'Environment Variable Values'],
                                    BatchStatusEnvVar,
                                    {
                                        'Schema Name': s,
                                        Value: v
                                    }
                                )
                            )
                        );
                       '[RiskAssessment]Scanallcustomroles'.Run({text:(lblSelectedAssessmentSettingId)});
                        Concurrent(
                            Refresh('Risk Assessments'),
                            Refresh('Security Roles'),
                            Refresh('Environment Variable Definitions'),
                            Refresh('Environment Variable Values')
                        );
                        UpdateContext(
                            {
                                init: true,
                                spinnerLabelForSettings: "",
                                spinnerColorForSettings: Blank()
                            }
                        );
                        Notify(
                            "Currently scanning all roles, this might take a few minutes. Refresh to get the latest status",
                            NotificationType.Information,
                            5000
                        );
                    );
                   
                ,
                   /* Default action */
                    Notify("Unrecognized button clicked")
                )
            Shape: ='PowerCAT.FluentMessageBar.Shape'.square
            Title: =lblStaleMessageBarTitle
            Visible: =showStaleMessageBar
            Width: =300
            X: =0
            Y: =0
            ZIndex: =2

        cMainContent_7 As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            ZIndex: =3

            ScreenContainer_3 As groupContainer.verticalAutoLayoutContainer:
                Fill: =ColorValue(AppTheme.palette.neutralLighterAlt)
                FillPortions: =FlexOn
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingRight: =Self.PaddingLeft
                Visible: =!showPaneFullScreen
                Width: =Parent.Width
                ZIndex: =1

                cPageHeaderMain_4 As groupContainer.verticalAutoLayoutContainer:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    Fill: =ColorValue(AppTheme.palette.neutralLighterAlt)
                    FillPortions: =0
                    Height: =div_6.Y + 1
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =4
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =Min(16, Margins)//Margins-24//If(Self.X = 0, Margins, 0)
                    PaddingRight: =Self.PaddingLeft
                    PaddingTop: =16
                    Width: =1181
                    X: =92
                    Y: =40
                    ZIndex: =1

                    cPageHeaderTop_2 As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        FillPortions: =FlexOff
                        Height: =75
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width- Self.X * 2
                        X: =68
                        Y: =52
                        ZIndex: =2

                        cPageHeaderTitle_4 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =FlexOn
                            Height: =cHeaderText_7.Height
                            LayoutGap: =16
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =431
                            X: =36
                            Y: =40
                            ZIndex: =1

                            ButtonCanvas4_7 As Button:
                                AccessibleLabel: ="Back"
                                Appearance: ='ButtonCanvas.Appearance'.Subtle
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Icon: ="ArrowLeft"
                                Layout: ='ButtonCanvas.Layout'.IconOnly
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |
                                    =Back();
                                    UpdateContext(
                                        {
                                            lblName: "",
                                            isNameValueChanged: false
                                        }
                                    );
                                    Reset(txtNameInput);
                                Text: =
                                Width: =32
                                X: =0
                                Y: =0
                                ZIndex: =1

                            cHeaderText_7 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                FillPortions: =0
                                Height: =rDivider_PageHeader_7.Y
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =4
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width - Self.X
                                X: =1-1
                                Y: =1-1 
                                ZIndex: =2

                                h2Title_7 As Text:
                                    Align: ='TextCanvas.Align'.Start
                                    AlignInContainer: =AlignInContainer.Start
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =36
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Size: =20
                                    Text: |-
                                        =If(
                                            isNewButtonClicked,
                                            Coalesce(
                                                lblName,
                                                "Custom risk profile - " & Now()//DVAssessmentPageLoc.newRiskAssessmentSettingsText
                                            ),
                                            lblName
                                        )
                                    VerticalAlign: =VerticalAlign.Middle
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =Parent.Width - Self.X * 2
                                    X: =394.49
                                    Y: =0
                                    ZIndex: =1

                                rDivider_PageHeader_7 As rectangle:
                                    BorderColor: =App.Theme.Colors.Darker40
                                    Fill: =RGBA(0,0,0,0)
                                    Height: =1
                                    Width: =Parent.Width - Self.X * 2
                                    X: =72
                                    Y: =52
                                    ZIndex: =2

                        tlbRight_6 As Toolbar.pcfdataset:
                            AccessibleLabel: ="Toolbar"
                            BasePaletteColor: =
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =0.2
                            Height: =44
                            Items: |-
                                =Table(
                                    {
                                        ItemKey: "cancel",
                                        ItemDisplayName: DVAssessmentPageLoc.cancelButtonText,
                                        ItemIconName: "Dismiss",
                                        ItemAppearance: "Subtle",
                                        ItemIconStyle: "Regular"
                                    },
                                    {
                                        ItemKey: "save",
                                        ItemDisplayName: DVAssessmentPageLoc.saveButtonText,
                                        ItemIconName: "Save",
                                        ItemAppearance: "Primary",
                                        ItemIconStyle: "Regular",
                                        ItemDisabled: !isNameValueChanged
                                    }
                                )
                            LayoutMinHeight: =55
                            LayoutMinWidth: =280
                            OnSelect: |-
                                =Switch(
                                    Self.Selected.ItemKey,
                                    /* Action for Key 'new' */
                                    "save",
                                    UpdateContext(
                                        {
                                            init: false,
                                            spinnerColorForSettings: RGBA(
                                                255,
                                                255,
                                                255,
                                                0.7
                                            ),
                                            spinnerLabelForSettings: DVAssessmentPageLoc.pleaseWaitLoadingText
                                        }
                                    );
                                    If(
                                        IsBlankOrError(txtNameInput.Value),
                                        Notify(
                                            DVAssessmentPageLoc.nameFieldRequiredText,
                                            NotificationType.Error,
                                            5000
                                        ),
                                        isNewButtonClicked && IsBlank(DefaultRiskAssessmentSetting) && CountRows(col_temp_prvRisk) <> 33,
                                        Notify(
                                            DVAssessmentPageLoc.privilegesValidationErrorText,
                                            NotificationType.Error,
                                            5000
                                        ),
                                        UpdateContext({postSettingsData: true});
                                    );
                                    If(
                                        postSettingsData,
                                        UpdateContext(
                                            {
                                                init: false,
                                                spinnerLabelForSettings: DVAssessmentPageLoc.savingLoaderText
                                            }
                                        );
                                        UpdateContext(
                                            {
                                                lblSelectedAssessmentSettingId: Patch(
                                                    'Risk Assessment Settings',
                                                    If(
                                                        isNewButtonClicked,
                                                        Defaults('Risk Assessment Settings'),
                                                        LookUp(
                                                            AllRiskAssessmentsSettings,
                                                            'Risk Assessment Setting' = lblSelectedAssessmentSettingId
                                                        )
                                                    ),
                                                    {
                                                        Name: txtNameInput.Value
                                                    }
                                                ).'Risk Assessment Setting'
                                            }
                                        );
                                        If(
                                     // check if there were any errors when the risk assessment setting was submitted
                                            !IsEmpty(Errors('Risk Assessment Settings')),
                                     // if true, show any error message
                                            Notify(
                                                Concat(
                                                    Errors('Risk Assessment Settings'),
                                                    Column & ": " & Message
                                                ),
                                                NotificationType.Error,
                                                11111
                                            );
                                            UpdateContext(
                                                {
                                                    init: true,
                                                    spinnerLabelForSettings: Blank(),
                                                    spinnerColorForSettings: Blank()
                                                }
                                            ),
                                            Notify(
                                                DVAssessmentPageLoc.saveSettingsSuccessMessage,
                                                NotificationType.Success,
                                                5000
                                            );
                                            ClearCollect(
                                                col_temp_prvRisk,
                                                Table(
                                                    {
                                                        ItemKey: "test",
                                                        ItemValue: 0
                                                    }
                                                )
                                            );
                                            UpdateContext(
                                                {
                                                    lblName: txtNameInput.Value,
                                                    isNameValueChanged: false
                                                }
                                            );
                                            If(
                                                isNewButtonClicked,
                                                Set(
                                                    isNewButtonClicked,
                                                    false
                                                ),
                                                true
                                            );
                                        ),
                                        true
                                    );
                                    UpdateContext({postSettingsData: false});
                                    UpdateContext(
                                        {
                                            init: true,
                                            spinnerColorForSettings: Blank(),
                                            spinnerLabelForSettings: Blank()
                                        }
                                    );
                                    false,
                                    "cancel",
                                    Back();
                                    UpdateContext(
                                        {
                                            lblName: "",
                                            isNameValueChanged: false
                                        }
                                    );
                                    
                                        Reset(txtNameInput);
                                    
                                    ,
                                    /* Default action */
                                    false
                                )
                            Padding: ='Toolbar.Padding'.Large
                            Width: =cPageHeaderTitle_4.Width/2-180
                            X: =1020
                            Y: =0
                            ZIndex: =2

                    div_6 As rectangle:
                        AlignInContainer: =AlignStart
                        BorderColor: =App.Theme.Colors.Darker40
                        Fill: =ColorValue(AppTheme.palette.neutralLight)
                        Height: =1
                        Width: =Parent.Width - Self.X * 2
                        X: =84
                        Y: =256
                        ZIndex: =3

                MainContainer1_2 As groupContainer.verticalAutoLayoutContainer:
                    Fill: =RGBA(255, 255, 255, 1)
                    FillPortions: =FlexOff
                    Height: =Max(div_7.Y, Parent.Height - Self.Y)
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =0   
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =Margins-29
                    PaddingRight: =Self.PaddingLeft
                    PaddingTop: =//24
                    Width: =Parent.Width - Self.X * 2
                    ZIndex: =2

                    EditSettingsMainContainer As groupContainer.verticalAutoLayoutContainer:
                        BorderColor: =RGBA(245, 245, 245, 1)
                        BorderStyle: =BorderStyle.None
                        Fill: =RGBA(255, 255, 255, 1)
                        FillPortions: =0
                        Height: |-
                            =If(
                                (EditSettingsScreen.Size = 2 && EditSettingsScreen.Orientation = Layout.Vertical)/*|| (EditSettingsScreen.Size = 3 && EditSettingsScreen.Orientation = Layout.Horizontal) || EditSettingsScreen.Width >= 1400*/,
                                Parent.Height,
                              /*  EditSettingsNameContainer.Height + EditSettingsRiskRatingsContainer.Height + EditSettingsRiskLevelContainer.Height + If(
                                    EditSettingsShowMoreContainer.Visible,
                                    EditSettingsShowMoreContainer.Height,
                                    EditSettingsShowLessContainer.Height + 80
                                ) + 80*/cBuffer_4.Y
                            )
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        Width: =Parent.Width-100
                        ZIndex: =2

                        EditSettingsNameContainer As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(255, 255, 255, 1)
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =div_25.Y//80
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =5
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =5
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Width: =Parent.Width-20
                            ZIndex: =1

                            Container12_1 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Start
                                BorderColor: =RGBA(255, 255, 255, 1)
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =32
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =4
                                RadiusBottomRight: =4
                                RadiusTopLeft: =4
                                RadiusTopRight: =4
                                Width: =Parent.Width
                                ZIndex: =1

                                NameFieldText As Text:
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(36, 36, 36, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: =DVAssessmentPageLoc.name
                                    VerticalAlign: =VerticalAlign.Middle
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =50
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                RequiredText As Text:
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =Font.'Segoe UI'
                                    FontColor: =RGBA(177, 14, 28, 1)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    Text: ="*"
                                    VerticalAlign: =VerticalAlign.Middle
                                    Width: =96
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                            "txtNameInput As 'Text input'":
                                AccessibleLabel: =DVAssessmentPageLoc.name
                                Appearance: ='TextInputCanvas.Appearance'.FilledLighter
                                BasePaletteColor: =RGBA(255,255,255,1)
                                BorderColor: =RGBA(209, 209, 209, 1)
                                BorderRadius: =4
                                BorderStyle: =BorderStyle.Solid
                                BorderThickness: =1
                                DisplayMode: =DisplayMode.Edit//If(makeSettingsEditable,DisplayMode.Edit,DisplayMode.Disabled)
                                Font: =Font.'Segoe UI'
                                FontSize: =14
                                FontWeight: =FontWeight.Normal
                                Height: =32
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                OnChange: |
                                    =UpdateContext({lblName: txtNameInput.Value});
                                    UpdateContext(
                                        {
                                            isNameUnique: If(
                                                CountRows(
                                                    Filter(
                                                        'Risk Assessment Settings',
                                                        'Risk Assessment Setting' <> lblSelectedAssessmentSettingId && Name = txtNameInput.Value
                                                    )
                                                ) > 0,
                                                false,
                                                true
                                            )
                                        }
                                    );
                                    If(
                                        !isNameUnique,
                                        UpdateContext({isNameValueChanged: false}),
                                        If(
                                            isNewButtonClicked,
                                            If(
                                                IsBlankOrError(txtNameInput.Value),
                                                UpdateContext({isNameValueChanged: false}),
                                                UpdateContext({isNameValueChanged: true})
                                            ),
                                            If(
                                                currentSelectedAssessmentSetting.Name <> txtNameInput.Value,
                                                UpdateContext({isNameValueChanged: true}),
                                                UpdateContext({isNameValueChanged: false})
                                            );
                                        )
                                    );
                                Required: =true
                                TriggerOutput: ='TextInputCanvas.TriggerOutput'.Keypress
                                Value: =If(isNewButtonClicked=true,Coalesce(lblName, "Custom risk profile - " & Now()),lblName)
                                Width: =If(EditSettingsScreen.Size=1,Parent.Width,320)
                                X: =0
                                Y: =0
                                ZIndex: =2

                            CompareSecurityRolesText_1 As Text:
                                Align: ="Start"
                                AutoHeight: =true
                                BorderStyle: =""
                                ContentLanguage: =""
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontColor: =RGBA(177, 14, 28, 1)
                                FontItalic: =false
                                FontStrikethrough: =false
                                FontUnderline: =false
                                Height: =40//If(EditSettingsScreen.Size=1,88,40)
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =14
                                TabIndex: =0
                                Text: ="Profile with this name already exists, please choose a different name."
                                Tooltip: =""
                                VerticalAlign: =VerticalAlign.Top
                                Visible: =!isNameUnique
                                Weight: ='TextCanvas.Weight'.Regular
                                Width: =Parent.Width-20
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =3

                            div_25 As rectangle:
                                AccessibleLabel: ="buffer"
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                TabIndex: =0
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =4

                        EditSettingsRiskRatingsContainer As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =RGBA(255, 255, 255, 1)
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =If(EditSettingsScreen.Size=1,120,80)
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =5
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =5
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Width: =Parent.Width-20
                            ZIndex: =2

                            RiskRatingsText As Text:
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontColor: =RGBA(36, 36, 36, 1)
                                Height: =32
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Text: =DVAssessmentPageLoc.riskRatingsColumn
                                VerticalAlign: =VerticalAlign.Middle
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width-20
                                X: =0
                                Y: =0
                                ZIndex: =1

                            CompareSecurityRolesText As Text:
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontColor: =RGBA(36, 36, 36, 1)
                                Height: =If(EditSettingsScreen.Size=1,88,40)
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Text: ="Determine the risk for each privilege and table at every access level."//DVAssessmentPageLoc.compareSecurityRolesPrivileges
                                VerticalAlign: =VerticalAlign.Top
                                Weight: ='TextCanvas.Weight'.Regular
                                Width: =Parent.Width-20
                                X: =0
                                Y: =0
                                ZIndex: =2

                        cSubgrid_2 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(0, 0, 0, 0)
                            BorderThickness: =1
                            DropShadow: =DropShadow.Light
                            Fill: =RGBA(255, 255, 255, 1)
                            FillPortions: =FlexOff
                            Height: =Max(div_14.Y, 120)
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =0   
                            LayoutMinHeight: =100
                            LayoutMinWidth: =600
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =
                            RadiusBottomLeft: =8
                            RadiusBottomRight: =8
                            RadiusTopLeft: =8
                            RadiusTopRight: =8
                            Width: =Parent.Width - Self.X * 2
                            ZIndex: =3

                            cListToolbar_9 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Start
                                Fill: =ColorValue(AppTheme.palette.neutralLighter) //RGBA(0, 0, 0, 0)
                                FillPortions: =0
                                Height: =48
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutGap: =8
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingLeft: =16
                                PaddingRight: =16
                                Width: =Parent.Width
                                ZIndex: =1

                                Toolbar1_8 As Toolbar.pcfdataset:
                                    AccessibleLabel: ="Toolbar"
                                    Alignment: ="Horizontal"
                                    ContentLanguage: =""
                                    DefaultSelectedItems: =
                                    DisplayMode: =DisplayMode.Edit
                                    FillPortions: =FlexOn
                                    Font: =""
                                    FontItalic: =false
                                    FontSize: =0
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Height: =44
                                    Items: |-
                                        =Table(
                                            {
                                                ItemKey: "new",
                                                ItemDisplayName: "New risk rating",
                                                // Need LOC
                                                ItemIconName: "Add",
                                                ItemAppearance: "Subtle",
                                                ItemIconStyle: "Regular",
                                                ItemTooltip: "Add new item",
                                                ItemDisabled: false
                                            },
                                            {
                                                ItemKey: "delete",
                                                ItemDisplayName: "Delete",
                                                ItemIconName: "Delete",
                                                ItemAppearance: "Subtle",
                                                ItemIconStyle: "Regular",
                                                ItemVisible: !IsEmpty(PrivilegeRiskBaselineList.SelectedItems)
                                            },
                                            {
                                                ItemKey: "refresh",
                                                ItemDisplayName: "Refresh",
                                                ItemIconName: "ArrowClockwise",
                                                ItemAppearance: "Subtle",
                                                ItemIconStyle: "Regular"
                                            }
                                        )
                                    Layout: ="Icon before"
                                    LayoutMinHeight: =55
                                    LayoutMinWidth: =100
                                    OnSelect: |-
                                        =Switch(
                                            Self.Selected.ItemKey,
                                            /* Action for Key 'new' */
                                            "new",
                                            Select(btnNewRiskRating);
                                            ,
                                            /* Action for 'refresh' */
                                            "refresh",
                                            UpdateContext({showLoader: true});
                                            Refresh('Risk Assessment Settings');
                                            Refresh('Privilege Risk Baselines');
                                            UpdateContext({showLoader: false});
                                            ,
                                            "delete",
                                            UpdateContext({showDeleteConfirmationDialog: true}),
                                            /* Default action */
                                            Notify("Unrecognized button clicked");
                                            
                                        )
                                    Padding: ="Medium"
                                    TabIndex: =0
                                    Tooltip: =""
                                    Visible: =true
                                    Width: =301
                                    X: =25
                                    Y: =0
                                    ZIndex: =1

                                Container9_12 As groupContainer.horizontalAutoLayoutContainer:
                                    FillPortions: =FlexOn+1
                                    Height: =40
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutGap: =8
                                    LayoutJustifyContent: =LayoutJustifyContent.End
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingLeft: =2
                                    PaddingRight: =2
                                    ZIndex: =2

                                    TextCanvas5_10 As Text:
                                        Align: ='TextCanvas.Align'.End
                                        AutoHeight: =false
                                        BorderStyle: =""
                                        ContentLanguage: =""
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =""
                                        FontItalic: =false
                                        FontStrikethrough: =false
                                        FontUnderline: =false
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        PaddingRight: =8
                                        Size: =14
                                        TabIndex: =0
                                        Text: |-
                                            =With({c: CountIf(ActivePrivilegeRiskBaselinesRelatedToAProfile,true)},$"{ c } {If(c = 1, "item", "items")}")
                                        Tooltip: =""
                                        VerticalAlign: =VerticalAlign.Middle
                                        Visible: =true
                                        Weight: ='TextCanvas.Weight'.Semibold
                                        Width: =96
                                        Wrap: =true
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    Icon1_10 As icon:
                                        AccessibleLabel: =DVAssessmentPageLoc.search
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        Color: =RGBA(0, 120, 212, 1)
                                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                        DisabledColor: =RGBA(220, 220, 220, 1)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        Height: =32
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Icon: =If(showSearch, Icon.Cancel, Icon.Search)
                                        OnSelect: |-
                                            =UpdateContext({showSearch: !showSearch})
                                        PaddingBottom: =8
                                        PaddingLeft: =8
                                        PaddingRight: =8
                                        PaddingTop: =8
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        TabIndex: =0
                                        Visible: =App.ActiveScreen.Size <= ScreenSize.Small
                                        Width: =32
                                        ZIndex: =2

                                    dpdTables As Dropdown.pcfdataset:
                                        AccessibleLabel: ="TableDropdown"
                                        Appearance: ="FilledDarker"
                                        BorderStyle: =""
                                        ContentLanguage: =""
                                        DefaultSelectedItems: |-
                                            =If(
                                                IsBlankOrError(dropDownStatusForEditSettings),
                                                First(
                                                    Filter(
                                                        col_DistinctTablesToFilter,
                                                        Key = 0
                                                    )
                                                ),
                                                dropDownStatusForEditSettings
                                            )
                                        DisplayMode: =DisplayMode.Edit
                                        FontSize: =0
                                        Height: =32
                                        Items: =Sort(col_DistinctTablesToFilter,Key,SortOrder.Ascending)
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =320
                                        OnChange: |-
                                            =Set(
                                                dropDownStatusForEditSettings,
                                                Self.Selected
                                            );
                                        Required: =false
                                        TabIndex: =0
                                        Tooltip: =""
                                        ValidationState: ="None"
                                        Visible: =true
                                        Width: =94
                                        X: =294
                                        Y: =0
                                        ZIndex: =3

                                        TableName1 As PowerApps_CoreControls_DropdownCanvasTemplate_dataField.textualColumn:
                                            FieldDisplayName: ="TableName"
                                            FieldName: ="TableName"
                                            FieldType: ="s"
                                            FieldVariantName: ="textualColumn"
                                            Order: =1
                                            ZIndex: =40

                                    cSearchTeams_4 As groupContainer.horizontalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.SetByContainer
                                        BorderColor: =ColorValue(AppTheme.palette.neutralQuaternary)
                                        BorderStyle: =BorderStyle.None
                                        DropShadow: =DropShadow.Light
                                        FillPortions: =0
                                        Height: =32
                                        LayoutAlignItems: =LayoutAlignItems.Center
                                        LayoutMinHeight: =100
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        RadiusBottomLeft: =4
                                        RadiusBottomRight: =4
                                        RadiusTopLeft: =4
                                        RadiusTopRight: =4
                                        Visible: =App.ActiveScreen.Size > ScreenSize.Small || showSearch
                                        Width: =200
                                        ZIndex: =4

                                        "txtBaselinePrivilegesRatings As 'Text input'":
                                            AccessibleLabel: =DVAssessmentPageLoc.search
                                            Align: =""
                                            Appearance: ='TextInputCanvas.Appearance'.FilledLighter
                                            BorderStyle: =""
                                            ContentLanguage: =""
                                            DisplayMode: =DisplayMode.Edit
                                            FillPortions: =1
                                            Font: =""
                                            FontItalic: =false
                                            FontSize: =0
                                            FontStrikethrough: =false
                                            FontUnderline: =false
                                            FontWeight: =""
                                            Height: =32
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =100
                                            MaxLength: =-1
                                            Mode: ="SingleLine"
                                            OnChange: =false
                                            Placeholder: ="Search"
                                            Required: =false
                                            TabIndex: =0
                                            Tooltip: =""
                                            TriggerOutput: ='TextInputCanvas.TriggerOutput'.Keypress
                                            Type: ='TextInputCanvas.Type'.Search
                                            ValidationState: ="None"
                                            Value: =""
                                            Visible: =true
                                            Width: =320
                                            X: =0
                                            Y: =0
                                            ZIndex: =1

                            Spinner1_9 As Spinner:
                                AccessibleLabel: ="Spinner"
                                Appearance: ="Primary"
                                ContentLanguage: =""
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontItalic: =false
                                FontSize: =0
                                FontStrikethrough: =false
                                FontUnderline: =false
                                FontWeight: =""
                                Height: =200
                                Label: =""
                                LabelPosition: ="After"
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: =false
                                SpinnerSize: ='Spinner.SpinnerSize'.Small
                                TabIndex: =0
                                Tooltip: =""
                                Visible: =showLoader
                                Width: =200
                                X: =0
                                Y: =0
                                ZIndex: =2

                            "PrivilegeRiskBaselineList As 'Fluent Details List (1.1.39)'.pcfdataset":
                                AccessibilityLabel: =""
                                AlternateRowColor: =""
                                columns_Items: |-
                                    =Table(
                                        {
                                            ColName: "cat_name",
                                            ColDisplayName: DVAssessmentPageLoc.name,
                                            ColWidth: 200,
                                            ColSortable: true,
                                            ColIsBold: true,
                                            //ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColSortBy: "cat_name"
                                        },
                                        {
                                            ColName: "cat_table",
                                            ColDisplayName: DVAssessmentPageLoc.table,
                                            ColWidth: 180,
                                            ColSortable: true,
                                            ColIsBold: true,
                                            //ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColSortBy: "cat_table"
                                        },
                                         {
                                            ColName: "cat_type",
                                            ColDisplayName: "Type",
                                            ColWidth: 100,
                                            ColSortable: true,
                                            ColIsBold: true,
                                           //ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColSortBy: "cat_type"
                                        },
                                         {
                                            ColName: "cat_organization",
                                            ColDisplayName: DVAssessmentPageLoc.organizationColumnName,
                                            ColWidth: Max(
                                                Self.Width / 10,
                                                120
                                            ),
                                            ColSortable: true,
                                            ColIsBold: true,
                                            //ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColCellType: "indicatortag",
                                            ColTagColorColumn: "cat_tagcolorfororganization",
                                            //ColTagBorderColorColumn: "cat_tagbordercolorforstatusreason",
                                            ColSortBy: "cat_organization"
                                        },
                                         {
                                            ColName: "cat_parentchildbusinessunit",
                                            ColDisplayName: DVAssessmentPageLoc.parentChildBuColumnName,
                                            ColWidth: Max(
                                                Self.Width / 10,
                                                120
                                            ),
                                            ColSortable: true,
                                            ColIsBold: true,
                                           // ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColCellType: "indicatortag",
                                            ColTagColorColumn: "cat_tagcolorforparentchildbusinessunit",
                                            //ColTagBorderColorColumn: "cat_tagbordercolorforstatusreason",
                                            ColSortBy: "cat_parentchildbusinessunit"
                                        },
                                         {
                                            ColName: "cat_businessunit",
                                            ColDisplayName: DVAssessmentPageLoc.businessUnitColumnName,
                                            ColWidth: Max(
                                                Self.Width / 10,
                                                120
                                            ),
                                            ColSortable: true,
                                            ColIsBold: true,
                                           // ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColCellType: "indicatortag",
                                            ColTagColorColumn: "cat_tagcolorforbusinessunit",
                                            //ColTagBorderColorColumn: "cat_tagbordercolorforstatusreason",
                                            ColSortBy: "cat_businessunit"
                                        },
                                         {
                                            ColName: "cat_user",
                                            ColDisplayName: DVAssessmentPageLoc.userColumnName,
                                            ColWidth: Max(
                                                Self.Width / 10,
                                                120
                                            ),
                                            ColSortable: true,
                                            ColIsBold: true,
                                           // ColHorizontalAlign: "Center",
                                            ColRowHeader: true,
                                            ColVerticalAlign: "Center",
                                            ColCellType: "indicatortag",
                                            ColTagColorColumn: "cat_tagcolorforuser",
                                            //ColTagBorderColorColumn: "cat_tagbordercolorforstatusreason",
                                            ColSortBy: "cat_user"
                                        }
                                    )
                                Compact: =false
                                ContentLanguage: =""
                                CurrentSortColumn: =""
                                CurrentSortDirection: =""
                                DisplayMode: =DisplayMode.Edit
                                HeaderVisible: =true
                                Height: |-
                                    =(CountIf(
                                        ActivePrivilegeRiskBaselinesRelatedToAProfile,
                                        true
                                    ) * 55) + 100/*Max(
                                        (CountIf(
                                            ActivePrivilegeRiskBaselinesRelatedToAProfile,
                                            true
                                        ) * 48),
                                        200
                                    )*/
                                InputEvent: =ctxPrivilegeTableEvent
                                Items: |-
                                    =If(
                                        dpdTables.Selected.Key = 0,
                                        If(
                                            IsBlankOrError(txtBaselinePrivilegesRatings.Value),
                                            Filter(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baselines (Views)'.'Active Privilege Risk Baselines',
                                                'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId
                                            ),
                                            Filter(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baselines (Views)'.'Active Privilege Risk Baselines',
                                                'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId,
                                                (StartsWith(
                                                    Table,
                                                    txtBaselinePrivilegesRatings.Value
                                                ) || StartsWith(
                                                    Name,
                                                    txtBaselinePrivilegesRatings.Value
                                                ))
                                            )
                                        ),
                                        If(
                                            IsBlankOrError(txtBaselinePrivilegesRatings.Value),
                                            Filter(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baselines (Views)'.'Active Privilege Risk Baselines',
                                                'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId,
                                                Table = dpdTables.Selected.TableName
                                            ),
                                            Filter(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baselines (Views)'.'Active Privilege Risk Baselines',
                                                'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId,
                                                Table = dpdTables.Selected.TableName,
                                                (StartsWith(
                                                    Table,
                                                    txtBaselinePrivilegesRatings.Value
                                                ) || StartsWith(
                                                    Name,
                                                    txtBaselinePrivilegesRatings.Value
                                                ))
                                            )
                                        )
                                    )
                                LargeDatasetPaging: =true
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: |
                                    =If(
                                        CountRows(PrivilegeRiskBaselineList.SelectedItems) > 0 && Self.EventName = "OnRowSelectionChange",
                                        Reset(RadioGroupPrivilegeType);
                                        UpdateContext({selectedBaseLinePrivilegeRecord: PrivilegeRiskBaselineList.Selected});
                                        UpdateContext(
                                            {
                                                showPane: true,
                                                showSelectedPrivilege: true,
                                                isRadioGroupReadOnly: true
                                            }
                                        );
                                        If(
                                            PaneListScreen.Size = 1 || PaneListScreen.Orientation = Layout.Vertical || (PaneListScreen.Size = 2 && PaneListScreen.Orientation = Layout.Horizontal),
                                            UpdateContext({showPaneFullScreen: true}),
                                            UpdateContext({showPaneFullScreen: false})
                                        );
                                        ClearCollect(
                                            TableRelatedPrivileges,
                                            AddColumns(
                                                ForAll(
                                                    First(
                                                        Filter(
                                                            EntityDisplayNames,
                                                            EntityDisplayName = Self.Selected.Table
                                                        )
                                                    ).EntityPrivileges,
                                                    {
                                                        CanBeBasic: ThisRecord.CanBeBasic,
                                                        PrivilegeId: ThisRecord.PrivilegeId,
                                                        CanBeDeep: ThisRecord.CanBeDeep,
                                                        CanBeGlobal: ThisRecord.CanBeGlobal,
                                                        CanBeLocal: ThisRecord.CanBeLocal,
                                                        PrivilegeName: Text(ThisRecord.PrivilegeName),
                                                        PrivilegeDisplayName: Text(
                                                            Substitute(
                                                                ThisRecord.PrivilegeName,
                                                                "prv",
                                                                ""
                                                            )
                                                        ),
                                                        TableDisplayName: Text(Self.Selected.Table),
                                                        TableLogicalName: Text(
                                                            LookUp(
                                                                EntityDisplayNames,
                                                                EntityDisplayName = Self.Selected.Table
                                                            ).EntityLogicalName
                                                        )
                                                    }
                                                ),
                                                PrivilegeFinalDisplayName,
                                                Text(
                                                    If(
                                                        CountRows(
                                                            Filter(
                                                                PrivilegesNames,
                                                                ThisRecord.Value exactin PrivilegeDisplayName
                                                            )
                                                        ) > 1,
                                                        Index(
                                                            Filter(
                                                                PrivilegesNames,
                                                                ThisRecord.Value exactin PrivilegeDisplayName
                                                            ),
                                                            2
                                                        ).Value,
                                                        LookUp(
                                                            PrivilegesNames,
                                                            ThisRecord.Value exactin PrivilegeDisplayName
                                                        ).Value
                                                    ) & " " & Self.Selected.Table
                                                ),
                                                RecordSelected,
                                                false
                                            )
                                        );
                                        ,
                                        UpdateContext(
                                            {
                                                showPane: false,
                                                isRadioGroupReadOnly: false,
                                                selectedBaseLinePrivilegeRecord: Blank(),
                                                iscmbBUChanged: false,
                                                iscmbOrganizationChanged: false,
                                                iscmbPCBUChanged: false,
                                                iscmbUserChanged: false
                                            }
                                        )
                                    );
                                OnSelect: =
                                PageSize: =CountIf(ActivePrivilegeRiskBaselinesRelatedToAProfile,true)
                                RaiseOnRowSelectionChangeEvent: =true
                                SelectionAlwaysVisible: =false
                                SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Single
                                SelectRowsOnFocus: =true
                                TabIndex: =0
                                Theme: =AppThemeJson
                                Tooltip: ="Table that uses the Fluent UI DetailsList"
                                Visible: =!showLoader && !IsEmpty(ActivePrivilegeRiskBaselinesRelatedToAProfile)//
                                Width: =200
                                X: =0
                                Y: =0
                                ZIndex: =3

                                "Name4 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Name"
                                    FieldName: ="cat_name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =12

                                "'Created On1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Created On"
                                    FieldName: ="createdon"
                                    FieldType: ="d"
                                    FieldVariantName: ="textualColumn"
                                    Order: =2
                                    ZIndex: =13

                                "'Risk Assessment Setting2' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'":
                                    FieldDisplayName: ="Risk Assessment Setting"
                                    FieldName: ="cat_RiskAssessmentSetting"
                                    FieldType: ="E"
                                    FieldVariantName: ="complexTypeColumn"
                                    Order: =15
                                    ZIndex: =41

                                "'Privilege Name1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Privilege Name"
                                    FieldName: ="cat_privilegename"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =14
                                    ZIndex: =42

                                "User1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="User"
                                    FieldName: ="cat_user"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =13
                                    ZIndex: =43

                                "Type1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Type"
                                    FieldName: ="cat_type"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =12
                                    ZIndex: =44

                                "'Tag Color For User1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Tag Color For User"
                                    FieldName: ="cat_tagcolorforuser"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =11
                                    ZIndex: =45

                                "'Tag Color For Parent Child Business Unit1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Tag Color For Parent Child Business Unit"
                                    FieldName: ="cat_tagcolorforparentchildbusinessunit"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =10
                                    ZIndex: =46

                                "'Tag Color For Organization1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Tag Color For Organization"
                                    FieldName: ="cat_tagcolorfororganization"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =9
                                    ZIndex: =47

                                "'Tag Color For Business Unit1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Tag Color For Business Unit"
                                    FieldName: ="cat_tagcolorforbusinessunit"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =8
                                    ZIndex: =48

                                "Table1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Table"
                                    FieldName: ="cat_table"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =7
                                    ZIndex: =49

                                "'Privilege Risk Baseline1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Privilege Risk Baseline"
                                    FieldName: ="cat_privilegeriskbaselineid"
                                    FieldType: ="g"
                                    FieldVariantName: ="textualColumn"
                                    Order: =6
                                    ZIndex: =50

                                "'Parent Child Business Unit1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Parent Child Business Unit"
                                    FieldName: ="cat_parentchildbusinessunit"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =5
                                    ZIndex: =51

                                "Organization1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Organization"
                                    FieldName: ="cat_organization"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =4
                                    ZIndex: =52

                                "'Business Unit1' As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                                    FieldDisplayName: ="Business Unit"
                                    FieldName: ="cat_businessunit"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =3
                                    ZIndex: =53

                            cEmptyState_5 As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.Center
                                FillPortions: =0
                                Height: =314
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =8
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Visible: =IsEmpty(ActivePrivilegeRiskBaselinesRelatedToAProfile)
                                Width: =333
                                X: =469
                                Y: =93
                                ZIndex: =4

                                Image3_5 As image:
                                    AccessibleLabel: ="Image"
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Image: ='Empty states'
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    TabIndex: =0
                                    ZIndex: =1

                                txtSubtitle1_EmptyState_4 As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    AlignInContainer: =AlignInContainer.Center
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =36
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =20
                                    TabIndex: =0
                                    Text: ="No privileges"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: ='TextCanvas.Weight'.Semibold
                                    Width: =250
                                    Wrap: =false
                                    X: =40
                                    Y: =193
                                    ZIndex: =2

                                lblBody1_EmptyState_4 As Label:
                                    AcceptsFocus: =false
                                    AlignInContainer: =AlignInContainer.Center
                                    Alignment: =Align.Center
                                    AutoHeight: =true
                                    Color: =ColorValue(AppTheme.palette.neutralPrimaryAlt)
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: ="'Segoe UI', 'Open Sans', sans-serif"
                                    FontSize: =10.5
                                    FontWeight: =FontWeight.Normal
                                    Height: =12
                                    Italic: =false
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    OnSelect: =false
                                    Overflow: ="Hidden"
                                    PaddingBottom: =0
                                    PaddingEnd: =0
                                    PaddingStart: =0
                                    PaddingTop: =0
                                    Strikethrough: =false
                                    TabIndex: =0
                                    Text: ="Identify privileges that must be blocked at some access level"
                                    TextRole: ="Default"
                                    Tooltip: =""
                                    Underline: =false
                                    VerticalAlignment: =VerticalAlign.Middle
                                    Visible: =true
                                    Width: =320
                                    Wrap: =true
                                    X: =320
                                    Y: =197
                                    ZIndex: =3

                                Container9_4 As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.Start
                                    FillPortions: =0
                                    Height: =44
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutGap: =8
                                    LayoutJustifyContent: =LayoutJustifyContent.Center
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    Width: =Parent.Width
                                    ZIndex: =4

                                    btnNewRiskRating As Button:
                                        AcceptsFocus: =true
                                        AccessibleLabel: ="New risk rating"
                                        Align: =""
                                        Appearance: ='ButtonCanvas.Appearance'.Primary
                                        BorderStyle: =""
                                        ContentLanguage: =""
                                        DisplayMode: =DisplayMode.Edit
                                        Font: =
                                        FontItalic: =false
                                        FontSize: =0
                                        FontStrikethrough: =false
                                        FontUnderline: =false
                                        FontWeight: =""
                                        Height: =32
                                        Icon: =""
                                        IconRotation: =0
                                        IconStyle: ="Outline"
                                        Layout: ='ButtonCanvas.Layout'.IconBefore
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        OnSelect: |
                                            =Concurrent(
                                                Reset(cmbTables),
                                                Reset(RadioGroupPrivilegeType)
                                            );
                                            UpdateContext(
                                                {
                                                    isRadioGroupReadOnly: false,
                                                    showPane: true,
                                                    showPrivilegeRiskContainer: true,
                                                    showSelectedPrivilege: false,
                                                    selectedTablePrivilege: Blank(),
                                                    selectedBaseLinePrivilegeRecord: Blank()
                                                }
                                            );
                                        TabIndex: =0
                                        Text: ="New risk rating"
                                        Tooltip: =""
                                        VerticalAlign: =""
                                        Visible: =true
                                        Width: =132
                                        X: =542
                                        Y: =0
                                        ZIndex: =1

                            div_14 As rectangle:
                                AccessibleLabel: ="buffer"
                                AlignInContainer: =AlignStart
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                TabIndex: =0
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =5

                        cBuffer_4 As groupContainer.horizontalAutoLayoutContainer:
                            FillPortions: =0
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =10
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            ZIndex: =6

                    div_7 As rectangle:
                        BorderColor: =App.Theme.Colors.Darker40
                        Fill: =RGBA(0,0,0,0)
                        Height: =2
                        Width: =Parent.Width - Self.X * 2
                        X: =84
                        Y: =256
                        ZIndex: =3

            cPane_1 As groupContainer.horizontalAutoLayoutContainer:
                DropShadow: =DropShadow.Light
                Fill: =ColorValue(AppTheme.palette.white)
                FillPortions: =If(showPaneFullScreen,FlexOn,FlexOff)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingBottom: =16
                PaddingLeft: =16
                PaddingRight: =16
                PaddingTop: =16
                Visible: =showPane <> false //|| !IsBlank(PrivilegeRiskBaselineList.Selected)
                Width: =430//320
                ZIndex: =2

                cCardTitle_2 As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =0
                    Height: =32
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =showPrivilegeRiskContainer
                    Width: =Parent.Width
                    X: =1-1
                    Y: =1-1
                    ZIndex: =1

                    TextCanvas1_9 As Text:
                        Align: ="Start"
                        AutoHeight: =false
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =FlexOn
                        Font: =""
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =24
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =16
                        TabIndex: =0
                        Text: ="Define privilege risk"
                        Tooltip: =""
                        VerticalAlign: =VerticalAlign.Middle
                        Visible: =true
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =96
                        Wrap: =false
                        X: =0
                        Y: =0
                        ZIndex: =1

                    ButtonCanvas5 As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Dismiss"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Subtle
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: ="Dismiss"
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    ctxTableEvent: "ClearSelection" & Text(Rand()),
                                    showPane: false
                                }
                            );
                        TabIndex: =0
                        Text: =
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =false
                        Width: =32
                        X: =0
                        Y: =0
                        ZIndex: =2

                PrivilegeRiskInfoContainer As groupContainer.horizontalAutoLayoutContainer:
                    Height: =cBuffer_9.Y
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    LayoutOverflowY: =LayoutOverflow.Scroll
                    Visible: =showPrivilegeRiskContainer
                    ZIndex: =2

                    txtPrivilegeRisk As Text:
                        Align: ='TextCanvas.Align'.Start
                        AlignInContainer: =AlignInContainer.Stretch
                        AutoHeight: =true
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =LookUp(_typeramp,name="Body1").lineHeight
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =LookUp(_typeramp,name="Body1").fontSize
                        TabIndex: =0
                        Text: ="Specify the risk level associated with a privilege across different access levels. Adjustments here determine whether a role privilege is allowed or flagged during an assessment based on the risk associated with it's access level."
                        Tooltip: =""
                        VerticalAlign: =VerticalAlign.Middle
                        Visible: =true
                        Weight: =LookUp(_typeramp,name="Body1").fontWeight
                        Width: =250
                        Wrap: =true
                        X: =7
                        Y: =188
                        ZIndex: =1

                    Container23 As groupContainer.horizontalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =20
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        ZIndex: =2

                        txtPrivilegeType As Text:
                            Align: ="Start"
                            AutoHeight: =false
                            BorderStyle: =""
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                            TabIndex: =0
                            Text: ="Privilege type"
                            Tooltip: =""
                            VerticalAlign: =""
                            Visible: =true
                            Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                            Width: =90
                            Wrap: =false
                            X: =7
                            Y: =223
                            ZIndex: =1

                        txtPrivilegeTypeRequired As Text:
                            Align: ="Start"
                            AutoHeight: =false
                            BorderStyle: =""
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =1
                            Font: =""
                            FontColor: =RGBA(177, 14, 28, 1)
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                            TabIndex: =0
                            Text: ="*"
                            Tooltip: =""
                            VerticalAlign: =""
                            Visible: =true
                            Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                            Width: =250
                            Wrap: =false
                            X: =7
                            Y: =223
                            ZIndex: =2

                    "RadioGroupPrivilegeType As 'Radio group'.pcfdataset":
                        AccessibleLabel: ="Privilege type"
                        AlignInContainer: =AlignInContainer.Start
                        DefaultSelectedItems: |-
                            =If(
                                IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                If(
                                    IsBlankOrError(previousSelectedBaseLinePrivilegeRecord),
                                    {Value: TablePrivilegeText},
                                    {Value: previousSelectedBaseLinePrivilegeRecord.Type & " privilege"}
                                ),
                                {Value: selectedBaseLinePrivilegeRecord.Type & " privilege"}
                            )
                        DisplayMode: =If(isRadioGroupReadOnly,DisplayMode.Disabled,DisplayMode.Edit)
                        Height: =80
                        Items: =[CapabilityPrivilegeText,TablePrivilegeText]
                        LayoutMinHeight: =100
                        LayoutMinWidth: =320
                        OnChange: |
                            =Concurrent(
                                Reset(cmbTables),
                                Reset(cmbOrganization),
                                Reset(cmbPCBU),
                                Reset(cmbBU),
                                Reset(cmbUser),
                                UpdateContext(
                                    {
                                        showSelectedPrivilege: false,
                                        selectedMiscellanousPrivilege: Blank(),
                                        selectedTablePrivilege: Blank(),
                                        selectedBaseLinePrivilegeRecord: Blank()
                                    }
                                )
                            );
                        Width: =Parent.Width
                        X: =0
                        Y: =0
                        ZIndex: =3

                        Value2 As Microsoft_CoreControls_RadioGroupTemplate_dataField.textualColumn:
                            FieldDisplayName: ="Value"
                            FieldName: ="Value"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =14

                    TableInfoContainer As groupContainer.verticalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =div_21.Y
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =8
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =RadioGroupPrivilegeType.Selected.Value=TablePrivilegeText
                        ZIndex: =4

                        TableTextContainer As groupContainer.horizontalAutoLayoutContainer:
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =20
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            ZIndex: =1

                            txtTable As Text:
                                Align: ="Start"
                                AutoHeight: =false
                                BorderStyle: =""
                                ContentLanguage: =""
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                FontItalic: =false
                                FontStrikethrough: =false
                                FontUnderline: =false
                                Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                TabIndex: =0
                                Text: ="Table"
                                Tooltip: =""
                                VerticalAlign: =""
                                Visible: =true
                                Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                Width: =38
                                Wrap: =false
                                X: =7
                                Y: =223
                                ZIndex: =1

                            txtPrivilegeTypeRequired_1 As Text:
                                Align: ="Start"
                                AutoHeight: =false
                                BorderStyle: =""
                                ContentLanguage: =""
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =RGBA(177, 14, 28, 1)
                                FontItalic: =false
                                FontStrikethrough: =false
                                FontUnderline: =false
                                Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                PaddingBottom: =0
                                PaddingLeft: =0
                                PaddingRight: =0
                                PaddingTop: =0
                                Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                TabIndex: =0
                                Text: ="*"
                                Tooltip: =""
                                VerticalAlign: =""
                                Visible: =true
                                Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                Width: =10
                                Wrap: =false
                                X: =7
                                Y: =223
                                ZIndex: =2

                            "InfoButtonCanvas1_6 As 'Information button'":
                                AcceptsFocus: =true
                                AccessibleLabel: ="Info"
                                Content: ="Choose the entity for which you want to assign a privilege. The selected entity determines which records and data objects the privilege will apply to. Ensure you select the correct entity to configure the appropriate access rights."
                                ContentLanguage: =""
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontItalic: =false
                                FontSize: =0
                                FontStrikethrough: =false
                                FontUnderline: =false
                                FontWeight: =""
                                Height: =20
                                LayoutMinHeight: =32
                                LayoutMinWidth: =32
                                OnSelect: =false
                                TabIndex: =0
                                Tooltip: =""
                                Visible: =true
                                Width: =20
                                X: =0
                                Y: =0
                                ZIndex: =3

                        cmbTables As Combobox.pcfdataset:
                            AccessibleLabel: ="Tables list"
                            AlignInContainer: =AlignInContainer.Stretch
                            Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                            BasePaletteColor: =
                            BorderColor: =RGBA(209, 209, 209, 1)
                            BorderStyle: =BorderStyle.Solid
                            BorderThickness: =1
                            DefaultSelectedItems: |-
                                =If(
                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                    Blank(),
                                    Filter(
                                        EntityDisplayNames,
                                        EntityDisplayName = selectedBaseLinePrivilegeRecord.Table
                                    )
                                )
                            DisplayMode: |-
                                =If(
                                    IsBlankOrError(RadioGroupPrivilegeType.Selected.Value) || RadioGroupPrivilegeType.Selected.Value=CapabilityPrivilegeText,
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                )
                            Font: =Font.'Segoe UI'
                            Height: =32
                            Items: |-
                                =Sort(
                                    If(
                                        IsBlankOrError(cmbTables.SearchText),
                                        EntityDisplayNames,
                                        Filter(
                                            EntityDisplayNames,
                                            StartsWith(
                                                EntityDisplayName,
                                                Self.SearchText
                                            )
                                        )
                                    ),
                                    EntityDisplayName,
                                    SortOrder.Ascending
                                )
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            OnChange: |
                                =UpdateContext(
                                    {
                                        showSelectedPrivilege: false,
                                        selectedBaseLinePrivilegeRecord: Blank()
                                    }
                                );
                                ClearCollect(
                                    TableRelatedPrivileges,
                                    AddColumns(
                                        ForAll(
                                            First(
                                                Filter(
                                                    EntityDisplayNames,
                                                    MetadataId = Self.Selected.MetadataId
                                                )
                                            ).EntityPrivileges,
                                            {
                                                CanBeBasic: ThisRecord.CanBeBasic,
                                                PrivilegeId: ThisRecord.PrivilegeId,
                                                CanBeDeep: ThisRecord.CanBeDeep,
                                                CanBeGlobal: ThisRecord.CanBeGlobal,
                                                CanBeLocal: ThisRecord.CanBeLocal,
                                                PrivilegeName: Text(ThisRecord.PrivilegeName),
                                                PrivilegeDisplayName: Text(
                                                    Substitute(
                                                        ThisRecord.PrivilegeName,
                                                        "prv",
                                                        ""
                                                    )
                                                ),
                                                TableDisplayName: Text(Self.Selected.EntityDisplayName),
                                                TableLogicalName: Text(Self.Selected.EntityLogicalName)
                                            }
                                        ),
                                        PrivilegeFinalDisplayName,
                                        Text(
                                            If(
                                                CountRows(
                                                    Filter(
                                                        PrivilegesNames,
                                                        ThisRecord.Value exactin PrivilegeDisplayName
                                                    )
                                                ) > 1,
                                                Index(
                                                    Filter(
                                                        PrivilegesNames,
                                                        ThisRecord.Value exactin PrivilegeDisplayName
                                                    ),
                                                    2
                                                ).Value,
                                                LookUp(
                                                    PrivilegesNames,
                                                    ThisRecord.Value exactin PrivilegeDisplayName
                                                ).Value
                                            ) & " " & Self.Selected.EntityDisplayName
                                        ),
                                        RecordSelected,
                                        false
                                    )
                                );
                            Width: =320
                            X: =0
                            Y: =0
                            ZIndex: =2

                            EntityDisplayName1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                FieldDisplayName: ="EntityDisplayName"
                                FieldName: ="EntityDisplayName"
                                FieldType: ="O"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =15

                            EntityLogicalName1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                FieldDisplayName: ="EntityLogicalName"
                                FieldName: ="EntityLogicalName"
                                FieldType: ="O"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =16

                            MetadataId1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                FieldDisplayName: ="MetadataId"
                                FieldName: ="MetadataId"
                                FieldType: ="g"
                                FieldVariantName: ="textualColumn"
                                Order: =3
                                ZIndex: =17

                            EntityPrivileges1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                FieldDisplayName: ="EntityPrivileges"
                                FieldName: ="EntityPrivileges"
                                FieldType: |-
                                    ="*[CanBeBasic:b, CanBeDeep:b, CanBeGlobal:b, CanBeLocal:b, PrivilegeId:g, PrivilegeName:O, PrivilegeType:O]"
                                FieldVariantName: ="textualColumn"
                                Order: =4
                                ZIndex: =18

                        div_21 As rectangle:
                            AccessibleLabel: ="Buffer height"
                            BorderColor: =App.Theme.Colors.Darker40
                            Fill: =RGBA(0,0,0,0)
                            Height: =2
                            TabIndex: =0
                            Width: =Parent.Width - Self.X * 2
                            X: =84
                            Y: =256
                            ZIndex: =3

                    Container25 As groupContainer.horizontalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =20
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =4
                        RadiusBottomRight: =4
                        RadiusTopLeft: =
                        RadiusTopRight: =4
                        ZIndex: =7

                        txtPrivilege As Text:
                            Align: ="Start"
                            AutoHeight: =false
                            BorderStyle: =""
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                            TabIndex: =0
                            Text: ="Privilege"
                            Tooltip: =""
                            VerticalAlign: =""
                            Visible: =true
                            Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                            Width: =60
                            Wrap: =false
                            X: =7
                            Y: =223
                            ZIndex: =1

                        txtPrivilegeTypeRequired_2 As Text:
                            Align: ="Start"
                            AutoHeight: =false
                            BorderStyle: =""
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =1
                            Font: =""
                            FontColor: =RGBA(177, 14, 28, 1)
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                            TabIndex: =0
                            Text: ="*"
                            Tooltip: =""
                            VerticalAlign: =""
                            Visible: =true
                            Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                            Width: =250
                            Wrap: =false
                            X: =7
                            Y: =223
                            ZIndex: =2

                    txtSelectPrivilege As Text:
                        Align: ="Start"
                        AlignInContainer: =AlignInContainer.Stretch
                        AutoHeight: =false
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =RGBA(97, 97, 97, 1)//ColorValue(AppTheme.palette.neutralPrimary)
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =LookUp(_typeramp,name="Caption1").lineHeight
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =LookUp(_typeramp,name="Caption1").fontSize
                        TabIndex: =0
                        Text: ="Select a privilege to define its risk level. "
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =btnSelectPrivilege.Visible
                        Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                        Width: =250
                        Wrap: =false
                        X: =7
                        Y: =94
                        ZIndex: =8

                    btnSelectPrivilege As Button:
                        AccessibleLabel: ="Select"
                        Appearance: ='ButtonCanvas.Appearance'.Outline
                        DisplayMode: |-
                            =If(
                                IsBlankOrError(Text(cmbTables.Selected.EntityLogicalName)) && RadioGroupPrivilegeType.Selected.Value<>CapabilityPrivilegeText,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Height: =32
                        Icon: ="Add"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =If(
                                CountRows(
                                    Filter(
                                        TableRelatedPrivileges,
                                        RecordSelected = true
                                    )
                                ) > 0,
                                ForAll(
                                    Filter(
                                        TableRelatedPrivileges,
                                        RecordSelected = true
                                    ),
                                    Patch(
                                        LookUp(
                                            TableRelatedPrivileges,
                                            RecordSelected = true
                                        ),
                                        {RecordSelected: false}
                                    );
                                ),
                                false
                            );
                            UpdateContext({showPrivilegeRiskContainer: false});
                        Text: ="Select"
                        Visible: =!showSelectedPrivilege //|| RadioGroupPrivilegeType.Selected.Value=CapabilityPrivilegeText
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =9

                    Container11 As groupContainer.horizontalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =35
                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =showSelectedPrivilege //&& RadioGroupPrivilegeType.Selected.Value=TablePrivilegeText
                        ZIndex: =10

                        txtBody1_1 As Text:
                            Align: ="Start"
                            AutoHeight: =false
                            BorderStyle: =""
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            Height: =LookUp(_typeramp,name="Body1").lineHeight
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =LookUp(_typeramp,name="Body1").fontSize
                            TabIndex: =0
                            Text: |-
                                =If(
                                    !IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                    selectedBaseLinePrivilegeRecord.Name,
                                    If(
                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                        selectedTablePrivilege.PrivilegeFinalDisplayName,
                                        selectedMiscellanousPrivilege.DisplayName
                                    )
                                )
                            Tooltip: =""
                            VerticalAlign: =""
                            Visible: =true
                            Weight: =LookUp(_typeramp,name="Body1").fontWeight
                            Width: =250
                            Wrap: =false
                            X: =7
                            Y: =188
                            ZIndex: =1

                        btnEditSelectPrivilege As Button:
                            AccessibleLabel: ="Edit privilege"
                            Appearance: ='ButtonCanvas.Appearance'.Outline
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Icon: ="Edit"
                            Layout: ='ButtonCanvas.Layout'.IconOnly
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        ctxTableEvent: "SetFocusOnRowSetSelection" & Text(Rand()),
                                        showPrivilegeRiskContainer: false
                                    }
                                );
                            Width: =30
                            X: =0
                            Y: =0
                            ZIndex: =2

                    Container23_2 As groupContainer.horizontalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =20
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        ZIndex: =11

                        txtRiskRatings As Text:
                            Align: ="Start"
                            AutoHeight: =false
                            BorderStyle: =""
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                            FontItalic: =false
                            FontStrikethrough: =false
                            FontUnderline: =false
                            Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                            TabIndex: =0
                            Text: ="Risk ratings"
                            Tooltip: =""
                            VerticalAlign: =VerticalAlign.Middle
                            Visible: =true
                            Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                            Width: =75
                            Wrap: =false
                            X: =7
                            Y: =223
                            ZIndex: =1

                        "InfoButtonCanvas1_8 As 'Information button'":
                            AcceptsFocus: =true
                            AccessibleLabel: ="Info"
                            Content: ="Set the baseline risk ratings for each access level to define the standard for compliance. Choose ""No Risk"" for an access level to indicate that it complies with your security policies and does not pose any risk."
                            ContentLanguage: =""
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontItalic: =false
                            FontSize: =0
                            FontStrikethrough: =false
                            FontUnderline: =false
                            FontWeight: =""
                            Height: =20
                            LayoutMinHeight: =32
                            LayoutMinWidth: =32
                            OnSelect: =false
                            TabIndex: =0
                            Tooltip: =""
                            Visible: =true
                            Width: =20
                            X: =0
                            Y: =0
                            ZIndex: =3

                    txtAccessLevels As Text:
                        Align: ="Start"
                        AlignInContainer: =AlignInContainer.Stretch
                        AutoHeight: =false
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =RGBA(97, 97, 97, 1)//ColorValue(AppTheme.palette.neutralPrimary)
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =LookUp(_typeramp,name="Caption1").lineHeight
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =LookUp(_typeramp,name="Caption1").fontSize
                        TabIndex: =0
                        Text: ="Select a privilege to load access levels."
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =btnSelectPrivilege.Visible
                        Weight: =LookUp(_typeramp,name="Caption1").fontWeight
                        Width: =250
                        Wrap: =false
                        X: =7
                        Y: =94
                        ZIndex: =12

                    PrivilegeRiskRatingsContainer As groupContainer.verticalAutoLayoutContainer:
                        BorderColor: =
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =cBuffer_10.Y
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =12
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =!btnSelectPrivilege.Visible
                        ZIndex: =13

                        Container31 As groupContainer.verticalAutoLayoutContainer:
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =div_8.Y
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Visible: |-
                                =If(
                                    !IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                    If(
                                        selectedBaseLinePrivilegeRecord.'Can Be Global' = 'Can Be Global (Privilege Risk Baselines)'.Yes,
                                        true,
                                        false
                                    ),
                                    If(
                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                        selectedTablePrivilege.CanBeGlobal,
                                        selectedMiscellanousPrivilege.CanBeGlobal
                                    )
                                )
                            ZIndex: =1

                            Container23_3 As groupContainer.horizontalAutoLayoutContainer:
                                BorderColor: =
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =20
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                ZIndex: =1

                                txtTable_1 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="Organization"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1").fontWeight
                                    Width: =90
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =1

                                txtPrivilegeTypeRequired_3 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =RGBA(177, 14, 28, 1)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="*"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                    Width: =10
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =2

                                "InfoButtonCanvas1_9 As 'Information button'":
                                    AcceptsFocus: =true
                                    AccessibleLabel: ="Info"
                                    Content: ="Access to all records across the entire Dataverse environment."
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontItalic: =false
                                    FontSize: =0
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Height: =20
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =32
                                    OnSelect: =false
                                    TabIndex: =0
                                    Tooltip: =""
                                    Visible: =true
                                    Width: =20
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            cmbOrganization As Combobox.pcfdataset:
                                AccessibleLabel: ="Organization risk ratings"
                                AlignInContainer: =AlignInContainer.Stretch
                                Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                                BasePaletteColor: =
                                BorderColor: =RGBA(209, 209, 209, 1)
                                BorderStyle: =BorderStyle.Solid
                                BorderThickness: =1
                                ContentLanguage: =""
                                DefaultSelectedItems: |-
                                    =If(
                                        IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                        Filter(
                                            Choices('Organization (Privilege Risk Baselines)'),
                                            Value = 'Organization (Privilege Risk Baselines)'.Critical
                                        ),
                                        Filter(
                                            Choices('Organization (Privilege Risk Baselines)'),
                                            Value = LookUp(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baseline' = selectedBaseLinePrivilegeRecord.'Privilege Risk Baseline'
                                            ).Organization
                                        )
                                    )
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontItalic: =false
                                FontSize: =0
                                FontStrikethrough: =false
                                FontUnderline: =false
                                FontWeight: =""
                                Height: =32
                                InputTextPlaceholder: ="Find items"
                                IsSearchable: =true
                                Items: =Sort(Choices('Organization (Privilege Risk Baselines)'),Value,SortOrder.Descending)
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                MultiValueDelimiter: =", "
                                OnChange: |
                                    =If(
                                        selectedBaseLinePrivilegeRecord.Organization <> cmbOrganization.Selected.Value,
                                        UpdateContext({iscmbOrganizationChanged: true}),
                                        UpdateContext({iscmbOrganizationChanged: false})
                                    );
                                Required: =false
                                SelectMultiple: =false
                                TabIndex: =0
                                Tooltip: =""
                                TriggerOutput: ="Keypress"
                                ValidationState: ="None"
                                Visible: =true
                                Width: =320
                                X: =0
                                Y: =0
                                ZIndex: =2

                                Value34 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="Value"
                                    FieldName: ="Value"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =29

                            div_8 As rectangle:
                                AccessibleLabel: ="Buffer"
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =3

                        Container31_1 As groupContainer.horizontalAutoLayoutContainer:
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =div_9.Y
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Visible: |-
                                =If(
                                    !IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                    If(
                                        selectedBaseLinePrivilegeRecord.'Can Be Deep' = 'Can Be Deep (Privilege Risk Baselines)'.Yes,
                                        true,
                                        false
                                    ),
                                    If(
                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                        selectedTablePrivilege.CanBeDeep,
                                        selectedMiscellanousPrivilege.CanBeDeep
                                    )
                                )
                            ZIndex: =2

                            Container23_4 As groupContainer.horizontalAutoLayoutContainer:
                                BorderColor: =
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =20
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                ZIndex: =1

                                txtTable_2 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="Parent Child Business Unit"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1").fontWeight
                                    Width: =170
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =1

                                txtPrivilegeTypeRequired_4 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =RGBA(177, 14, 28, 1)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="*"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                    Width: =10
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =2

                                "InfoButtonCanvas1_10 As 'Information button'":
                                    AcceptsFocus: =true
                                    AccessibleLabel: ="Info"
                                    Content: ="Access to records owned by your Business Unit and its child units."
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontItalic: =false
                                    FontSize: =0
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Height: =20
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =32
                                    OnSelect: =false
                                    TabIndex: =0
                                    Tooltip: =""
                                    Visible: =true
                                    Width: =20
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            cmbPCBU As Combobox.pcfdataset:
                                AccessibleLabel: ="PCBU risk ratings"
                                AlignInContainer: =AlignInContainer.Stretch
                                Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                                BorderColor: =RGBA(209, 209, 209, 1)
                                BorderStyle: =BorderStyle.Solid
                                BorderThickness: =1
                                ContentLanguage: =""
                                DefaultSelectedItems: |-
                                    =If(
                                        IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                       Filter(
                                            Choices('Parent Child Business Unit (Privilege Risk Baselines)'),
                                            Value = 'Parent Child Business Unit (Privilege Risk Baselines)'.High
                                        ),
                                        Filter(
                                            Choices('Parent Child Business Unit (Privilege Risk Baselines)'),
                                            Value = LookUp(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baseline' = selectedBaseLinePrivilegeRecord.'Privilege Risk Baseline'
                                            ).'Parent Child Business Unit'
                                        )
                                    )
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontItalic: =false
                                FontSize: =0
                                FontStrikethrough: =false
                                FontUnderline: =false
                                FontWeight: =""
                                Height: =32
                                InputTextPlaceholder: ="Find items"
                                IsSearchable: =true
                                Items: =Sort(Choices('Parent Child Business Unit (Privilege Risk Baselines)'),Value,SortOrder.Descending)
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                MultiValueDelimiter: =", "
                                OnChange: |
                                    =
                                    If(
                                        selectedBaseLinePrivilegeRecord.'Parent Child Business Unit' <> cmbPCBU.Selected.Value,
                                        UpdateContext({iscmbPCBUChanged: true}),
                                        UpdateContext({iscmbPCBUChanged: false})
                                    );
                                Required: =false
                                SelectMultiple: =false
                                TabIndex: =0
                                Tooltip: =""
                                TriggerOutput: ="Keypress"
                                ValidationState: ="None"
                                Visible: =true
                                Width: =320
                                X: =0
                                Y: =0
                                ZIndex: =2

                                Value35 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="Value"
                                    FieldName: ="Value"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =30

                            div_9 As rectangle:
                                AccessibleLabel: ="Buffer"
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =3

                        Container31_2 As groupContainer.horizontalAutoLayoutContainer:
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =div_19.Y
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Visible: |-
                                =If(
                                    !IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                    If( selectedBaseLinePrivilegeRecord.'Can Be Basic' = 'Can Be Basic (Privilege Risk Baselines)'.Yes,
                                        true,
                                        false
                                    ),
                                    If(
                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                        selectedTablePrivilege.CanBeBasic,
                                       selectedMiscellanousPrivilege.CanBeBasic
                                    )
                                )
                            ZIndex: =3

                            Container23_5 As groupContainer.horizontalAutoLayoutContainer:
                                BorderColor: =
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =20
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                ZIndex: =1

                                txtTable_3 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="Business Unit"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1").fontWeight
                                    Width: =90
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =1

                                txtPrivilegeTypeRequired_5 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =RGBA(177, 14, 28, 1)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="*"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                    Width: =10
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =2

                                "InfoButtonCanvas1_12 As 'Information button'":
                                    AcceptsFocus: =true
                                    AccessibleLabel: ="Info"
                                    Content: ="Access to records owned within your assigned Business Unit only."
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontItalic: =false
                                    FontSize: =0
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Height: =20
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =32
                                    OnSelect: =false
                                    TabIndex: =0
                                    Tooltip: =""
                                    Visible: =true
                                    Width: =20
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            cmbBU As Combobox.pcfdataset:
                                AccessibleLabel: ="BU risk ratings"
                                AlignInContainer: =AlignInContainer.Stretch
                                Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                                BorderColor: =RGBA(209, 209, 209, 1)
                                BorderStyle: =BorderStyle.Solid
                                BorderThickness: =1
                                ContentLanguage: =""
                                DefaultSelectedItems: |-
                                    =If(
                                        IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                        Filter(
                                            Choices('Business Unit (Privilege Risk Baselines)'),
                                            Value = 'Business Unit (Privilege Risk Baselines)'.Moderate
                                        ),
                                        Filter(
                                            Choices('Business Unit (Privilege Risk Baselines)'),
                                            Value = LookUp(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baseline' = selectedBaseLinePrivilegeRecord.'Privilege Risk Baseline'
                                            ).'Business Unit'
                                        )
                                    )
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontItalic: =false
                                FontSize: =0
                                FontStrikethrough: =false
                                FontUnderline: =false
                                FontWeight: =""
                                Height: =32
                                InputTextPlaceholder: ="Find items"
                                IsSearchable: =true
                                Items: =Sort(Choices('Business Unit (Privilege Risk Baselines)'),Value,SortOrder.Descending)
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                MultiValueDelimiter: =", "
                                OnChange: |
                                    =
                                    If(
                                        selectedBaseLinePrivilegeRecord.'Business Unit' <> cmbBU.Selected.Value,
                                        UpdateContext({iscmbBUChanged: true}),
                                        UpdateContext({iscmbBUChanged: false})
                                    );
                                Required: =false
                                SelectMultiple: =false
                                TabIndex: =0
                                Tooltip: =""
                                TriggerOutput: ="Keypress"
                                ValidationState: ="None"
                                Visible: =true
                                Width: =320
                                X: =0
                                Y: =0
                                ZIndex: =2

                                Value36 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="Value"
                                    FieldName: ="Value"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =5
                                    ZIndex: =31

                            div_19 As rectangle:
                                AccessibleLabel: ="Buffer"
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =3

                        Container31_3 As groupContainer.horizontalAutoLayoutContainer:
                            BorderColor: =
                            BorderStyle: =BorderStyle.None
                            FillPortions: =0
                            Height: =div_20.Y
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =8
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Visible: |-
                                =If(
                                    !IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                    If(
                                        selectedBaseLinePrivilegeRecord.'Can Be Local' = 'Can Be Local (Privilege Risk Baselines)'.Yes,
                                        true,
                                        false
                                    ),
                                    If(
                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                        selectedTablePrivilege.CanBeLocal,
                                        selectedMiscellanousPrivilege.CanBeLocal
                                    )
                                )
                            ZIndex: =4

                            Container23_6 As groupContainer.horizontalAutoLayoutContainer:
                                BorderColor: =
                                BorderStyle: =BorderStyle.None
                                FillPortions: =0
                                Height: =20
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                ZIndex: =1

                                txtTable_4 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="User"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1").fontWeight
                                    Width: =30
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =1

                                txtPrivilegeTypeRequired_6 As Text:
                                    Align: ="Start"
                                    AutoHeight: =false
                                    BorderStyle: =""
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =RGBA(177, 14, 28, 1)
                                    FontItalic: =false
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    Height: =LookUp(_typeramp,name="Body1Strong").lineHeight
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    PaddingBottom: =0
                                    PaddingLeft: =0
                                    PaddingRight: =0
                                    PaddingTop: =0
                                    Size: =LookUp(_typeramp,name="Body1Strong").fontSize
                                    TabIndex: =0
                                    Text: ="*"
                                    Tooltip: =""
                                    VerticalAlign: =""
                                    Visible: =true
                                    Weight: =LookUp(_typeramp,name="Body1Strong").fontWeight
                                    Width: =10
                                    Wrap: =false
                                    X: =7
                                    Y: =223
                                    ZIndex: =2

                                "InfoButtonCanvas1_13 As 'Information button'":
                                    AcceptsFocus: =true
                                    AccessibleLabel: ="Info"
                                    Content: ="Access to only records you own or are explicitly shared with you."
                                    ContentLanguage: =""
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontItalic: =false
                                    FontSize: =0
                                    FontStrikethrough: =false
                                    FontUnderline: =false
                                    FontWeight: =""
                                    Height: =20
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =32
                                    OnSelect: =false
                                    TabIndex: =0
                                    Tooltip: =""
                                    Visible: =true
                                    Width: =20
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            cmbUser As Combobox.pcfdataset:
                                AccessibleLabel: ="User risk ratings"
                                AlignInContainer: =AlignInContainer.Stretch
                                Appearance: ='ComboboxCanvas.Appearance'.FilledLighter
                                BorderColor: =RGBA(209, 209, 209, 1)
                                BorderStyle: =BorderStyle.Solid
                                BorderThickness: =1
                                ContentLanguage: =""
                                DefaultSelectedItems: |-
                                    =If(
                                        IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                        Filter(
                                            Choices('User (Privilege Risk Baselines)'),
                                            Value = 'User (Privilege Risk Baselines)'.Low
                                        ),
                                        Filter(
                                            Choices('User (Privilege Risk Baselines)'),
                                            Value = LookUp(
                                                'Privilege Risk Baselines',
                                                'Privilege Risk Baseline' = selectedBaseLinePrivilegeRecord.'Privilege Risk Baseline'
                                            ).User
                                        )
                                    )
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.'Segoe UI'
                                FontItalic: =false
                                FontSize: =0
                                FontStrikethrough: =false
                                FontUnderline: =false
                                FontWeight: =""
                                Height: =32
                                InputTextPlaceholder: ="Find items"
                                IsSearchable: =true
                                Items: |-
                                    =Sort(
                                        Choices('User (Privilege Risk Baselines)'),
                                        Value,
                                        SortOrder.Descending
                                    )
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                MultiValueDelimiter: =", "
                                OnChange: |
                                    =
                                    If(
                                        selectedBaseLinePrivilegeRecord.User <> cmbUser.Selected.Value,
                                        UpdateContext({iscmbUserChanged: true}),
                                        UpdateContext({iscmbUserChanged: false})
                                    );
                                Required: =false
                                SelectMultiple: =false
                                TabIndex: =0
                                Tooltip: =""
                                TriggerOutput: ="Keypress"
                                ValidationState: ="None"
                                Visible: =true
                                Width: =320
                                X: =0
                                Y: =0
                                ZIndex: =2

                                Value37 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="Value"
                                    FieldName: ="Value"
                                    FieldType: ="l"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =32

                            div_20 As rectangle:
                                AccessibleLabel: ="Buffer"
                                BorderColor: =App.Theme.Colors.Darker40
                                Fill: =RGBA(0,0,0,0)
                                Height: =2
                                Width: =Parent.Width - Self.X * 2
                                X: =84
                                Y: =256
                                ZIndex: =3

                        cBuffer_10 As groupContainer.horizontalAutoLayoutContainer:
                            FillPortions: =0
                            Height: =10
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =10
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            ZIndex: =13

                    cBuffer_9 As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =0
                        Height: =10
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =10
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width
                        ZIndex: =14

                cCardTitle_3 As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =0
                    Height: =32
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =!showPrivilegeRiskContainer
                    Width: =Parent.Width
                    X: =1-1
                    Y: =1-1
                    ZIndex: =3

                    TextCanvas1_10 As Text:
                        Align: ="Start"
                        AutoHeight: =false
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =FlexOn
                        Font: =""
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =24
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =16
                        TabIndex: =0
                        Text: ="Select a privilege"
                        Tooltip: =""
                        VerticalAlign: =VerticalAlign.Middle
                        Visible: =true
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =96
                        Wrap: =false
                        X: =0
                        Y: =0
                        ZIndex: =1

                    ButtonCanvas5_1 As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Dismiss"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Subtle
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: ="Dismiss"
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    ctxTableEvent: "ClearSelection" & Text(Rand()),
                                    showPane: false
                                }
                            );
                        TabIndex: =0
                        Text: =
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =false
                        Width: =32
                        X: =0
                        Y: =0
                        ZIndex: =2

                SelectPrivilegeContainer As groupContainer.horizontalAutoLayoutContainer:
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =12
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =!showPrivilegeRiskContainer
                    ZIndex: =4

                    txtSpecifyPrivileges As Text:
                        Align: ='TextCanvas.Align'.Start
                        AlignInContainer: =AlignInContainer.Stretch
                        AutoHeight: =true
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =ColorValue(AppTheme.palette.neutralPrimary)
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =20//LookUp(_typeramp,name="Body1").lineHeight
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =LookUp(_typeramp,name="Body1").fontSize
                        TabIndex: =0
                        Text: ="Search privileges by display name or choose the table that it’s associated with. Misc is under global table option"
                        Tooltip: =""
                        VerticalAlign: =VerticalAlign.Middle
                        Visible: =true
                        Weight: =LookUp(_typeramp,name="Body1").fontWeight
                        Width: =250
                        Wrap: =true
                        X: =7
                        Y: =188
                        ZIndex: =1

                    "txtInputSearchTablePrivileges As 'Text input'":
                        AccessibleLabel: ="Search tables"
                        AlignInContainer: =AlignInContainer.Stretch
                        Appearance: ='TextInputCanvas.Appearance'.FilledLighter
                        BorderColor: =RGBA(209, 209, 209, 1)
                        BorderStyle: =BorderStyle.Solid
                        BorderThickness: =1
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        Mode: ='TextInputCanvas.Mode'.SingleLine
                        Placeholder: ="Keyword search"
                        TriggerOutput: ='TextInputCanvas.TriggerOutput'.Keypress
                        Type: ='TextInputCanvas.Type'.Search
                        Width: =320
                        X: =0
                        Y: =0
                        ZIndex: =2

                    "AllSelectedTableRelatedPrivileges As 'Fluent Details List (1.1.39)'.pcfdataset":
                        AlignInContainer: =AlignInContainer.Stretch
                        columns_Items: |-
                            =Table(
                                {
                                    ColName: "PrivilegeFinalDisplayName",
                                    ColDisplayName: "Privileges",
                                    ColWidth: Parent.LayoutMinWidth,
                                    ColRowHeader: true,
                                     ColIsBold:true,
                                   // ColHorizontalAlign: "Center",
                                    ColVerticalAlign: "Center"
                                },
                                {
                                    ColName: "TableDisplayName",
                                    ColDisplayName: "",
                                    ColShowAsSubTextOf:"PrivilegeFinalDisplayName",
                                    ColLabelAbove:true
                                   
                                }
                            )
                        Compact: =false
                        DisplayMode: =DisplayMode.Edit
                        HeaderVisible: =true
                        Height: =SelectPrivilegeContainer.Height-txtSpecifyPrivileges.Height-txtInputSearchTablePrivileges.Height-30
                        InputEvent: =ctxTableEvent
                        Items: =Search(TableRelatedPrivileges,txtInputSearchTablePrivileges.Value,PrivilegeFinalDisplayName,TableDisplayName)
                        LargeDatasetPaging: =true
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |
                            =//UpdateContext({selectedBaseLinePrivilegeRecord: Blank()});
                        PageSize: =CountRows(TableRelatedPrivileges)
                        RaiseOnRowSelectionChangeEvent: =true
                        RecordKey: ="PrivilegeId"
                        RecordSelected: ="RecordSelected"
                        SelectRowsOnFocus: =true
                        Theme: =DetailsListThemeJson
                        Visible: =RadioGroupPrivilegeType.Selected.Value=TablePrivilegeText
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =3

                        "CanBeLocal1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="CanBeLocal"
                            FieldName: ="CanBeLocal"
                            FieldType: ="b"
                            FieldVariantName: ="textualColumn"
                            Order: =10
                            ZIndex: =19

                        "CanBeGlobal1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="CanBeGlobal"
                            FieldName: ="CanBeGlobal"
                            FieldType: ="b"
                            FieldVariantName: ="textualColumn"
                            Order: =9
                            ZIndex: =20

                        "CanBeDeep1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="CanBeDeep"
                            FieldName: ="CanBeDeep"
                            FieldType: ="b"
                            FieldVariantName: ="textualColumn"
                            Order: =8
                            ZIndex: =21

                        "CanBeBasic1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="CanBeBasic"
                            FieldName: ="CanBeBasic"
                            FieldType: ="b"
                            FieldVariantName: ="textualColumn"
                            Order: =7
                            ZIndex: =22

                        "TableLogicalName1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="TableLogicalName"
                            FieldName: ="TableLogicalName"
                            FieldType: ="O"
                            FieldVariantName: ="textualColumn"
                            Order: =6
                            ZIndex: =23

                        "TableDisplayName1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="TableDisplayName"
                            FieldName: ="TableDisplayName"
                            FieldType: ="O"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =24

                        "PrivilegeName1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="PrivilegeName"
                            FieldName: ="PrivilegeName"
                            FieldType: ="O"
                            FieldVariantName: ="textualColumn"
                            Order: =4
                            ZIndex: =25

                        "PrivilegeDisplayName1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="PrivilegeDisplayName"
                            FieldName: ="PrivilegeDisplayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =3
                            ZIndex: =26

                        "PrivilegeFinalDisplayName1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="PrivilegeFinalDisplayName"
                            FieldName: ="PrivilegeFinalDisplayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =2
                            ZIndex: =27

                        "PrivilegeId1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="PrivilegeId"
                            FieldName: ="PrivilegeId"
                            FieldType: ="g"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =28

                    "AllCapabilityPrivilegesList As 'Fluent Details List (1.1.39)'.pcfdataset":
                        AccessibilityLabel: =""
                        AlignInContainer: =AlignInContainer.Stretch
                        AlternateRowColor: =""
                        columns_Items: |-
                            =Table(
                                {
                                    ColName: "DisplayName",
                                    ColDisplayName: "Privileges",
                                    ColWidth: Parent.LayoutMinWidth,
                                    ColRowHeader: true,
                                     ColIsBold:true,
                                   // ColHorizontalAlign: "Center",
                                    ColVerticalAlign: "Center"
                                },
                                {
                                    ColName: "LogicalName",
                                    ColDisplayName: "",
                                    ColShowAsSubTextOf:"DisplayName",
                                    ColLabelAbove:true
                                   
                                }
                            )
                        Compact: =false
                        ContentLanguage: =""
                        CurrentSortColumn: =""
                        CurrentSortDirection: =""
                        DisplayMode: =DisplayMode.Edit
                        HeaderVisible: =true
                        Height: =SelectPrivilegeContainer.Height-txtSpecifyPrivileges.Height-txtInputSearchTablePrivileges.Height-30
                        InputEvent: =ctxTableEvent
                        Items: =Search(MiscellaneousPrivileges,txtInputSearchTablePrivileges.Value,LogicalName,DisplayName)
                        LargeDatasetPaging: =true
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: =false
                        OnSelect: =false
                        PageSize: =CountRows(MiscellaneousPrivileges)
                        RaiseOnRowSelectionChangeEvent: =true
                        RecordKey: ="ComponentId"
                        RecordSelected: ="RecordSelected"
                        SelectionAlwaysVisible: =false
                        SelectionType: ="1"
                        SelectRowsOnFocus: =false
                        TabIndex: =0
                        Theme: =DetailsListThemeJson
                        Tooltip: ="Table that uses the Fluent UI DetailsList"
                        Visible: =RadioGroupPrivilegeType.Selected.Value=CapabilityPrivilegeText
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =4

                        "ComponentId1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="ComponentId"
                            FieldName: ="ComponentId"
                            FieldType: ="g"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =33

                        "DisplayName2 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="DisplayName"
                            FieldName: ="DisplayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =2
                            ZIndex: =34

                        "ItemType1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="ItemType"
                            FieldName: ="ItemType"
                            FieldType: ="n"
                            FieldVariantName: ="textualColumn"
                            Order: =3
                            ZIndex: =35

                        "LogicalName1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="LogicalName"
                            FieldName: ="LogicalName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =4
                            ZIndex: =36

                        "PrivilegeName2 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="PrivilegeName"
                            FieldName: ="PrivilegeName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =37

                        "RoleEditorHiererachyId1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="RoleEditorHiererachyId"
                            FieldName: ="RoleEditorHiererachyId"
                            FieldType: ="g"
                            FieldVariantName: ="textualColumn"
                            Order: =6
                            ZIndex: =38

                        "RoleEditorLayoutId1 As 'cat_PowerCAT.FluentDetailsListTemplate_dataField'.textualColumn":
                            FieldDisplayName: ="RoleEditorLayoutId"
                            FieldName: ="RoleEditorLayoutId"
                            FieldType: ="g"
                            FieldVariantName: ="textualColumn"
                            Order: =7
                            ZIndex: =39

                Container4_1 As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =FlexOff
                    Height: =40
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =showPrivilegeRiskContainer
                    Width: =288
                    Y: =649
                    ZIndex: =5

                    btnSavePrivilegeRiskBaseline As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Save privilege"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Primary
                        BasePaletteColor: =
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: |-
                            =If(
                                !isNameUnique,
                                DisplayMode.Disabled,
                                If(/* Replace false with conditions for save */
                                    !isRadioGroupReadOnly && !IsBlankOrError(txtBody1_1.Text),
                                    DisplayMode.Edit,
                                    If(
                                        iscmbOrganizationChanged || iscmbPCBUChanged || iscmbBUChanged || iscmbUserChanged || (!IsBlankOrError(txtBody1_1.Text) && (txtBody1_1.Text <> selectedBaseLinePrivilegeRecord.Name)),
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled
                                    )
                                )
                            )
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =UpdateContext(
                                {
                                    init: false,
                                    spinnerColorForSettings: RGBA(
                                        255,
                                        255,
                                        255,
                                        0.7
                                    ),
                                    spinnerLabelForSettings: DVAssessmentPageLoc.pleaseWaitLoadingText,
                                    isExistingPrivilegeRiskBaseLineForSetting: Filter(
                                        'Privilege Risk Baselines',
                                        Name = txtBody1_1.Text && 'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId
                                    )
                                }
                            );
                            If(
                                IsBlankOrError(lblSelectedAssessmentSettingId),
                                Set(
                                    currentSelectedAssessmentSetting,
                                    Patch(
                                        'Risk Assessment Settings',
                                        Defaults('Risk Assessment Settings'),
                                        {Name: txtNameInput.Value}
                                    )
                                );
                                UpdateContext({lblSelectedAssessmentSettingId: currentSelectedAssessmentSetting.'Risk Assessment Setting'});
                                If(
                                 // check if there were any errors when the risk assessment setting was submitted
                                    !IsEmpty(Errors('Risk Assessment Settings')),
                                 // if true, show any error message
                                    Notify(
                                        Concat(
                                            Errors('Risk Assessment Settings'),
                                            Column & ": " & Message
                                        ),
                                        NotificationType.Error,
                                        11111
                                    );
                                    UpdateContext(
                                        {
                                            init: true,
                                            spinnerLabelForSettings: Blank(),
                                            spinnerColorForSettings: Blank(),
                                            createRiskSettingFailed: true
                                        }
                                    ),
                                    UpdateContext(
                                        {
                                            lblName: txtNameInput.Value,
                                            isNameValueChanged: false,
                                            createRiskSettingFailed: false
                                        }
                                    );
                                    If(
                                        isNewButtonClicked,
                                        Set(
                                            isNewButtonClicked,
                                            false
                                        ),
                                        true
                                    );
                                ),
                                false
                            );
                            If(
                                CountRows(isExistingPrivilegeRiskBaseLineForSetting) > 0 && !isRadioGroupReadOnly,
                                Notify(
                                    "Risk rating for this privilege already exists ",
                                    NotificationType.Error,
                                    5000
                                );
                                ,
                                If(
                                    createRiskSettingFailed,
                                    false,
                                    If(
                                        isRadioGroupReadOnly,// If true, it means existing record else new record creation
                                        Patch(
                                            'Privilege Risk Baselines',
                                            If(
                                                IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                previousSelectedBaseLinePrivilegeRecord,
                                                selectedBaseLinePrivilegeRecord
                                            ),
                                            {
                                                Name: txtBody1_1.Text,
                                                Organization: If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        If(
                                                            selectedTablePrivilege.CanBeGlobal,
                                                            cmbOrganization.Selected.Value,
                                                            Blank()
                                                        ),
                                                        If(
                                                            selectedMiscellanousPrivilege.CanBeGlobal,
                                                            cmbOrganization.Selected.Value,
                                                            Blank()
                                                        )
                                                    ),
                                                    If(
                                                        selectedBaseLinePrivilegeRecord.'Can Be Global',
                                                        cmbOrganization.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                'Business Unit': If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        If(
                                                            selectedTablePrivilege.CanBeBasic,
                                                            cmbBU.Selected.Value,
                                                            Blank()
                                                        ),
                                                        If(
                                                            selectedMiscellanousPrivilege.CanBeBasic,
                                                            cmbBU.Selected.Value,
                                                            Blank()
                                                        )
                                                    ),
                                                    If(
                                                        selectedBaseLinePrivilegeRecord.'Can Be Basic',
                                                        cmbBU.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                'Parent Child Business Unit': If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        If(
                                                            selectedTablePrivilege.CanBeDeep,
                                                            cmbPCBU.Selected.Value,
                                                            Blank()
                                                        ),
                                                        If(
                                                            selectedMiscellanousPrivilege.CanBeDeep,
                                                            cmbPCBU.Selected.Value,
                                                            Blank()
                                                        )
                                                    ),
                                                    If(
                                                        selectedBaseLinePrivilegeRecord.'Can Be Deep',
                                                        cmbPCBU.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                User: If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        If(
                                                            selectedTablePrivilege.CanBeLocal,
                                                            cmbUser.Selected.Value,
                                                            Blank()
                                                        ),
                                                        If(
                                                            selectedMiscellanousPrivilege.CanBeLocal,
                                                            cmbUser.Selected.Value,
                                                            Blank()
                                                        )
                                                    ),
                                                    If(
                                                        selectedBaseLinePrivilegeRecord.'Can Be Local',
                                                        cmbUser.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                Table: If(
                                                    IsBlankOrError(cmbTables.Selected.EntityDisplayName),
                                                    "N/A",
                                                    cmbTables.Selected.EntityDisplayName
                                                ),
                                                'Privilege Name': LookUp(
                                                    TableRelatedPrivileges,
                                                    PrivilegeFinalDisplayName = txtBody1_1.Text
                                                ).PrivilegeName,
                                                'Can Be Global': If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        selectedTablePrivilege.CanBeGlobal,
                                                        selectedMiscellanousPrivilege.CanBeGlobal
                                                    ),
                                                    selectedBaseLinePrivilegeRecord.'Can Be Global'
                                                ),
                                                'Can Be Deep': If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        selectedTablePrivilege.CanBeDeep,
                                                        selectedMiscellanousPrivilege.CanBeDeep
                                                    ),
                                                    selectedBaseLinePrivilegeRecord.'Can Be Deep'
                                                ),
                                                'Can Be Basic': If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        selectedTablePrivilege.CanBeBasic,
                                                        selectedMiscellanousPrivilege.CanBeBasic
                                                    ),
                                                    selectedBaseLinePrivilegeRecord.'Can Be Basic'
                                                ),
                                                'Can Be Local': If(
                                                    IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                                    If(
                                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                        selectedTablePrivilege.CanBeLocal,
                                                        selectedMiscellanousPrivilege.CanBeLocal
                                                    ),
                                                    selectedBaseLinePrivilegeRecord.'Can Be Local'
                                                )
                                            }
                                        );
                                        UpdateContext(
                                            {
                                                iscmbBUChanged: false,
                                                iscmbOrganizationChanged: false,
                                                iscmbPCBUChanged: false,
                                                iscmbUserChanged: false
                                            }
                                        ),
                                        Patch(
                                            'Privilege Risk Baselines',
                                            Defaults('Privilege Risk Baselines'),
                                            {
                                                Name: If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    selectedTablePrivilege.PrivilegeFinalDisplayName,
                                                    selectedMiscellanousPrivilege.DisplayName
                                                ),
                                                Organization: If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    If(
                                                        selectedTablePrivilege.CanBeGlobal,
                                                        cmbOrganization.Selected.Value,
                                                        Blank()
                                                    ),
                                                    If(
                                                        selectedMiscellanousPrivilege.CanBeGlobal,
                                                        cmbOrganization.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                'Business Unit': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    If(
                                                        selectedTablePrivilege.CanBeBasic,
                                                        cmbBU.Selected.Value,
                                                        Blank()
                                                    ),
                                                    If(
                                                        selectedMiscellanousPrivilege.CanBeBasic,
                                                        cmbBU.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                'Parent Child Business Unit': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    If(
                                                        selectedTablePrivilege.CanBeDeep,
                                                        cmbPCBU.Selected.Value,
                                                        Blank()
                                                    ),
                                                    If(
                                                        selectedMiscellanousPrivilege.CanBeDeep,
                                                        cmbPCBU.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                User: If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    If(
                                                        selectedTablePrivilege.CanBeLocal,
                                                        cmbUser.Selected.Value,
                                                        Blank()
                                                    ),
                                                    If(
                                                        selectedMiscellanousPrivilege.CanBeLocal,
                                                        cmbUser.Selected.Value,
                                                        Blank()
                                                    )
                                                ),
                                                Table: If(
                                                    IsBlankOrError(cmbTables.Selected.EntityDisplayName),
                                                    "N/A",
                                                    cmbTables.Selected.EntityDisplayName
                                                ),
                                                Type: Substitute(
                                                    RadioGroupPrivilegeType.Selected.Value,
                                                    " privilege",
                                                    ""
                                                ),
                                                'Privilege Name': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    selectedTablePrivilege.PrivilegeName,
                                                    selectedMiscellanousPrivilege.PrivilegeName
                                                ),
                                                'Risk Assessment Setting': LookUp(
                                                    'Risk Assessment Settings',
                                                    'Risk Assessment Setting' = lblSelectedAssessmentSettingId
                                                ),
                                                'Can Be Global': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    selectedTablePrivilege.CanBeGlobal,
                                                    selectedMiscellanousPrivilege.CanBeGlobal
                                                ),
                                                'Can Be Deep': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    selectedTablePrivilege.CanBeDeep,
                                                    selectedMiscellanousPrivilege.CanBeDeep
                                                ),
                                                'Can Be Basic': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    selectedTablePrivilege.CanBeBasic,
                                                    selectedMiscellanousPrivilege.CanBeBasic
                                                ),
                                                'Can Be Local': If(
                                                    RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                                    selectedTablePrivilege.CanBeLocal,
                                                    selectedMiscellanousPrivilege.CanBeLocal
                                                )
                                            }
                                        )
                                    );
                                    If(
                                 // check if there were any errors when the Privilege risk baseline was submitted
                                        !IsEmpty(Errors('Privilege Risk Baselines')),
                                 // if true, show any error message
                                        Notify(
                                            Concat(
                                                Errors('Privilege Risk Baselines'),
                                                Column & ": " & Message
                                            ),
                                            NotificationType.Error,
                                            11111
                                        );
                                        ,
                                        Notify(
                                            DVAssessmentPageLoc.saveSettingsSuccessMessage,
                                            NotificationType.Success,
                                            5000
                                        );
                                        ClearCollect(
                                            col_DistinctTablesToFilter_temp,
                                            ForAll(
                                                Sort(
                                                    Distinct(
                                                        ActivePrivilegeRiskBaselinesRelatedToAProfile,
                                                        Table
                                                    ),
                                                    Value,
                                                    SortOrder.Ascending
                                                ),
                                                {TableName: ThisRecord.Value}
                                            )
                                        );
                                        ClearCollect(
                                            col_DistinctTablesToFilter,
                                            ForAll(
                                                Sequence(CountRows(col_DistinctTablesToFilter_temp)),
                                                Patch(
                                                    Last(
                                                        FirstN(
                                                            col_DistinctTablesToFilter_temp,
                                                            Value
                                                        )
                                                    ),
                                                    {Key: Value}
                                                )
                                            )
                                        );
                                        Collect(
                                            col_DistinctTablesToFilter,
                                            Table(
                                                {
                                                    Key: 0,
                                                    TableName: "All"
                                                }
                                            )
                                        );
                                        ClearCollect(
                                            col_RiskAssessmentsToBeUpdatedToStale,
                                            Table(
                                                ForAll(
                                                    Filter(
                                                        'Risk Assessments',
                                                        'Risk Assessments (Views)'.'All Risk Assessments',
                                                        'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId,
                                                        'Status Reason' <> 'Status Reason (Risk Assessments)'.Stale
                                                    ),
                                                    {Record: ThisRecord}
                                                )
                                            )
                                        );
                                        // Updating all the risk assessments to stale if any records exists
                            If(
                                            IsEmpty(col_RiskAssessmentsToBeUpdatedToStale),
                                            UpdateContext({showStaleMessageBar: false}),
                                            ForAll(
                                                col_RiskAssessmentsToBeUpdatedToStale,
                                                Patch(
                                                    'Risk Assessments',
                                                    ThisRecord.Record,
                                                    {
                                                        Status: 'Status (Risk Assessments)'.Inactive,
                                                        'Status Reason': 'Status Reason (Risk Assessments)'.Stale
                                                    }
                                                )
                                            );
                                            UpdateContext(
                                                {
                                                    showStaleMessageBar: true,
                                                    lblStaleMessageBarTitle: "Privilege updated successfully."
                                                }
                                            );
                                        );
                                        UpdateContext(
                                            {
                                                iscmbBUChanged: false,
                                                iscmbOrganizationChanged: false,
                                                iscmbPCBUChanged: false,
                                                iscmbUserChanged: false,
                                                selectedBaseLinePrivilegeRecord: Blank(),
                                                previousSelectedBaseLinePrivilegeRecord: Blank(),
                                                ctxPrivilegeTableEvent: "ClearSelection" & Text(Rand()),
                                                showPane: false
                                            }
                                        );
                                    );
                                )
                            );
                            UpdateContext(
                                {
                                    init: true,
                                    spinnerColorForSettings: Blank(),
                                    spinnerLabelForSettings: Blank()
                                }
                            );
                        TabIndex: =0
                        Text: ="Save"
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =true
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =1

                    btnCancelPrivilegeRiskBaseline As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Cancel"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Secondary
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =Reset(RadioGroupPrivilegeType);
                            Reset(cmbTables);
                            UpdateContext(
                                {
                                    ctxPrivilegeTableEvent: "ClearSelection" & Text(Rand()),
                                    selectedBaseLinePrivilegeRecord: Blank(),
                                    selectedTablePrivilege: Blank(),
                                    previousSelectedBaseLinePrivilegeRecord:Blank(),
                                    selectedMiscellanousPrivilege: Blank(),
                                    ctxTableEvent: "ClearSelection" & Text(Rand()),
                                    showPane: false,
                                    isRadioGroupReadOnly: false,showPaneFullScreen:false
                                }
                            );
                        TabIndex: =0
                        Text: ="Cancel"
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =true
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =2

                SelectPrivilegeContainerButtons As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =FlexOff
                    Height: =40
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =!showPrivilegeRiskContainer
                    Width: =288
                    Y: =649
                    ZIndex: =6

                    btnDone As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Done"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Primary
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: |-
                            =If(
                                CountRows(AllSelectedTableRelatedPrivileges.SelectedItems) > 0 || CountRows(AllCapabilityPrivilegesList.SelectedItems) > 0,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =Reset(txtInputSearchTablePrivileges);
                            UpdateContext(
                                {
                                    selectedPrivilegeName: If(
                                        RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                        AllSelectedTableRelatedPrivileges.Selected.PrivilegeFinalDisplayName,
                                        AllCapabilityPrivilegesList.Selected.DisplayName
                                    )
                                }
                            );
                            If(
                                !IsBlankOrError(selectedBaseLinePrivilegeRecord),
                                UpdateContext({previousSelectedBaseLinePrivilegeRecord: selectedBaseLinePrivilegeRecord});
                                ,
                                false
                            );
                            If(
                                IsBlankOrError(selectedBaseLinePrivilegeRecord) && selectedPrivilegeName = previousSelectedBaseLinePrivilegeRecord.Name,
                                UpdateContext({selectedBaseLinePrivilegeRecord: previousSelectedBaseLinePrivilegeRecord}),
                                UpdateContext({selectedBaseLinePrivilegeRecord: Blank()})
                            );
                            UpdateContext(
                                {
                                    showSelectedPrivilege: true,
                                    selectedTablePrivilege: AllSelectedTableRelatedPrivileges.Selected,
                                    selectedMiscellanousPrivilege: AllCapabilityPrivilegesList.Selected,
                                    showPrivilegeRiskContainer: !showPrivilegeRiskContainer
                                }
                            );
                            Concurrent(
                                Reset(cmbOrganization),
                                Reset(cmbPCBU),
                                Reset(cmbBU),
                                Reset(cmbUser)
                            );
                            If(
                                RadioGroupPrivilegeType.Selected.Value = TablePrivilegeText,
                                If(
                                    CountRows(
                                        Filter(
                                            TableRelatedPrivileges,
                                            RecordSelected = true
                                        )
                                    ) > 0,
                                    ForAll(
                                        Filter(
                                            TableRelatedPrivileges,
                                            RecordSelected = true
                                        ),
                                        Patch(
                                            TableRelatedPrivileges,
                                            ThisRecord,
                                            {RecordSelected: false}
                                        );
                                    ),
                                    false
                                );
                                Patch(
                                    TableRelatedPrivileges,
                                    LookUp(
                                        TableRelatedPrivileges,
                                        PrivilegeId = AllSelectedTableRelatedPrivileges.Selected.PrivilegeId
                                    ),
                                    {RecordSelected: true}
                                );
                                UpdateContext({ctxTableEvent: "ClearSelection" & Text(Rand())});
                                ,// Capability privilege
                                If(
                                    CountRows(
                                        Filter(
                                            MiscellaneousPrivileges,
                                            RecordSelected = true
                                        )
                                    ) > 0,
                                    ForAll(
                                        Filter(
                                            MiscellaneousPrivileges,
                                            RecordSelected = true
                                        ),
                                        Patch(
                                            MiscellaneousPrivileges,
                                            ThisRecord,
                                            {RecordSelected: false}
                                        );
                                    ),
                                    false
                                );
                                Patch(
                                    MiscellaneousPrivileges,
                                    LookUp(
                                        MiscellaneousPrivileges,
                                        ComponentId = AllCapabilityPrivilegesList.Selected.ComponentId
                                    ),
                                    {RecordSelected: true}
                                );
                                UpdateContext({ctxTableEvent: "ClearSelection" & Text(Rand())});
                                
                            );
                        TabIndex: =0
                        Text: ="Done"
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =true
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =1

                    btnCancelPrivilegeRiskBaseline_1 As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Cancel privilege"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Secondary
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =Reset(txtInputSearchTablePrivileges);
                            UpdateContext(
                                {
                                    showPrivilegeRiskContainer: !showPrivilegeRiskContainer,
                                    ctxTableEvent: "ClearSelection" & Text(Rand())
                                }
                            );
                        TabIndex: =0
                        Text: ="Cancel"
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =true
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =2

    cDeleteDialog As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: =ColorValue($"{AppTheme.palette.black}AA")
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Visible: =showDeleteConfirmationDialog
        Width: =Parent.Width
        ZIndex: =2

        Container19_1 As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.Regular
            Fill: =Color.White
            FillPortions: =0
            Height: =250
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =8
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =24
            PaddingLeft: =24
            PaddingRight: =24
            PaddingTop: =24
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =600
            ZIndex: =2

            Container38 As groupContainer.verticalAutoLayoutContainer:
                BorderColor: =
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Visible: =showSpinnerForConfirmationDialog
                Width: =Parent.Width
                ZIndex: =1

                Spinner3 As Spinner:
                    AccessibleLabel: ="Deleting risk rating..."
                    DisplayMode: =DisplayMode.Edit
                    Height: =200
                    Label: ="Deleting risk rating..."
                    LabelPosition: ='Spinner.LabelPosition'.Below
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    Width: =200
                    X: =0
                    Y: =0
                    ZIndex: =1

            Container24_2 As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                FillPortions: =0
                Height: =div_22.Y
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =24
                PaddingRight: =24
                Visible: =!showSpinnerForConfirmationDialog
                Width: =Parent.Width
                ZIndex: =2

                Container26 As groupContainer.horizontalAutoLayoutContainer:
                    BorderColor: =
                    BorderStyle: =BorderStyle.None
                    FillPortions: =0
                    Height: =32
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =1

                    TextCanvas2_2 As Text:
                        Align: ="Start"
                        AlignInContainer: =AlignInContainer.Start
                        AutoHeight: =false
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        Font: =""
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =20
                        TabIndex: =0
                        Text: ="Confirm deletion"
                        Tooltip: =""
                        VerticalAlign: =VerticalAlign.Middle
                        Visible: =true
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =96
                        Wrap: =true
                        X: =0
                        Y: =0
                        ZIndex: =1

                    ButtonCanvas2 As Button:
                        AccessibleLabel: ="Dismiss"
                        Appearance: ='ButtonCanvas.Appearance'.Transparent
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        Icon: ="Dismiss"
                        Layout: ='ButtonCanvas.Layout'.IconOnly
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =UpdateContext({showDeleteConfirmationDialog:false});
                        Width: =25
                        X: =0
                        Y: =0
                        ZIndex: =2

                txtConfirmation As Label:
                    AcceptsFocus: =false
                    Alignment: ="left"
                    AutoHeight: =true
                    ContentLanguage: =""
                    DisplayMode: =DisplayMode.Edit
                    Font: ="'Segoe UI', 'Open Sans', sans-serif"
                    FontSize: =16 * 0.725
                    FontWeight: ="normal"
                    Height: =32
                    Italic: =false
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    OnSelect: =false
                    Overflow: ="Hidden"
                    PaddingBottom: =0
                    PaddingEnd: =0
                    PaddingStart: =0
                    PaddingTop: =0
                    Strikethrough: =false
                    TabIndex: =0
                    Text: ="Are you sure you want to delete this privilege from the risk matrix? This action cannot be undone."
                    TextRole: ="Default"
                    Tooltip: =""
                    Underline: =false
                    VerticalAlignment: ="middle"
                    Visible: =true
                    Width: =Parent.Width - Self.X * 2
                    Wrap: =true
                    X: =0
                    Y: =0
                    ZIndex: =2

                txtImpactWarning As htmlViewer:
                    AlignInContainer: =AlignInContainer.Stretch
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: |-
                        ="<b>Impact warning</b>: <span style=color:RGBA(36,36,36,1)>Removing this privilege may affect compliance checks and risk assessments for security roles. Current risk assessments will be outdated. You must manually re-scan to ensure immediate compliance.</span>"
                    Size: =11.6
                    ZIndex: =3

                div_22 As rectangle:
                    AccessibleLabel: ="Buffer"
                    BorderColor: =App.Theme.Colors.Darker40
                    Fill: =RGBA(0,0,0,0)
                    Height: =2
                    Width: =Parent.Width - Self.X * 2
                    X: =84
                    Y: =256
                    ZIndex: =4

            Container24_3 As groupContainer.horizontalAutoLayoutContainer:
                FillPortions: =0
                Height: =45
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =24
                PaddingRight: =24
                Visible: =!showSpinnerForConfirmationDialog
                ZIndex: =3

                Container21_3 As groupContainer.horizontalAutoLayoutContainer:
                    Height: =44
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =253
                    X: =Parent.Width - Self.Width - 16
                    Y: =16
                    ZIndex: =2

                    btnCancel As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Cancel"
                        Align: =""
                        Appearance: ="Primary"
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =UpdateContext({showDeleteConfirmationDialog:false});
                        TabIndex: =0
                        Text: ="Cancel"
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =true
                        Width: =84
                        X: =375
                        Y: =0
                        ZIndex: =1

                    btnDelete As Button:
                        AcceptsFocus: =true
                        AccessibleLabel: ="Notnow"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Secondary
                        BorderStyle: =""
                        ContentLanguage: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =UpdateContext({showSpinnerForConfirmationDialog: true});
                            Remove(
                                'Privilege Risk Baselines',
                                PrivilegeRiskBaselineList.Selected
                            );
                            ClearCollect(
                                col_RiskAssessmentsToBeUpdatedToStale,
                                Table(
                                    ForAll(
                                        Filter(
                                            'Risk Assessments',
                                            'Risk Assessments (Views)'.'All Risk Assessments',
                                            'Risk Assessment Setting'.'Risk Assessment Setting' = lblSelectedAssessmentSettingId,
                                            'Status Reason' <> 'Status Reason (Risk Assessments)'.Stale
                                        ),
                                        {Record: ThisRecord}
                                    )
                                )
                            );
                            // Updating all the risk assessments to stale if any records exists
                            If(
                                IsEmpty(col_RiskAssessmentsToBeUpdatedToStale),
                                UpdateContext({showStaleMessageBar: false}),
                                ForAll(
                                    col_RiskAssessmentsToBeUpdatedToStale,
                                    Patch(
                                        'Risk Assessments',
                                        ThisRecord.Record,
                                        {
                                            Status: 'Status (Risk Assessments)'.Inactive,
                                            'Status Reason': 'Status Reason (Risk Assessments)'.Stale
                                        }
                                    )
                                );
                                UpdateContext(
                                    {
                                        showStaleMessageBar: true,
                                        lblStaleMessageBarTitle: "Privilege deleted successfully."
                                    }
                                );
                                
                            );
                            UpdateContext(
                                {
                                    showSpinnerForConfirmationDialog: false,
                                    showDeleteConfirmationDialog: false
                                }
                            );
                        TabIndex: =0
                        Text: ="Delete"
                        Tooltip: =""
                        VerticalAlign: =""
                        Visible: =true
                        Width: =84
                        X: =301
                        Y: =0
                        ZIndex: =2

    cSpinner_3 As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: |-
            =If(IsBlankOrError(spinnerColorForSettings),ColorValue("#fafafa"),spinnerColorForSettings)
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Visible: =init <> true
        Width: =Parent.Width
        ZIndex: =4

        Spinner1_3 As Spinner:
            AccessibleLabel: ="Spinner"
            DisplayMode: =DisplayMode.Edit
            Height: =Parent.Height
            Label: =spinnerLabelForSettings
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            SpinnerSize: ='Spinner.SpinnerSize'.Large
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

    DVRetrieveEntityDefinitions As DVAPITester:
        ContentLanguage: =""
        Data: ="{}"
        DisplayMode: =DisplayMode.Edit
        Height: =1
        Method: ="Get"
        OnChange: |
            =UpdateContext(
                {
                    entityDefinitionsAPIresponse: With(
                        {r: ParseJSON(Text(Self.OutputString))},
                        JSON(r.value)
                    )
                }
            );
            ClearCollect(
                EntityDefinitionsResponse,
                Table({EntityDefinitions: Table(ParseJSON(entityDefinitionsAPIresponse))})
            );
            ClearCollect(
                col_EntityDefinitions,
                {
                    EntityDefinitions: ForAll(
                        Table(First(EntityDefinitionsResponse).EntityDefinitions),
                        {
                            EntityLogicalName: Text(ThisRecord.Value.LogicalName),
                            IsActivity: ThisRecord.Value.IsActivity,
                            LocalizedLabels: ForAll(
                                ThisRecord.Value.DisplayName.LocalizedLabels,
                                {
                                    EntityMetadataId: GUID(ThisRecord.MetadataId),
                                    Label: Text(ThisRecord.Label),
                                    LanguageCode: ThisRecord.LanguageCode
                                }
                            ),
                            EntityPrivileges: ForAll(
                                ThisRecord.Value.Privileges,
                                {
                                    PrivilegeId: GUID(ThisRecord.PrivilegeId),
                                    PrivilegeName: Text(ThisRecord.Name),
                                    PrivilegeType: Text(ThisRecord.PrivilegeType),
                                    CanBeBasic: Boolean(ThisRecord.CanBeBasic),
                                    CanBeGlobal: Boolean(ThisRecord.CanBeGlobal),
                                    CanBeDeep: Boolean(ThisRecord.CanBeDeep),
                                    CanBeLocal: Boolean(ThisRecord.CanBeLocal)
                                }
                            ),
                            MetadataId: GUID(ThisRecord.Value.MetadataId)
                        }
                    )
                }
            );
            ClearCollect(
                EntityDisplayNames,
                ForAll(
                    Table(
                        Filter(
                            First(col_EntityDefinitions).EntityDefinitions,
                            (EntityLogicalName <> "cat_riskassessment" && EntityLogicalName <> "cat_riskassessmentsetting" && EntityLogicalName <> "cat_privilegeriskbaseline")
                        )
                    ),
                    {
                        MetadataId: ThisRecord.MetadataId,
                        EntityLogicalName: Text(ThisRecord.EntityLogicalName),
                        EntityDisplayName: LookUp(
                            ThisRecord.LocalizedLabels,
                            LanguageCode = 1033
                        ).Label,
                        EntityPrivileges: ThisRecord.EntityPrivileges
                    }
                )
            );
        RequestID: =Rand()
        RequestURL: ="/api/data/v9.0/EntityDefinitions?$select=Privileges,DisplayName,ObjectTypeCode,LogicalName,IsChildEntity,IsCustomizable,IsManaged,IsCustomEntity,IsBPFEntity,IsActivity,OwnershipType&api-version=9.1"
        TabIndex: =0
        Tooltip: ="DVAPITester_desc"
        Trigger: =triggerRetrieveEntityDefinitions
        Visible: =true
        Width: =1
        X: =60
        Y: =60
        ZIndex: =5

    DVRetrieveMiscellaneousPrivileges As DVAPITester:
        ContentLanguage: =""
        Data: ="{}"
        DisplayMode: =DisplayMode.Edit
        Height: =1
        Method: ="Get"
        OnChange: |
            =Set(
                roleEditorLayoutResponse,
                With(
                    {r: ParseJSON(Text(Self.OutputString))},
                    JSON(r.value)
                )
            );
            ClearCollect(
                MiscellaneousPrivileges_temp,
                Table({MiscellaneousPrivileges: Table(ParseJSON(roleEditorLayoutResponse))})
            );
            ClearCollect(
                MiscellaneousPrivileges,
                AddColumns(
                    ForAll(
                        Table(First(MiscellaneousPrivileges_temp).MiscellaneousPrivileges),
                        {
                            DisplayName: Text(ThisRecord.Value.displayname),
                            ItemType: Value(ThisRecord.Value.itemtype),
                            LogicalName: Substitute(
                                Text(ThisRecord.Value.name),
                                "prv",
                                ""
                            ),
                            PrivilegeName: Text(ThisRecord.Value.privilegename),
                            ComponentId: GUID(ThisRecord.Value.componentidunique),
                            RoleEditorLayoutId: GUID(ThisRecord.Value.roleeditorlayoutid),
                            RoleEditorHiererachyId: GUID(ThisRecord.Value._roleeditorlayouthierarchyid_value),
                            RecordSelected: false
                        }
                    ),
                    CanBeGlobal,
                    LookUp(
                        Privileges,
                        Name = PrivilegeName
                    ).CanBeGlobal,
                    CanBeDeep,
                    LookUp(
                        Privileges,
                        Name = PrivilegeName
                    ).CanBeDeep,
                    CanBeBasic,
                    LookUp(
                        Privileges,
                        Name = PrivilegeName
                    ).CanBeBasic,
                    CanBeLocal,
                    LookUp(
                        Privileges,
                        Name = PrivilegeName
                    ).CanBeLocal
                )
            );
        RequestID: =Rand()
        RequestURL: ="/api/data/v9.0/roleeditorlayouts?$select=displayname,name,entitylogicalname,privilegename,roleeditorlayoutid,itemtype,_roleeditorlayouthierarchyid_value,componentidunique&$filter=itemtype%20eq%205"
        TabIndex: =0
        Tooltip: ="DVAPITester_desc"
        Trigger: =triggerRetrieveMiscellaneousPrivileges
        Visible: =true
        Width: =1
        X: =40
        Y: =40
        ZIndex: =6

